openapi: 3.0.0
info:
  title: Journey Orchestration API
  version: 4.30.49
servers:
- url: /
security:
- ApiKeyAuth: []
tags:
- description: Manage permissions
  name: auth
- description: Manage cache on the system.
  name: cache
- description: Manage client repositories.
  name: client
- description: Manage instances in the cluster
  name: cluster
- description: Upload to and download from the cluster
  name: file
- description: Manage global parameters.
  name: globalparameter
- description: Request reports.
  name: info
- description: Cluster health
  name: health
- description: Request client licenses.
  name: license
- description: Request logs.
  name: logs
- description: "Record the traffic that is processed by rules, and manage the recordings."
  name: recording
- description: "Publish (go online), Unpublish (take offline) and list information\
    \ about published rules."
  name: rules
- description: View list and information about rulegroup.
  name: rulegroups
- description: Manage template files on the server in a versioned repository.
  name: templates
- description: Allows listing and downloading user defined test data for rules
  name: testdata
- description: Manage queues on the system.
  name: queue
paths:
  /auth/permission:
    get:
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/permissionList'
          description: A list of Permissions that the system knows about
      summary: Get a list of all permissions
      tags:
      - auth
      x-accepts: application/json
  /auth/role:
    get:
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleList'
          description: A list of Roles that the system knows about
      summary: Get a list of roles
      tags:
      - auth
      x-accepts: application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/role'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Create a new role
      tags:
      - auth
      x-content-type: application/json
      x-accepts: application/json
  /auth/role/{name}:
    delete:
      parameters:
      - description: Name of role to delete
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Remove a role
      tags:
      - auth
      x-accepts: application/json
    get:
      parameters:
      - description: The role to retrieve
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/roleList'
          description: OK
      summary: Get information about a specific role
      tags:
      - auth
      x-accepts: application/json
  /auth/role/{name}/{permission}:
    delete:
      parameters:
      - description: Role to alter
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Permission to remove from role
        explode: false
        in: path
        name: permission
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Remove permission from a role
      tags:
      - auth
      x-accepts: application/json
    post:
      parameters:
      - description: Role to alter
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Permission to add
        explode: false
        in: path
        name: permission
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Add permission to a role
      tags:
      - auth
      x-accepts: application/json
  /auth/role/{name}/client:
    get:
      parameters:
      - description: Role Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refList'
          description: OK
      summary: Get the list of clients for a role
      tags:
      - auth
      x-accepts: application/json
  /auth/role/{name}/client/{clientName}:
    delete:
      parameters:
      - description: Role Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Client that will have this role removed from it
        explode: false
        in: path
        name: clientName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Remove client from a role
      tags:
      - auth
      x-accepts: application/json
    post:
      parameters:
      - description: Role Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Client to add
        explode: false
        in: path
        name: clientName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Add client to a role
      tags:
      - auth
      x-accepts: application/json
  /auth/role/{name}/permission:
    get:
      parameters:
      - description: Role Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/permissionList'
          description: OK
      summary: Get the list of permissions granted by a specific role
      tags:
      - auth
      x-accepts: application/json
  /auth/site:
    get:
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/siteList'
          description: OK
      summary: Get a list of sites
      tags:
      - auth
      x-accepts: application/json
    post:
      requestBody:
        $ref: '#/components/requestBodies/AuthSiteData'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Create a new site
      tags:
      - auth
      x-content-type: application/json
      x-accepts: application/json
  /auth/site/{id}:
    delete:
      parameters:
      - description: Site identifer
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Remove a site
      tags:
      - auth
      x-accepts: application/json
    get:
      parameters:
      - description: The site to retrieve
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/siteList'
          description: OK
      summary: Get information about specified site
      tags:
      - auth
      x-accepts: application/json
  /auth/site/{id}/user:
    get:
      parameters:
      - description: Site identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refList'
          description: OK
      summary: Get the list of site users
      tags:
      - auth
      x-accepts: application/json
  /auth/site/{id}/user/{name}:
    delete:
      parameters:
      - description: Site identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: User to remove from site
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Remove user from a site
      tags:
      - auth
      x-accepts: application/json
    post:
      parameters:
      - description: Site identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: User Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Add user to a site
      tags:
      - auth
      x-accepts: application/json
  /auth/user:
    get:
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Do we want to retrieve details of user tokens. (default) false
          will return only token names
        explode: true
        in: query
        name: getAllDetails
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userList'
          description: OK
      summary: Get a list of users
      tags:
      - auth
      x-accepts: application/json
    post:
      requestBody:
        $ref: '#/components/requestBodies/AuthData'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Create a new user
      tags:
      - auth
      x-content-type: application/json
      x-accepts: application/json
  /auth/user/{name}:
    delete:
      parameters:
      - description: user Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Remove a user
      tags:
      - auth
      x-accepts: application/json
    get:
      parameters:
      - description: The user to retrieve
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Do we want to retrieve details of user tokens. (default) false
          will return only token names
        explode: true
        in: query
        name: getAllDetails
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userList'
          description: OK
      summary: Get information about specified user
      tags:
      - auth
      x-accepts: application/json
  /auth/user/{name}/client:
    get:
      parameters:
      - description: user Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refList'
          description: OK
      summary: Get the list of clients to which a user has been granted access
      tags:
      - auth
      x-accepts: application/json
  /auth/user/{name}/client/{clientName}:
    delete:
      parameters:
      - description: user Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Client to remove from user
        explode: false
        in: path
        name: clientName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Remove client access from user
      tags:
      - auth
      x-accepts: application/json
    post:
      parameters:
      - description: User Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Client name
        explode: false
        in: path
        name: clientName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Add client access to user
      tags:
      - auth
      x-accepts: application/json
  /auth/user/{name}/permission:
    get:
      parameters:
      - description: user Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/permissionList'
          description: OK
      summary: Get the list of user permission
      tags:
      - auth
      x-accepts: application/json
  /auth/user/{name}/permission/{permission}:
    delete:
      parameters:
      - description: user Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Permission to remove from user
        explode: false
        in: path
        name: permission
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Remove permission from a user
      tags:
      - auth
      x-accepts: application/json
    post:
      parameters:
      - description: User Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Permission to add to user
        explode: false
        in: path
        name: permission
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Add permission to a user
      tags:
      - auth
      x-accepts: application/json
  /auth/user/{name}/role:
    get:
      parameters:
      - description: user Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/refList'
          description: OK
      summary: Get the list of the roles which have been assigned to a user
      tags:
      - auth
      x-accepts: application/json
  /auth/user/{name}/role/{roleName}:
    delete:
      parameters:
      - description: user Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Role to remove from user
        explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Remove role from a user
      tags:
      - auth
      x-accepts: application/json
    post:
      parameters:
      - description: user Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Role to add
        explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Assign role to user
      tags:
      - auth
      x-accepts: application/json
  /auth/user/{name}/token/{tokenName}:
    delete:
      parameters:
      - description: user Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Descriptive name for the token
        explode: false
        in: path
        name: tokenName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Remove static access token from user
      tags:
      - auth
      x-accepts: application/json
    post:
      parameters:
      - description: User Name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Descriptive name for the token
        explode: false
        in: path
        name: tokenName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Add static access token to user
      tags:
      - auth
      x-accepts: application/json
  /cache/{client}:
    get:
      description: "Get information about cache tables, filtered by client."
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheDetailsResponse'
            text/csv: {}
          description: OK
      summary: "Get information about cache tables, filtered by client."
      tags:
      - cache
      x-accepts: "application/json,text/csv"
  /cache/{client}/{target}:
    get:
      description: "Get information about cache tables, filtered by client and target."
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: "If you only want a certain type of table, provide it here"
        explode: true
        in: query
        name: tabletype
        required: false
        schema:
          $ref: '#/components/schemas/TableTypeEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheDetailsResponse'
            text/csv: {}
          description: OK
      summary: "Get information about cache tables, filtered by client and target."
      tags:
      - cache
      x-accepts: "application/json,text/csv"
  /cache/{client}/{target}/{table}:
    delete:
      description: Removes data from a cache table.
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Table name
        explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      - description: "Key to delete from cache tables; provide DELETE_ALL to clear\
          \ the table and DESTROY_TABLE if you would \r\nlike to remove the table.\
          \  Note, there is no recovery for these actions and removing a table which\
          \ is used will cause \r\nyour rules to cease functioning."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: "Values for clustering keys. If the table has a composite key,\
          \ provide the values in order."
        explode: true
        in: query
        name: keys
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheApiResponse'
          description: OK
      summary: Delete data from a cache table.
      tags:
      - cache
      x-accepts: application/json
    get:
      description: Get information about a specific cache table.
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Table name
        explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      - description: "If you want a row of data to be returned, provide the partition\
          \ key"
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: "Values for clustering keys. If the table has a composite key,\
          \ provide the values in order."
        explode: true
        in: query
        name: keys
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: return a sample of n rows from the table
        explode: true
        in: query
        name: sample
        required: false
        schema:
          type: integer
        style: form
      - description: Would you like the data pivoted? (Only for CSV report)
        explode: true
        in: query
        name: pivot
        required: false
        schema:
          type: boolean
        style: form
      - description: "If this is a fieldvalue type table, you can ask for a list of\
          \ keys or values.  If you specify \r\nfieldvalues, you must also provide\
          \ a key"
        explode: true
        in: query
        name: fieldvalue
        required: false
        schema:
          enum:
          - keyvalues
          - fieldvalues
          type: string
        style: form
      - description: "If you are asking for a list of values from a fieldvalue table,\
          \ you can request to return only the \r\nmost recent, limited to this number.\
          \  If not provided, a system limit will be used."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheDetailsResponse'
            text/csv: {}
          description: OK
      summary: Get information about a specific cache table.
      tags:
      - cache
      x-accepts: "application/json,text/csv"
  /cache/{client}/{target}/{table}/{column}:
    delete:
      description: Removes a column from a cache table.
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Table name
        explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      - description: Column name
        explode: false
        in: path
        name: column
        required: true
        schema:
          type: string
        style: simple
      - description: "Pass DESTROY_COLUMN if you would like to remove a column.  Note,\
          \ there is no recovery for these \r\nactions and removing a column which\
          \ is used will cause your rules to cease functioning."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: "Values for clustering keys. If the table has a composite key,\
          \ provide the values in order."
        explode: true
        in: query
        name: keys
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheApiResponse'
          description: OK
      summary: Delete column from a cache table.
      tags:
      - cache
      x-accepts: application/json
  /cache/{client}/{target}/{table}/columns:
    delete:
      description: Removes the columns and tables that are no longer used by any of
        the rules
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Table name
        explode: false
        in: path
        name: table
        required: true
        schema:
          type: string
        style: simple
      - description: "By default API works in preview mode and returns a list of cache\
          \ columns and tables that would be \r\ndropped. Only when preview set to\
          \ false the columns are actually dropped"
        explode: true
        in: query
        name: preview
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheApiDeleteResponse'
          description: OK
      summary: Delete unused cache table and columns
      tags:
      - cache
      x-accepts: application/json
  /cache/{client}/{target}/execute:
    post:
      description: "insert, select, update or delete a single row of data from a single\
        \ table"
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ExecuteCQL'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheExecuteResponse'
            text/csv: {}
          description: OK
      summary: Execute a limited set of cql commands against the cache
      tags:
      - cache
      x-content-type: application/json
      x-accepts: "application/json,text/csv"
  /cache/{client}/{target}/table:
    post:
      description: Ensure that the cache table includes at least the set of columns
        requested
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ExecuteDDL'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheChangesResponse'
            text/csv: {}
          description: OK
      summary: Alter a cache table
      tags:
      - cache
      x-content-type: application/json
      x-accepts: "application/json,text/csv"
  /client:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
          description: OK
      summary: "Get a list of all clients that your login can access, and all permissions\
        \ that you have"
      tags:
      - client
      x-accepts: application/json
  /client/{client}:
    delete:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete all client files that have been uploaded to the server.
      tags:
      - client
      x-accepts: application/json
    get:
      parameters:
      - description: "client name, you can use * to return all clients to which your\
          \ account has access"
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: "Return back the entire client in a zip (compresses everything\
          \ except files).  Requires ALL \r\npermissions.  Note, you cannot use a\
          \ wildcard with this option."
        explode: true
        in: query
        name: aszip
        required: false
        schema:
          type: boolean
        style: form
      - description: "If this is true, it will return just the client list in the\
          \ data property and exclude permissions, \r\netc. from the result.  Useful\
          \ if you simply want a list of clients."
        explode: true
        in: query
        name: asdata
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
          description: OK
      summary: Returns extended details about a client.
      tags:
      - client
      x-accepts: application/json
    post:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Updates a client's parameters
      tags:
      - client
      x-content-type: application/json
      x-accepts: application/json
    put:
      parameters:
      - description: "Client name, must begin with a letter, can only contain alphanumerics\
          \ and hyphens, and must be no \r\nmore than 40 characters long"
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Create a new client.
      tags:
      - client
      x-content-type: application/json
      x-accepts: application/json
  /client/{client}/alias:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
          description: OK
      summary: Returns back all aliases which have been defined for a client
      tags:
      - client
      x-accepts: application/json
  /client/{client}/alias/{aliasName}:
    delete:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the alias
        explode: false
        in: path
        name: aliasName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Deletes a specific alias from the client
      tags:
      - client
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the alias
        explode: false
        in: path
        name: aliasName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Returns back information about a specific alias
      tags:
      - client
      x-accepts: application/json
  /client/{client}/alias/{aliasName}/{target}/{ruleorgroup}:
    post:
      parameters:
      - description: "Client name, must begin with a letter, can only contain alphanumerics\
          \ and hyphens, and must be no \r\nmore than 40 characters long"
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the alias
        explode: false
        in: path
        name: aliasName
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the rule or rule group to which this alias should
          point
        explode: false
        in: path
        name: ruleorgroup
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Creates or updates an alias
      tags:
      - client
      x-accepts: application/json
    put:
      parameters:
      - description: "Client name, must begin with a letter, can only contain alphanumerics\
          \ and hyphens, and must be no \r\nmore than 40 characters long"
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the alias
        explode: false
        in: path
        name: aliasName
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the rule or rule group to which this alias should
          point
        explode: false
        in: path
        name: ruleorgroup
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAndStatusResponse'
          description: OK
      summary: "Create a new alias, must not exist."
      tags:
      - client
      x-accepts: application/json
  /client/{client}/copy/{destination}:
    put:
      parameters:
      - description: The source client
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The new client name
        explode: false
        in: path
        name: destination
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Copy an existing client to a client with a new name
      tags:
      - client
      x-accepts: application/json
  /client/copy/{source}:
    put:
      deprecated: true
      parameters:
      - description: Source client name
        explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - description: The new client name
        explode: true
        in: query
        name: destination
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Copy an existing client to a client with a new name
      tags:
      - client
      x-accepts: application/json
  /cluster:
    delete:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResponse'
          description: OK
      summary: Removes from the cluster a down node that has not been seen for the
        longest
      tags:
      - cluster
      x-accepts: application/json
    get:
      parameters:
      - description: Also ping the other instances in the cluster to check that they
          are present.
        explode: true
        in: query
        name: update
        required: false
        schema:
          type: boolean
        style: form
      - description: "Request an immediate repair so this instance will definitely\
          \ contain the same rules, templates, etc \r\nas the other instances in this\
          \ cluster. Only works if all instances are up"
        explode: true
        in: query
        name: repair
        required: false
        schema:
          type: boolean
        style: form
      - description: Include extended details
        explode: true
        in: query
        name: includeSettings
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResponse'
          description: OK
      summary: Find out what instances are in the cluster
      tags:
      - cluster
      x-accepts: application/json
    post:
      requestBody:
        $ref: '#/components/requestBodies/ClusterPost'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResponse'
          description: OK
      summary: Register an instance with the cluster
      tags:
      - cluster
      x-content-type: application/json
      x-accepts: application/json
    put:
      requestBody:
        $ref: '#/components/requestBodies/ClusterSettingBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Update an advanced cluster setting
      tags:
      - cluster
      x-content-type: application/json
      x-accepts: application/json
  /cluster/decommission:
    delete:
      parameters:
      - description: "Must match the private IP address of the node, so there is no\
          \ ambiguity when decommissioning"
        explode: true
        in: query
        name: targetnode
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResponse'
          description: OK
      summary: Remove this node from the cluster
      tags:
      - cluster
      x-accepts: application/json
  /cluster/flush:
    post:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Make sure all data in internal caches across the entire cluster are
        written to disk
      tags:
      - cluster
      x-accepts: application/json
  /cluster/reregister:
    post:
      requestBody:
        content:
          application/text:
            schema:
              type: string
            example: null
        description: "Optional address of one seed node to register with. Same syntax\
          \ as seed parameter in web.xml, \r\nipaddress:port"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResponse'
          description: OK
      summary: Make this note reregister itself with all the other nodes in the cluster
        without requiring a restart
      tags:
      - cluster
      x-content-type: application/text
      x-accepts: application/json
  /cluster/discover:
    post:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResponse'
          description: OK
      summary: Ask the cluster to rerun the discovery process.
      tags:
      - cluster
      x-accepts: application/json
  /cluster/stream:
    get:
      parameters:
      - description: "Which instance (identified by host name) do you want to query?\
          \ Leave blank to pick an instance \r\nrandomly"
        explode: true
        in: query
        name: targetnode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStreamResponse'
          description: OK
      summary: Find out the streaming status of an instance in the cluster
      tags:
      - cluster
      x-accepts: application/json
  /cluster/stream/throughput:
    get:
      parameters:
      - description: "Which instance (identified by host name) do you want to query?\
          \ Leave blank to pick an instance \r\nrandomly"
        explode: true
        in: query
        name: targetnode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterThroughputResponse'
          description: OK
      summary: Find out the current stream throughput (Mb per sec) of an instance
        in the cluster
      tags:
      - cluster
      x-accepts: application/json
    post:
      parameters:
      - description: "Which instance (identified by host name) do you want to query?\
          \ Leave blank to pick an instance \r\nrandomly"
        explode: true
        in: query
        name: targetnode
        required: false
        schema:
          type: string
        style: form
      - description: The maximum data rate in Mb/s that this node can send across
          all streams.
        explode: true
        in: query
        name: throughput
        required: true
        schema:
          default: 50
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterThroughputResponse'
          description: OK
      summary: Set the current stream throughput (Mb per sec) of an instance in the
        cluster
      tags:
      - cluster
      x-accepts: application/json
  /download/globalparameter/{client}/{paramname}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: parameter name
        explode: false
        in: path
        name: paramname
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: A uuencoded octet stream containing the rule group JSON file
      summary: Download global parameter
      tags:
      - globalparameter
      x-accepts: application/octet-stream
  /download/rule/{target}/{client}/{rulename}:
    get:
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: A uuencoded octet stream containing the rule ktr file
      summary: Download the rule file (KTR) for a running rule
      tags:
      - rules
      x-accepts: application/octet-stream
  /download/rulegroup/{client}/{target}/{rulegroupname}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the rule group
        explode: false
        in: path
        name: rulegroupname
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: A uuencoded octet stream containing the JSON file
      summary: Download the rulegroup file (JSON)
      tags:
      - rulegroups
      x-accepts: application/octet-stream
  /download/template/{client}/{templatename}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the template
        explode: false
        in: path
        name: templatename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: A uuencoded octet stream containing the template ktr file
      summary: Download the rule file for a specific version of a specific template
        for a specific client
      tags:
      - templates
      x-accepts: application/octet-stream
  /download/template/{client}/{templatename}/{version}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the template
        explode: false
        in: path
        name: templatename
        required: true
        schema:
          type: string
        style: simple
      - description: A uuencoded octet stream containing the template ktr file
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: A uuencoded octet stream containing the template ktr file
      summary: Download the rule file for a specific version of a specific template
        for a specific client
      tags:
      - templates
      x-accepts: application/octet-stream
  /download/testdata/{target}/{client}/{rulename}:
    get:
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: A uuencoded octet stream containing the test data JSON file
      summary: Download user defined test data for a specific rule as JSON
      tags:
      - testdata
      x-accepts: application/octet-stream
  /file/{client}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Filter results to those which contain this text
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Lists files
      tags:
      - file
      x-accepts: application/json
  /file/{client}/{target}:
    get:
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Filter results to those which contain this text
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Lists files
      tags:
      - file
      x-accepts: application/json
  /file/{client}/{target}/{filename}:
    delete:
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: file name
        explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: A binary stream containing the file
      summary: Remove a file from the server
      tags:
      - file
      x-accepts: application/json
    get:
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: file name
        explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      - description: Filter results to those which contain this text
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: A binary stream containing the file
      summary: Download a file from the server
      tags:
      - file
      x-accepts: application/json
    post:
      parameters:
      - description: Target for the file
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: file name
        explode: false
        in: path
        name: filename
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_file__client___target___filename__post_request'
      responses:
        "200":
          description: A binary stream containing the file
      summary: Upload a file to the server
      tags:
      - file
      x-content-type: multipart/form-data
      x-accepts: application/json
  /globalparameter:
    get:
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: "List of comma-separated values, by which the returned rules\
          \ will be sorted by. The possible values \r\nare: name, client, description,\
          \ businessGoal, dataType, isConfidential, isVisible, isEditable, isForcedValue."
        explode: true
        in: query
        name: sortProperty
        required: false
        schema:
          type: string
        style: form
      - description: "List of comma-separated true/false values indicating either\
          \ ascending (false) or descending (true) \r\norder of each sortProperty"
        explode: true
        in: query
        name: sortDescending
        required: false
        schema:
          type: string
        style: form
      - description: Filter results to those which contain this text
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          type: string
        style: form
      - description: Only include these client(s)
        explode: true
        in: query
        name: iClients
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/parameterList'
          description: A list of Roles that the system knows about
      summary: Get global parameters for all clients
      tags:
      - globalparameter
      x-accepts: application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/parameter'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterApiResponse'
          description: OK
      summary: Create Global Parameter (will fail if already exists)
      tags:
      - globalparameter
      x-content-type: application/json
      x-accepts: application/json
  /globalparameter/{client}:
    get:
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: "List of comma-separated values, by which the returned rules\
          \ will be sorted by. The possible values \r\nare: name, client, description,\
          \ businessGoal, dataType, isConfidential, isVisible, isEditable, isForcedValue."
        explode: true
        in: query
        name: sortProperty
        required: false
        schema:
          type: string
        style: form
      - description: "List of comma-separated true/false values indicating either\
          \ ascending (false) or descending (true) \r\norder of each sortProperty"
        explode: true
        in: query
        name: sortDescending
        required: false
        schema:
          type: string
        style: form
      - description: Filter results to those which contain this text
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          type: string
        style: form
      - description: Only include these client(s)
        explode: true
        in: query
        name: iClients
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/parameterList'
          description: A list of Roles that the system knows about
      summary: Get target parameter for for specific client
      tags:
      - globalparameter
      x-accepts: application/json
  /globalparameter/{client}/{paramname}:
    delete:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: parameter name
        explode: false
        in: path
        name: paramname
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: A list of Roles that the system knows about
      summary: Delete a global parameter
      tags:
      - globalparameter
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: parameter name
        explode: false
        in: path
        name: paramname
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/parameterList'
          description: A list of Roles that the system knows about
      summary: Get individual Global Parameter
      tags:
      - globalparameter
      x-accepts: application/json
    put:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: parameter name
        explode: false
        in: path
        name: paramname
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/parameter'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterApiResponse'
          description: OK
      summary: Update Global Parameter
      tags:
      - globalparameter
      x-content-type: application/json
      x-accepts: application/json
  /globalparameter/{client}/{paramname}/copy:
    post:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: parameter name
        explode: false
        in: path
        name: paramname
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterCopyDetails'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterApiResponse'
          description: OK
      summary: "Create a copy of a Global Parameter and, optionally, delete the original"
      tags:
      - globalparameter
      x-content-type: application/json
      x-accepts: application/json
    put:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: parameter name
        explode: false
        in: path
        name: paramname
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterCopyDetails'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterApiResponse'
          description: OK
      summary: "Create a copy of a Global Parameter overwriting the target if it exists\
        \ and, optionally, delete the original"
      tags:
      - globalparameter
      x-content-type: application/json
      x-accepts: application/json
  /health:
    get:
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Find out the health of this node
      tags:
      - health
      x-accepts: application/json
  /health/watchdog:
    post:
      parameters:
      - description: Which watchdog checks would you like to trigger?
        explode: false
        in: path
        name: check
        required: true
        schema:
          default: all
          enum:
          - all
          - normal
          - daily
          - consistency
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: "Trigger a watchdog check immediately, instead of waiting for the regular\
        \ polling cycle"
      tags:
      - health
      x-accepts: application/json
  /info/auditlog/{client}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Filters on target
        explode: true
        in: query
        name: target
        required: false
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogReportResponse'
          description: OK
      summary: Get audit log report
      tags:
      - info
      x-accepts: application/json
  /info/cachedata/{client}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: false
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Filters on target
        explode: true
        in: query
        name: target
        required: false
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: form
      - description: Filter for specific rule name
        explode: true
        in: query
        name: rulename
        required: false
        schema:
          type: string
        style: form
      - description: Get only cache read or writes
        explode: true
        in: query
        name: cachedirection
        required: false
        schema:
          $ref: '#/components/schemas/CacheDirectionEnum'
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheDataReportResponse'
          description: OK
      summary: Get cache data report
      tags:
      - info
      x-accepts: application/json
  /info/cacheunusedcolumns/{client}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Filters on target
        explode: true
        in: query
        name: target
        required: false
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CacheUnusedColumnsReportResponse'
          description: OK
      summary: Get a report on all the cache columns that are no longer used by any
        rules
      tags:
      - info
      x-accepts: application/json
  /info/clientaccessreport/{client}:
    get:
      parameters:
      - description: "Which client would you like the report for? You must be able\
          \ to access this client \r\nto report on it."
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Should users with access to all clients be included
        explode: true
        in: query
        name: includeClientAll
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Should users with permission ALL be included
        explode: true
        in: query
        name: includePermissionAll
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientAccessReportResponse'
          description: OK
      summary: Report on the users able to access given client
      tags:
      - info
      x-accepts: application/json
  /info/consistencyreport:
    get:
      description: Compares this nodes resources with other nodes to see if node has
        latest information
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsistencyReportResponse'
          description: OK
      summary: Get the consistency report
      tags:
      - info
      x-accepts: application/json
  /info/conversationusagereport/{client}/{timeseries}:
    get:
      parameters:
      - description: "Which client would you like the report for? You must be able\
          \ to access this client \r\nto report on it."
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: "Report on either the last 60 minutes, the last 48 hours or the\
          \ last 60 days"
        explode: false
        in: path
        name: timeseries
        required: true
        schema:
          $ref: '#/components/schemas/timeseries'
        style: simple
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationUsageReportResponse'
          description: OK
      summary: Report on the conversation usage by a specific client
      tags:
      - info
      x-accepts: application/json
  /info/fieldusage/{target}/{client}/{rulename}:
    get:
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      - description: Should fields that have been renamed be merged together?
        explode: true
        in: query
        name: mergefields
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldUsageReportResponse'
          description: OK
      summary: "Report on how fields are created, read and written within a rule"
      tags:
      - info
      x-accepts: application/json
  /info/flow/{target}/{client}/{rulename}:
    get:
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowReportResponse'
          description: OK
      summary: "Get the JSON representation of the steps within a rule, suitable for\
        \ displaying as a flowchart"
      tags:
      - info
      x-accepts: application/json
  /info/globalparamreport/{client}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: false
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Get the report for a specific parameter
        explode: true
        in: query
        name: parameterName
        required: false
        schema:
          type: string
        style: form
      - description: Get the report for a specific parameter's value
        explode: true
        in: query
        name: parameterValue
        required: false
        schema:
          type: string
        style: form
      - description: "Only include global parameters. When false will also list rules\
          \ that would use global parameter if \r\none with given name was created"
        explode: true
        in: query
        name: onlyGlobalParameters
        required: false
        schema:
          type: boolean
        style: form
      - description: "When listing rules using global parameters, should we also list\
          \ all the parameters used in the rule. If not provided then true"
        explode: true
        in: query
        name: includeParameterDetails
        required: false
        schema:
          type: boolean
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalParameterReportResponse'
          description: OK
      summary: Get report on global parameters
      tags:
      - info
      x-accepts: application/json
  /info/internalrulecallreport/{client}/{target}/{rulename}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalRuleCallReportResponse'
          description: OK
      summary: "For a given rule, find all the rules that call this rule internally"
      tags:
      - info
      x-accepts: application/json
  /info/logged404s/{client}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: false
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Limit the number of results returned. By default set to 100 when
          not provided.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logged404sReportResponse'
          description: OK
      summary: Get report on logged 404 errors
      tags:
      - info
      x-accepts: application/json
  /info/resourceexistsreport:
    post:
      requestBody:
        content:
          application/json:
            schema:
              example:
              - rule/target/client/rulename
              - template/client/templatename
              - queue/client/target/queuename
              - globalparameter/client/globalparametername
              - rulegroup/client/target/rulegroupname
              items:
                description: "A resource URL prefixed by type. Supports rule, template,\
                  \ queue, globalparameter, and rulegroup."
                type: string
              type: array
        description: "A JSON array of any number of resource URLs prefixed by type.\
          \ Supports rule, template, queue, globalparameter, and rulegroup."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceExistsReportResponse'
          description: OK
      summary: "Pass in an array of any size containing resource URL's (rules, templates,\
        \ etc) to see if they exist and can be accessed by this user."
      tags:
      - info
      x-content-type: application/json
      x-accepts: application/json
  /info/rulecomplexityreport/{client}:
    get:
      parameters:
      - description: "Which client would you like the report for? You must be able\
          \ to access this client \r\nto report on it."
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Filters on target
        explode: true
        in: query
        name: target
        required: false
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleComplexityReportResponse'
          description: OK
      summary: Report on the complexity of the various rules for a client
      tags:
      - info
      x-accepts: application/json
  /info/snooze:
    get:
      parameters:
      - description: Filters on target
        explode: true
        in: query
        name: target
        required: false
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnoozeReportResponse'
          description: OK
      summary: Report on whether rules can be snoozed
      tags:
      - info
      x-accepts: application/json
  /info/steptypestatistics:
    delete:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Clear the execution statistics histogram for all step types
      tags:
      - info
      x-accepts: application/json
    get:
      parameters:
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StepTypeStatisticsReportResponse'
          description: OK
      summary: Find out the execution statistics histogram for each step type
      tags:
      - info
      x-accepts: application/json
  /info/steptypeusagereport/{client}:
    get:
      parameters:
      - description: "Which client would you like the report for? You must be able\
          \ to access this client \r\nto report on it."
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Filters on target
        explode: true
        in: query
        name: target
        required: false
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StepTypeUsageReportResponse'
          description: OK
      summary: Report on the steps being used by this client
      tags:
      - info
      x-accepts: application/json
  /info/stepusagereport/{client}/{stepname}:
    get:
      parameters:
      - description: type of step that must exist in the rules returned
        explode: false
        in: path
        name: stepname
        required: true
        schema:
          type: string
        style: simple
      - description: "Which client would you like the report for? You must be able\
          \ to access this client \r\nto report on it."
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Filters on target
        explode: true
        in: query
        name: target
        required: false
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: form
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StepUsageReportResponse'
          description: OK
      summary: Find out which rules are using a specific step type
      tags:
      - info
      x-accepts: application/json
  /info/templatecolumnreport/{client}:
    get:
      parameters:
      - description: "Which client would you like the report for? You must be able\
          \ to access this client \r\nto report on it."
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateColumnReportResponse'
          description: OK
      summary: Report on the names of the columns in the cache used by templates
      tags:
      - info
      x-accepts: application/json
  /info/templateinputreport/{client}:
    get:
      parameters:
      - description: "Which client would you like the report for? You must be able\
          \ to access this client \r\nto report on it."
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Name of input fields to search for
        explode: true
        in: query
        name: inputFields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Do we want to check all template versions or only latest?
        explode: true
        in: query
        name: allversions
        required: false
        schema:
          type: boolean
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateInputReportResponse'
          description: OK
      summary: List all templates that expect given input fields
      tags:
      - info
      x-accepts: application/json
  /info/templateusagereport/{client}/{templatename}:
    get:
      parameters:
      - description: Filter the rules returned to only this client. Use * to match
          all clients
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the template that is used by the rule
        explode: false
        in: path
        name: templatename
        required: true
        schema:
          type: string
        style: simple
      - description: Filter to only templates with this client
        explode: true
        in: query
        name: templateClient
        required: false
        schema:
          type: string
        style: form
      - description: Filter to only templates with this version
        explode: true
        in: query
        name: templateVersion
        required: false
        schema:
          type: string
        style: form
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Filters on target
        explode: true
        in: query
        name: target
        required: false
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateUsageReportResponse'
          description: OK
      summary: Find a list of rules which use a specific template
      tags:
      - info
      x-accepts: application/json
  /info/templatevalidityreport/{client}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: false
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateValidityReportResponse'
          description: OK
      summary: Reports on validity of uploaded templates
      tags:
      - info
      x-accepts: application/json
  /info/tokenusereport:
    get:
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Optional query parameter to specify the user
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      - description: Optional token for which to obtain the last used report
        explode: false
        in: header
        name: token
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenUseReportResponse'
          description: OK
      summary: Reports on token access and last used date.
      tags:
      - info
      x-accepts: application/json
  /info/workerthreadusage:
    get:
      description: Worker threads execute steps within rules. This report shows what
        they are doing
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerThreadUsageReportResponse'
          description: OK
      summary: Worker thread usage
      tags:
      - info
      x-accepts: application/json
  /license:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/licenseList'
          description: OK
      summary: Get all licenses for all clients that your login can access
      tags:
      - license
      x-accepts: application/json
  /license/{client}:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/licenseList'
          description: OK
      summary: Get all licenses for the specified client
      tags:
      - license
      x-accepts: application/json
  /license/{client}/{license}:
    delete:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: License to delete
        explode: false
        in: path
        name: license
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete specified license
      tags:
      - license
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: License to get
        explode: false
        in: path
        name: license
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/licenseList'
          description: OK
      summary: Get a specific license
      tags:
      - license
      x-accepts: application/json
    post:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: "License name to post; has the same name requirements as the\
          \ name of a rule; must not contain invalid \r\ncharacters like \"..\", etc."
        explode: false
        in: path
        name: license
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/licenseData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Create a new license
      tags:
      - license
      x-content-type: application/json
      x-accepts: application/json
    put:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: "License name to put; has the same name requirements as the name\
          \ of a rule; must not contain invalid \r\ncharacters like \"..\", etc."
        explode: false
        in: path
        name: license
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/LicenseData'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Create or update a license
      tags:
      - license
      x-content-type: application/json
      x-accepts: application/json
  /license/{client}/active:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/licenseList'
          description: OK
      summary: Get the currently active license for a client
      tags:
      - license
      x-accepts: application/json
  /logs/{type}/{target}/{client}:
    get:
      description: Provide a search string to search for
      parameters:
      - description: What kind of logging do you want to see?
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/logType'
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The phrase to search for in the logs
        explode: true
        in: query
        name: searchPhrase
        required: true
        schema:
          type: string
        style: form
      - description: Sequence Number to identify rule invoke logs
        explode: true
        in: query
        name: sequenceNumber
        required: false
        schema:
          type: string
        style: form
      - description: "Template url, if you want to filter your request by template\
          \ url"
        explode: true
        in: query
        name: templateUrl
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Pick the source of the logs. Currently only elastic search is
          supported
        explode: true
        in: query
        name: source
        required: false
        schema:
          $ref: '#/components/schemas/logSource'
        style: form
      - description: if true then returns csv file
        explode: true
        in: query
        name: csv
        required: false
        schema:
          type: boolean
        style: form
      - description: "If you want to filter your request by date range, this is the\
          \ starting date for the time period, \r\nplease provide in ISO-8601 (YYYY-MM-DDThh:mm:ssZ)\
          \  All times are UTC."
        explode: true
        in: query
        name: startdate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "If you want to filter your request by date range, this is the\
          \ ending date for the time period, please \r\nprovide in ISO-8601 (YYYY-MM-DDThh:mm:ssZ)\
          \  All times are UTC."
        explode: true
        in: query
        name: enddate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsApiResponse'
            text/csv:
              schema:
                type: string
          description: OK
      summary: Search across logs for this client and target
      tags:
      - logs
      x-accepts: "application/json,text/csv"
  /logs/{type}/{target}/{client}/{rulename}:
    get:
      description: If you haven't invoked the rule since you started logging then
        the writetolog list will always be empty.
      parameters:
      - description: What kind of logging do you want to see?
        explode: false
        in: path
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/logTypeOrTimeseries'
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      - description: The phrase to search for in the logs
        explode: true
        in: query
        name: searchPhrase
        required: false
        schema:
          type: string
        style: form
      - description: Lucene query string to apply
        explode: true
        in: query
        name: searchQuery
        required: false
        schema:
          type: string
        style: form
      - description: Sequence Number to identify rule invoke logs
        explode: true
        in: query
        name: sequenceNumber
        required: false
        schema:
          type: string
        style: form
      - description: "The name of the tile, if you want to filter your request by\
          \ tile name"
        explode: true
        in: query
        name: tileName
        required: false
        schema:
          type: string
        style: form
      - description: "The id of the tile, if you want to filter your request by tile\
          \ id"
        explode: true
        in: query
        name: tileId
        required: false
        schema:
          type: string
        style: form
      - description: "Template url, if you want to filter your request by template\
          \ url"
        explode: true
        in: query
        name: templateUrl
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Pick the source of the logs. Currently only elastic search is
          supported
        explode: true
        in: query
        name: source
        required: false
        schema:
          $ref: '#/components/schemas/logSource'
        style: form
      - description: if true then returns csv file
        explode: true
        in: query
        name: csv
        required: false
        schema:
          type: boolean
        style: form
      - description: "If you want to filter your request by date range, this is the\
          \ starting date for the time period, \r\nplease provide in ISO-8601 (YYYY-MM-DDThh:mm:ssZ)\
          \  All times are UTC."
        explode: true
        in: query
        name: startdate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "If you want to filter your request by date range, this is the\
          \ ending date for the time period, please \r\nprovide in ISO-8601 (YYYY-MM-DDThh:mm:ssZ)\
          \  All times are UTC."
        explode: true
        in: query
        name: enddate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsApiResponse'
            text/csv:
              schema:
                type: string
          description: OK
      summary: Get logs that have been recorded for this rule
      tags:
      - logs
      x-accepts: "application/json,text/csv"
  /queue:
    get:
      description: Get information about all queues that this user can access.
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Should the results include the execution statistics for each
          rule? Default true
        explode: true
        in: query
        name: includeStatistics
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueResponse'
          description: OK
      summary: Get information about all queues on the server.
      tags:
      - queue
      x-accepts: application/json
  /queue/{client}/:
    delete:
      description: "Delete all queues that this client owns, across all targets."
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete all queues that this client owns.
      tags:
      - queue
      x-accepts: application/json
    get:
      description: "Find the full details of all queues that this client owns, across\
        \ all targets"
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Should the results include the execution statistics for each
          rule? Default true
        explode: true
        in: query
        name: includeStatistics
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueResponse'
          description: OK
      summary: "Get all of the queues for a specific client, across all targets."
      tags:
      - queue
      x-accepts: application/json
  /queue/{client}/{target}/:
    delete:
      description: Delete all of the queues within a specific target for the given
        client
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete all of the queues within a specific target for the given client
      tags:
      - queue
      x-accepts: application/json
    get:
      description: Get details about all of the queues within a specific target for
        this client.
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Should the results include the execution statistics for each
          rule? Default true
        explode: true
        in: query
        name: includeStatistics
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueResponse'
          description: OK
      summary: Get details about all of the queues within a specific target for this
        client.
      tags:
      - queue
      x-accepts: application/json
  /queue/{client}/{target}/{queueName}:
    delete:
      description: Delete a queue and all the messages within it
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the queue that should be deleted.
        explode: false
        in: path
        name: queueName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete a specific named queue
      tags:
      - queue
      x-accepts: application/json
    get:
      description: Information returned is filtered by user permissions.
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of queue that you want to get the information for.
        explode: false
        in: path
        name: queueName
        required: true
        schema:
          default: ""
          type: string
        style: simple
      - description: Should the results include the execution statistics for each
          rule? Default true
        explode: true
        in: query
        name: includeStatistics
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueResponse'
          description: OK
      summary: Gets information about a specific named queue.
      tags:
      - queue
      x-accepts: application/json
    post:
      description: Used for creating a new queue.
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is what the queue will be tagged with.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the queue that should be created.
        explode: false
        in: path
        name: queueName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/QueueDefinition'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAndStatusResponse'
          description: OK
      summary: "Create a new queue, passing a block of JSON that is associated with\
        \ the queue"
      tags:
      - queue
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "Edit the block of JSON that is associated with the queue. This\
        \ is only permitted if the queue is empty \r\n(has zero messages)"
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is what the queue will be tagged with.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the queue that should be created.
        explode: false
        in: path
        name: queueName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/QueueDefinition'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAndStatusResponse'
          description: OK
      summary: Edit an existing queue
      tags:
      - queue
      x-content-type: application/json
      x-accepts: application/json
  /queue/{client}/{target}/{queueName}/ack:
    post:
      description: "If the message was read with 'deleteAfterRead=false' then you\
        \ must call this API to remove the message \r\nfrom the queue after your code\
        \ has successfully processed it"
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The target in which the queue is located
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of queue which contains the message you want to acknowledge
        explode: false
        in: path
        name: queueName
        required: true
        schema:
          default: ""
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ackMessageArray'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueMessageResponse'
          description: OK
      summary: Remove a set of messages from a given queue.
      tags:
      - queue
      x-content-type: application/json
      x-accepts: application/json
  /queue/{client}/{target}/{queueName}/messages:
    get:
      description: Return a JSON array containing zero or more messages
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - the target of where the queue is stored.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the queue to read messages from
        explode: false
        in: path
        name: queueName
        required: true
        schema:
          type: string
        style: simple
      - description: "The number of messages to read in this request. Default 1. If\
          \ messages are bundled together then more \r\nmessages may be returned than\
          \ requested. If deleteAfterRead is false then the maximum is 10, and you\
          \ must call `POST \r\n/queue/{client}/{target}/{queueName}/ack` on the current\
          \ messages before any more will be available to read"
        explode: true
        in: query
        name: numberOfMessages
        required: false
        schema:
          type: integer
        style: form
      - description: "If the queue currently contains fewer than the numberOfMessages\
          \ requested, how long (in seconds) \r\nshould we wait for new messages to\
          \ arrive? Default 0"
        explode: true
        in: query
        name: maxWaitTimeInSeconds
        required: false
        schema:
          type: integer
        style: form
      - description: "Should the messages being read be automatically removed from\
          \ the queue? Default true. If this is \r\nfalse then the `POST /queue/{client}/{target}/{queueName}/ack`\
          \ API must be called with the message details once the \r\ndata has been\
          \ processed"
        explode: true
        in: query
        name: deleteAfterRead
        required: false
        schema:
          type: boolean
        style: form
      - description: "If the queue is locked, you must provide the key in this parameter"
        explode: true
        in: query
        name: lock
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueMessageResponse'
          description: OK
      summary: Gets one or more messages from the queue
      tags:
      - queue
      x-accepts: application/json
    post:
      description: Used for posting messages to a queue. The data passed in the message
        is not validated in any way
      parameters:
      - description: client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - the target of where the queue is stored.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the queue that the message will be posted to..
        explode: false
        in: path
        name: queueName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The message that should be posted on to the queue.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueuePostMessageResponse'
          description: OK
      summary: Add a message to the named queue
      tags:
      - queue
      x-content-type: application/json
      x-accepts: application/json
  /queue/{client}/{target}/{queueName}/purge:
    post:
      description: Used to clear messages from a queue.
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - the target of where the queue is stored.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the queue that the message will be posted to..
        explode: false
        in: path
        name: queueName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Remove all messages from the named queue
      tags:
      - queue
      x-accepts: application/json
  /recording:
    get:
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          description: OK
      summary: Get details about all recordings in the cluster
      tags:
      - recording
      x-accepts: application/json
  /recording/{client}:
    delete:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      summary: Delete all recordings created by this client.
      tags:
      - recording
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          description: OK
      summary: Get details about all recordings created by a specific client
      tags:
      - recording
      x-accepts: application/json
  /recording/{client}/{target}:
    delete:
      parameters:
      - description: Filter recordings to this client
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      responses:
        "200":
          description: OK
      summary: Delete all recordings created by this client in this target.
      tags:
      - recording
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Which target should we filter to?
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          description: OK
      summary: Get details about all recordings created by a specific client in a
        specific target
      tags:
      - recording
      x-accepts: application/json
    post:
      parameters:
      - description: The client to start recording traffic for
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The target to start recording traffic for
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: "Start or stop recording. Will toggle the current recording state\
          \ (i.e. start->stop or stop->start) if \r\nnot specified."
        explode: true
        in: query
        name: action
        required: false
        schema:
          enum:
          - start
          - stop
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/Recordingdocument'
      responses:
        "200":
          description: OK
      summary: Start or stop recording traffic for this client and target
      tags:
      - recording
      x-content-type: application/json
      x-accepts: application/json
  /recording/{client}/{target}/{name}:
    delete:
      parameters:
      - description: Filter recordings to this client
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Filter recordings to this target
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the recording
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
      summary: Delete a specific recording.
      tags:
      - recording
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Which target should we filter to?
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the recording
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Should the server also perform analysis of the recorded data
          so that common items can be identified?
        explode: true
        in: query
        name: analysis
        required: false
        schema:
          type: boolean
        style: form
      - description: "Analysis data is cached. Should the cached data be cleared and\
          \ the analysis be re-performed on the \r\nraw data?"
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          description: OK
      summary: Get details about a specific recording
      tags:
      - recording
      x-accepts: application/json
    put:
      parameters:
      - description: The client that this recording belongs to
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The target that this recording belongs to
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the existing recording
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Recordingdocument'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Edit the details of a specific recording.
      tags:
      - recording
      x-content-type: application/json
      x-accepts: application/json
  /recording/{client}/{target}/{name}/events:
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Which target should we filter to?
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the recording
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Optional 'since' values for paging large data - pass in the value
          from the last row returned. Use instead of 'From'
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          description: OK
      summary: Get raw event traffic associated with this specific recording
      tags:
      - recording
      x-accepts: application/json
  /rule:
    get:
      description: Information returned is filtered by user permissions.
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: "List of comma-separated values, by which the returned rules\
          \ will be sorted by. The possible values \r\nare: name, client, description,\
          \ businessGoal, dataType, isConfidential, isVisible, isEditable, isForcedValue."
        explode: true
        in: query
        name: sortProperty
        required: false
        schema:
          type: string
        style: form
      - description: "List of comma-separated true/false values indicating either\
          \ ascending (false) or descending (true) \r\norder of each sortProperty"
        explode: true
        in: query
        name: sortDescending
        required: false
        schema:
          type: string
        style: form
      - description: "The url the rule was published to. Only rule with this url will\
          \ be returned. In the format of: \r\ntarget/client/rule_name"
        explode: true
        in: query
        name: createdRuleUrl
        required: false
        schema:
          type: string
        style: form
      - description: "Time Frame for calculating the health score of a rule. Allowed\
          \ values are hour, day, min"
        explode: true
        in: query
        name: healthScore
        required: false
        schema:
          $ref: '#/components/schemas/healthScoreTimeFrame'
        style: form
      - description: Should the results include the execution statistics for each
          rule? Default true
        explode: true
        in: query
        name: includeStatistics
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter results to those which contain this text
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          type: string
        style: form
      - description: Get the report for a specific parameter
        explode: true
        in: query
        name: parameterName
        required: false
        schema:
          type: string
        style: form
      - description: Get a list of rules which have a specific parameter value
        explode: true
        in: query
        name: parameterValue
        required: false
        schema:
          type: string
        style: form
      - description: Filter to return only rules using specified template
        explode: true
        in: query
        name: templateFilter
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: "Flag to indicate whether rules from the public client should\
          \ be included in the results, please use \r\niClients=public instead"
        explode: true
        in: query
        name: includePublic
        required: false
        schema:
          type: boolean
        style: form
      - description: Should a check to verify rule has the latest templates version
          be performed?
        explode: true
        in: query
        name: checkTemplateLatestVersion
        required: false
        schema:
          type: boolean
        style: form
      - description: Only include these client(s)
        explode: true
        in: query
        name: iClients
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleList'
          description: OK
      summary: Get information about all published rules on the server
      tags:
      - rules
      x-accepts: application/json
  /rule/{target}:
    get:
      description: Information returned is filtered by user permissions.
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: "List of comma-separated values, by which the returned rules\
          \ will be sorted by. The possible values \r\nare: name, client, description,\
          \ businessGoal, dataType, isConfidential, isVisible, isEditable, isForcedValue."
        explode: true
        in: query
        name: sortProperty
        required: false
        schema:
          type: string
        style: form
      - description: "List of comma-separated true/false values indicating either\
          \ ascending (false) or descending (true) \r\norder of each sortProperty"
        explode: true
        in: query
        name: sortDescending
        required: false
        schema:
          type: string
        style: form
      - description: "The url the rule was published to. Only rule with this url will\
          \ be returned. In the format of: \r\ntarget/client/rule_name"
        explode: true
        in: query
        name: createdRuleUrl
        required: false
        schema:
          type: string
        style: form
      - description: "Time Frame for calculating the health score of a rule. Allowed\
          \ values are hour, day, min"
        explode: true
        in: query
        name: healthScore
        required: false
        schema:
          $ref: '#/components/schemas/healthScoreTimeFrame'
        style: form
      - description: Should the results include the execution statistics for each
          rule? Default true
        explode: true
        in: query
        name: includeStatistics
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter results to those which contain this text
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          type: string
        style: form
      - description: Get the report for a specific parameter
        explode: true
        in: query
        name: parameterName
        required: false
        schema:
          type: string
        style: form
      - description: Get a list of rules which have a specific parameter value
        explode: true
        in: query
        name: parameterValue
        required: false
        schema:
          type: string
        style: form
      - description: Filter to return only rules using specified template
        explode: true
        in: query
        name: templateFilter
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: "Flag to indicate whether rules from the public client should\
          \ be included in the results, please use \r\niClients=public instead"
        explode: true
        in: query
        name: includePublic
        required: false
        schema:
          type: boolean
        style: form
      - description: Should a check to verify rule has the latest templates version
          be performed?
        explode: true
        in: query
        name: checkTemplateLatestVersion
        required: false
        schema:
          type: boolean
        style: form
      - description: Only include these client(s)
        explode: true
        in: query
        name: iClients
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleList'
          description: OK
      summary: Get information about all rules published by all clients to the given
        target
      tags:
      - rules
      x-accepts: application/json
  /rule/{target}/{client}:
    delete:
      description: ""
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleList'
          description: OK
      summary: Unpublish all rules that this client has published to the given target.
      tags:
      - rules
      x-accepts: application/json
    get:
      description: Information returned is filtered by user permissions.
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: "List of comma-separated values, by which the returned rules\
          \ will be sorted by. The possible values \r\nare: name, client, description,\
          \ businessGoal, dataType, isConfidential, isVisible, isEditable, isForcedValue."
        explode: true
        in: query
        name: sortProperty
        required: false
        schema:
          type: string
        style: form
      - description: "List of comma-separated true/false values indicating either\
          \ ascending (false) or descending (true) \r\norder of each sortProperty"
        explode: true
        in: query
        name: sortDescending
        required: false
        schema:
          type: string
        style: form
      - description: "The url the rule was published to. Only rule with this url will\
          \ be returned. In the format of: \r\ntarget/client/rule_name"
        explode: true
        in: query
        name: createdRuleUrl
        required: false
        schema:
          type: string
        style: form
      - description: "Time Frame for calculating the health score of a rule. Allowed\
          \ values are hour, day, min"
        explode: true
        in: query
        name: healthScore
        required: false
        schema:
          $ref: '#/components/schemas/healthScoreTimeFrame'
        style: form
      - description: Should the results include the execution statistics for each
          rule? Default true
        explode: true
        in: query
        name: includeStatistics
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter results to those which contain this text
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          type: string
        style: form
      - description: Get the report for a specific parameter
        explode: true
        in: query
        name: parameterName
        required: false
        schema:
          type: string
        style: form
      - description: Get a list of rules which have a specific parameter value
        explode: true
        in: query
        name: parameterValue
        required: false
        schema:
          type: string
        style: form
      - description: Filter to return only rules using specified template
        explode: true
        in: query
        name: templateFilter
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: "Flag to indicate whether rules from the public client should\
          \ be included in the results, please use \r\niClients=public instead"
        explode: true
        in: query
        name: includePublic
        required: false
        schema:
          type: boolean
        style: form
      - description: Should a check to verify rule has the latest templates version
          be performed?
        explode: true
        in: query
        name: checkTemplateLatestVersion
        required: false
        schema:
          type: boolean
        style: form
      - description: Only include these client(s)
        explode: true
        in: query
        name: iClients
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleList'
          description: OK
      summary: Get information about all rules published by this client to the given
        target.
      tags:
      - rules
      x-accepts: application/json
  /rule/{target}/{client}/{rulename}:
    delete:
      description: ""
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleList'
          description: OK
      summary: Unpublish a specific rule.
      tags:
      - rules
      x-accepts: application/json
    get:
      description: Information returned is filtered by user permissions.
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      - description: "Time Frame for calculating the health score of a rule. Allowed\
          \ values are hour, day, min"
        explode: true
        in: query
        name: healthScore
        required: false
        schema:
          $ref: '#/components/schemas/healthScoreTimeFrame'
        style: form
      - description: Should the results include the execution statistics for each
          rule? Default true
        explode: true
        in: query
        name: includeStatistics
        required: false
        schema:
          type: boolean
        style: form
      - description: Should a check to verify rule has the latest templates version
          be performed?
        explode: true
        in: query
        name: checkTemplateLatestVersion
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleList'
          description: OK
      summary: "Get information about one specific, published rule."
      tags:
      - rules
      x-accepts: application/json
    post:
      description: Cause this rule to be re-read from disk and restarted. If this
        rule was previously paused then it will be unpaused. If it was previously
        snoozed then it will be unsnoozed
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: "Start or restart one specific, published rule."
      tags:
      - rules
      x-accepts: application/json
  /rule/{target}/{client}/{rulename}/autoloader:
    get:
      description: This will be parsed by the Spoon plugin so that a rule created
        as an autoloader can be edited
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleList'
          description: OK
      summary: Get the autoloader JSON for a specific rule. This is normally used
        by the Rule plugin within Spoon
      tags:
      - rules
      x-accepts: application/json
    post:
      description: "This will automatically change the structure and the values within\
        \ the rule so that it can load the data \r\nrequired. Tis is normally called\
        \ by the Rule plugin from within Spoon. Only rules that were created as an\
        \ autoloader can \r\nbe altered."
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: "Specify the autoloader JSON for the updated rule. Ensure wrapped\
          \ in {}"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleAndStateResponse'
          description: OK
      summary: Save the JSON for an autoloader rule
      tags:
      - rules
      x-content-type: application/json
      x-accepts: application/json
  /rule/{target}/{client}/{rulename}/copyto:
    post:
      description: A copy of this rule will be started in the given target.
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      - description: "The target to copy the rule to - must be different from the\
          \ current target.  Can optionally be \r\nprovided in the requestBody as\
          \ JSON instead if preferred"
        explode: true
        in: query
        name: destinationtarget
        required: false
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: form
      requestBody:
        content:
          application/json:
            example:
              destinationtarget: dev
            schema:
              $ref: '#/components/schemas/destinationTarget'
        description: Where the copy will run.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleAndStateResponse'
          description: OK
      summary: Copy this rule to the given target.
      tags:
      - rules
      x-content-type: application/json
      x-accepts: application/json
  /rule/{target}/{client}/{rulename}/datagrid/{dataGridName}:
    get:
      description: Information returned is filtered by user permissions.
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Data Grid that will be updated
        explode: false
        in: path
        name: dataGridName
        required: true
        schema:
          type: string
        style: simple
      - description: "If you want CSV, enter csv here"
        explode: true
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/csvEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataGridApiResponse'
          description: OK
      summary: "Get information about the data grid for a specific, published rule."
      tags:
      - rules
      x-accepts: application/json
    post:
      description: "If a rule already has an associated data grid, here it is possible\
        \ to enter new data and change the grid \r\ncontents.  Note, you cannot add\
        \ or remove columns but you can change their format.  Do a get on the data\
        \ grid to get the \r\nexisting structure."
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Data Grid that will be updated
        explode: false
        in: path
        name: dataGridName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/DataGridUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleAndStateResponse'
          description: OK
      summary: Enter new data for an exisiting data grid and update
      tags:
      - rules
      x-content-type: application/json
      x-accepts: application/json
  /rule/{target}/{client}/{rulename}/datagrid/{dataGridName}/rows:
    post:
      description: This is to append new data only. Existing data remains unchanged
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Data Grid that will be updated
        explode: false
        in: path
        name: dataGridName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/DataGridRows'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleAndStateResponse'
          description: OK
      summary: Add new data grid rows to a rule's Data Grid
      tags:
      - rules
      x-content-type: application/json
      x-accepts: application/json
  /rule/{target}/{client}/designer:
    put:
      description: This will validate a new Rule Designer JSON and return validations
        if problems detected without saving the rule
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleData'
        description: "Specify the rule designer JSON for the updated rule. Ensure\
          \ wrapped in {}"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleDesignerResponse'
          description: OK
      summary: Validate a new Rule Designer JSON
      tags:
      - rules
      x-content-type: application/json
      x-accepts: application/json
  /rule/{target}/{client}/{rulename}/designer:
    get:
      description: Information returned is filtered by user permissions.
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleList'
          description: OK
      summary: Get the rule designer JSON for a specific rule. This is normally used
        by the Rule designer user interface
      tags:
      - rules
      x-accepts: application/json
    post:
      description: "This will change the structure and the values within the rule,\
        \ as defined by the rule designer. If the \r\nnew rule structure is not valid\
        \ and the rule is running then this call will fail unless you are only validating\
        \ the rule"
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      - description: Set to 'True' to only validate the JSON (and not save it)
        explode: true
        in: query
        name: validate
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ruleData'
        description: "Specify the rule designer JSON for the updated rule. Ensure\
          \ wrapped in {}"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleDesignerResponse'
          description: OK
      summary: Save or validate the rule designer JSON for a rule
      tags:
      - rules
      x-content-type: application/json
      x-accepts: application/json
    put:
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      - description: Set to 'True' to only validate the JSON (and not save it)
        explode: true
        in: query
        name: validate
        required: false
        schema:
          type: boolean
        style: form
      - description: Download the posted rule designer JSON as a .ktr file
        explode: true
        in: query
        name: download
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: "Specify the rule designer JSON for the updated rule. Ensure\
          \ wrapped in {}"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Add a new rule via the rule designer JSON.
      tags:
      - rules
      x-content-type: application/json
      x-accepts: application/json
  /rule/{target}/{client}/{rulename}/parameter:
    post:
      description: this will update the rule with new default parameters.
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              parameterName: parameterValue
            schema:
              type: object
        description: "key value pairs of param name and value. Ensure wrapped in {}"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleAndStateResponse'
          description: OK
      summary: update the default values for parameters.
      tags:
      - rules
      x-content-type: application/json
      x-accepts: application/json
  /rule/{target}/{client}/{rulename}/pause:
    delete:
      description: "Cause this rule to go to 'waiting' state.  A rule that is paused\
        \ will return an error code if it receives \r\ntraffic (i.e. is invoked).\
        \ Restart the rule to allow it to serve traffic again"
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Pause this rule
      tags:
      - rules
      x-accepts: application/json
  /rule/{target}/{client}/{rulename}/priorityWeighting:
    post:
      description: This will set a new value for a rule's priority weighting
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: "key value pairs of param name and value. Ensure wrapped in {}"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleAndStateResponse'
            example: {}
          description: OK
      summary: Update the rule's priority weighting
      tags:
      - rules
      x-content-type: application/json
      x-accepts: "application/json,example"
  /rule/{target}/{client}/{rulename}/reset:
    delete:
      description: ""
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Perform extended actions to rules
      tags:
      - rules
      x-accepts: application/json
  /rule/{target}/{client}/{rulename}/sampleData:
    get:
      description: "Generates a JSON Schema object, following json-schema.org specification"
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiJSONArrayResponse'
          description: OK
      summary: Get JSON Schema representation of the data expected by the rule
      tags:
      - rules
      x-accepts: application/json
  /rule/{target}/{client}/{rulename}/snooze:
    post:
      description: "Snoozed rules are paused, and use no resources. They automatically\
        \ start when invoked; there will be a short delay while the rule starts"
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Make this rule start snoozing
      tags:
      - rules
      x-accepts: application/json
  /rule/{target}/{client}/{rulename}/testData:
    delete:
      description: Deletes all of user defined test data for this rule
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete all test data
      tags:
      - rules
      x-accepts: application/json
    get:
      description: Returns the test data and header information as specified in the
        rule's Realtime Input step
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDataResponse'
          description: OK
      summary: Get the rule's test data and headers information
      tags:
      - rules
      x-accepts: application/json
    post:
      description: User defined test data rows will be stored for this rule
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Rule name
        explode: false
        in: path
        name: rulename
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TestData'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Add test data to rule
      tags:
      - rules
      x-content-type: application/json
      x-accepts: application/json
  /rulegroup:
    get:
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Do we want all details of each rule group? (default is true).
        explode: true
        in: query
        name: includeproperties
        required: false
        schema:
          type: boolean
        style: form
      - description: Do we want all versions of the file listed?
        explode: true
        in: query
        name: allversions
        required: false
        schema:
          type: boolean
        style: form
      - description: Only include these client(s)
        explode: true
        in: query
        name: iClients
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleGroupListingResponse'
          description: OK
      summary: Get details about all rule groups on the server
      tags:
      - rulegroups
      x-accepts: application/json
    post:
      deprecated: true
      requestBody:
        $ref: '#/components/requestBodies/RuleGroupDocument'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: "upload a file which defines the rulegroup. This will generate and\
        \ return a version number.  Please use the \r\n/rulegroup/client/target/name\
        \ post version now."
      tags:
      - rulegroups
      x-content-type: application/json
      x-accepts: application/json
  /rulegroup/{client}:
    delete:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete all rule groups uploaded by this client.
      tags:
      - rulegroups
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Do we want all details of each rule group? (default is true).
        explode: true
        in: query
        name: includeproperties
        required: false
        schema:
          type: boolean
        style: form
      - description: Do we want all versions of the file listed?
        explode: true
        in: query
        name: allversions
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleGroupListingResponse'
          description: OK
      summary: Get details about all rule groups uploaded by a specific client
      tags:
      - rulegroups
      x-accepts: application/json
  /rulegroup/{client}/{target}:
    delete:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Where rulegroup should be published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete all rule groups uploaded by this client in this target.
      tags:
      - rulegroups
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Where rule group should be published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Do we want all details of each rule group? (default is true).
        explode: true
        in: query
        name: includeproperties
        required: false
        schema:
          type: boolean
        style: form
      - description: Do we want all versions of the file listed?
        explode: true
        in: query
        name: allversions
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleGroupListingResponse'
          description: OK
      summary: Get details about all rule groups uploaded by a specific client in
        a specific target
      tags:
      - rulegroups
      x-accepts: application/json
  /rulegroup/{client}/{target}/{rulegroupname}:
    delete:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the rule group
        explode: false
        in: path
        name: rulegroupname
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete all versions of a specific rulegroup.
      tags:
      - rulegroups
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the rule group
        explode: false
        in: path
        name: rulegroupname
        required: true
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Do we want all details of each rule group? (default is true).
        explode: true
        in: query
        name: includeproperties
        required: false
        schema:
          type: boolean
        style: form
      - description: Do we want all versions of the file listed?
        explode: true
        in: query
        name: allversions
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleGroupListingResponse'
          description: OK
      summary: Get details about all versions of a specified rulegroup
      tags:
      - rulegroups
      x-accepts: application/json
    post:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: "Possible values: dev | test | prod."
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the rule group
        explode: false
        in: path
        name: rulegroupname
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/RuleGroupDocument'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAndStatusResponse'
          description: OK
      summary: Upload a file which defines the rulegroup. This will generate and return
        a version number number.
      tags:
      - rulegroups
      x-content-type: application/json
      x-accepts: application/json
    put:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: "Possible values: dev | test | prod."
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the rule group
        explode: false
        in: path
        name: rulegroupname
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/RuleGroupDocument'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAndStatusResponse'
          description: OK
      summary: Update an existing rulegroup. This will generate and return a version
        number.
      tags:
      - rulegroups
      x-content-type: application/json
      x-accepts: application/json
  /rulegroup/{client}/{target}/{rulegroupname}/{version}:
    delete:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the rule group
        explode: false
        in: path
        name: rulegroupname
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the rule group
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete a specific version of a specific rulegroup on the server.
      tags:
      - rulegroups
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the rule group
        explode: false
        in: path
        name: rulegroupname
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the rule group
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleGroupListingResponse'
          description: OK
      summary: Get details about a specific version of a specific rulegroup for a
        specific client
      tags:
      - rulegroups
      x-accepts: application/json
  /rulegroup/{client}/{target}/{rulegroupname}/copyto:
    post:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: "Possible values: dev | test | prod."
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: The name of the rule group
        explode: false
        in: path
        name: rulegroupname
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleGroupDestinationTarget'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAndStatusResponse'
          description: OK
      summary: Copy this rule group to the given target.  Also replicates any missing
        rules
      tags:
      - rulegroups
      x-content-type: application/json
      x-accepts: application/json
  /template:
    get:
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Do we want all versions of the file listed?
        explode: true
        in: query
        name: allversions
        required: false
        schema:
          type: boolean
        style: form
      - description: Do we want to retrieve details of Data Grids present in this
          template.
        explode: true
        in: query
        name: getAllDetails
        required: false
        schema:
          type: boolean
        style: form
      - description: "Only retrieve the basic information about this template, like\
          \ name, client and url template."
        explode: true
        in: query
        name: basicInfo
        required: false
        schema:
          type: boolean
        style: form
      - description: Request template's Data Grids' details with parameter information
          for this client.
        explode: true
        in: query
        name: targetClient
        required: false
        schema:
          type: string
        style: form
      - description: Filter results to those which contain this text
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: "Flag to indicate whether rules from the public client should\
          \ be included in the results, please use \r\niClients=public instead"
        explode: true
        in: query
        name: includePublic
        required: false
        schema:
          type: boolean
        style: form
      - description: Only include these client(s)
        explode: true
        in: query
        name: iClients
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templateList'
          description: OK
      summary: Get details about all templates on the server
      tags:
      - templates
      x-accepts: application/json
  /template/{client}:
    delete:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete all templates uploaded by this client.
      tags:
      - templates
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Do we want all versions of the file listed?
        explode: true
        in: query
        name: allversions
        required: false
        schema:
          type: boolean
        style: form
      - description: Do we want to retrieve details of Data Grids present in this
          template.
        explode: true
        in: query
        name: getAllDetails
        required: false
        schema:
          type: boolean
        style: form
      - description: "Only retrieve the basic information about this template, like\
          \ name, client and url template."
        explode: true
        in: query
        name: basicInfo
        required: false
        schema:
          type: boolean
        style: form
      - description: Request template's Data Grids' details with parameter information
          for this client.
        explode: true
        in: query
        name: targetClient
        required: false
        schema:
          type: string
        style: form
      - description: Filter results to those which contain this text
        explode: true
        in: query
        name: searchText
        required: false
        schema:
          type: string
        style: form
      - deprecated: true
        description: "Flag to indicate whether rules from the public client should\
          \ be included in the results, please use \r\niClients=public instead"
        explode: true
        in: query
        name: includePublic
        required: false
        schema:
          type: boolean
        style: form
      - description: Only include these client(s)
        explode: true
        in: query
        name: iClients
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templateList'
          description: OK
      summary: Get details about all templates uploaded by a specific client
      tags:
      - templates
      x-accepts: application/json
  /template/{client}/{templatename}:
    delete:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the template you want to delete
        explode: false
        in: path
        name: templatename
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete all versions of a specific template.
      tags:
      - templates
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the template
        explode: false
        in: path
        name: templatename
        required: true
        schema:
          type: string
        style: simple
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      - description: Do we want all versions of the file listed?
        explode: true
        in: query
        name: allversions
        required: false
        schema:
          type: boolean
        style: form
      - description: Do we want to retrieve details of Data Grids present in this
          template.
        explode: true
        in: query
        name: getAllDetails
        required: false
        schema:
          type: boolean
        style: form
      - description: Request template's Data Grids' details with parameter information
          for this client.
        explode: true
        in: query
        name: targetClient
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templateList'
          description: OK
      summary: Get details about all versions of a specified template
      tags:
      - templates
      x-accepts: application/json
    post:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the template
        explode: false
        in: path
        name: templatename
        required: true
        schema:
          type: string
        style: simple
      - description: Set to 'True' to only validate the JSON (and not save it)
        explode: true
        in: query
        name: validate
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_template__client___templatename__post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAndStatusResponse'
          description: OK
      summary: "Upload a KTR file which defines the functionality of the template.\
        \ This will generate and return a version \r\nnumber."
      tags:
      - templates
      x-content-type: multipart/form-data
      x-accepts: application/json
    put:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the template
        explode: false
        in: path
        name: templatename
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: The JSON containing additional settings for this template.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAndStatusResponse'
          description: OK
      summary: "Alter the settings of the most recent version of an existing template.\
        \ This will generate and return a new \r\nversion number."
      tags:
      - templates
      x-content-type: application/json
      x-accepts: application/json
  /template/{client}/{templatename}/{version}:
    delete:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the template
        explode: false
        in: path
        name: templatename
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the template
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: Delete a specific version of a specific template on the server.
      tags:
      - templates
      x-accepts: application/json
    get:
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the template
        explode: false
        in: path
        name: templatename
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the template
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: integer
        style: simple
      - description: Do we want to retrieve details of Data Grids present in this
          template.
        explode: true
        in: query
        name: getAllDetails
        required: false
        schema:
          type: boolean
        style: form
      - description: Request template's Data Grids' details with parameter information
          for this client.
        explode: true
        in: query
        name: targetClient
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templateList'
          description: OK
      summary: Get details about a specific version of a specific template for a specific
        client
      tags:
      - templates
      x-accepts: application/json
    post:
      description: "Post a JSON representing a Rule Designer's tile to retrieve a\
        \ JSON tile where the template version has \r\nbeen upgraded"
      parameters:
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the template
        explode: false
        in: path
        name: templatename
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the template
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: integer
        style: simple
      - description: Request template's Data Grids' details with parameter information
          for this client.
        explode: true
        in: query
        name: targetClient
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: JSON representing the current template to upgrade
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateUpgradeResponse'
          description: OK
      summary: Get an upgraded version of template
      tags:
      - templates
      x-content-type: application/json
      x-accepts: application/json
  /template/{target}/{client}/{templatename}/{version}:
    post:
      description: "If a rule is already published at this target then it will be\
        \ 'hot-swapped' with this new version with no \r\ninterruption to service."
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the template
        explode: false
        in: path
        name: templatename
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the template
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: integer
        style: simple
      - description: "When overwriting an existing rule, this determines which value\
          \ to use"
        explode: true
        in: query
        name: paramSource
        required: false
        schema:
          enum:
          - ""
          - usetemplate
          - userule
          type: string
        style: form
      - description: Request template's Data Grids' details with parameter information
          for this client.
        explode: true
        in: query
        name: targetClient
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplatePublishSettings'
        description: The JSON containing additional settings for this template.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAndStatusResponse'
          description: OK
      summary: Take a specific version of a template and publish it as a rule.
      tags:
      - templates
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "If a rule is already published at this target then it will be\
        \ 'hot-swapped' with this new version with no \r\ninterruption to service."
      parameters:
      - description: Target - is where rule is published.
        explode: false
        in: path
        name: target
        required: true
        schema:
          $ref: '#/components/schemas/targetEnum'
        style: simple
      - description: Client name
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the template
        explode: false
        in: path
        name: templatename
        required: true
        schema:
          type: string
        style: simple
      - description: The version of the template
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: integer
        style: simple
      - description: Request template's Data Grids' details with parameter information
          for this client.
        explode: true
        in: query
        name: targetClient
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: OK
      summary: "Take a specific version of a template and publish it as a rule. and\
        \ check if overwriting an existing rule \r\nwhich has a different template"
      tags:
      - templates
      x-content-type: application/json
      x-accepts: application/json
  /testdata:
    get:
      parameters:
      - description: The zero-based index of the first item to return.
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: integer
        style: form
      - description: The zero-based index of the last item to return.
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDataListingResponse'
          description: OK
      summary: List all user defined test data across all rules.
      tags:
      - testdata
      x-accepts: application/json
components:
  parameters:
    aliasInPathRequired:
      description: The name of the alias
      explode: false
      in: path
      name: aliasName
      required: true
      schema:
        type: string
      style: simple
    clientInPathRequired:
      description: Client name
      explode: false
      in: path
      name: client
      required: true
      schema:
        type: string
      style: simple
    clientInPathNotRequired:
      description: Client name
      explode: false
      in: path
      name: client
      required: false
      schema:
        type: string
      style: simple
    clientInPathRequiredForReport:
      description: "Which client would you like the report for? You must be able to\
        \ access this client \r\nto report on it."
      explode: false
      in: path
      name: client
      required: true
      schema:
        type: string
      style: simple
    clientInPathNotRequiredForReport:
      description: "Which client would you like the report for? You must be able to\
        \ access this client \r\nto report on it."
      explode: false
      in: path
      name: client
      required: false
      schema:
        type: string
      style: simple
    targetInPathRequired:
      description: Target - is where rule is published.
      explode: false
      in: path
      name: target
      required: true
      schema:
        $ref: '#/components/schemas/targetEnum'
      style: simple
    targetGenericInPathRequired:
      description: "Possible values: dev | test | prod."
      explode: false
      in: path
      name: target
      required: true
      schema:
        $ref: '#/components/schemas/targetEnum'
      style: simple
    targetInQueryRequired:
      description: Filters on target
      explode: true
      in: query
      name: target
      required: false
      schema:
        $ref: '#/components/schemas/targetEnum'
      style: form
    targetInQueryNotRequired:
      description: Filters on target
      explode: true
      in: query
      name: target
      required: false
      schema:
        $ref: '#/components/schemas/targetEnum'
      style: form
    pagingParameterFrom:
      description: The zero-based index of the first item to return.
      explode: true
      in: query
      name: from
      required: false
      schema:
        type: integer
      style: form
    pagingParameterTo:
      description: The zero-based index of the last item to return.
      explode: true
      in: query
      name: to
      required: false
      schema:
        type: integer
      style: form
    sortProperty:
      description: "List of comma-separated values, by which the returned rules will\
        \ be sorted by. The possible values \r\nare: name, client, description, businessGoal,\
        \ dataType, isConfidential, isVisible, isEditable, isForcedValue."
      explode: true
      in: query
      name: sortProperty
      required: false
      schema:
        type: string
      style: form
    sortDescending:
      description: "List of comma-separated true/false values indicating either ascending\
        \ (false) or descending (true) \r\norder of each sortProperty"
      explode: true
      in: query
      name: sortDescending
      required: false
      schema:
        type: string
      style: form
    searchText:
      description: Filter results to those which contain this text
      explode: true
      in: query
      name: searchText
      required: false
      schema:
        type: string
      style: form
    iClients:
      description: Only include these client(s)
      explode: true
      in: query
      name: iClients
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    paramNameInPathRequired:
      description: parameter name
      explode: false
      in: path
      name: paramname
      required: true
      schema:
        type: string
      style: simple
    csvFormat:
      description: "If you want CSV, enter csv here"
      explode: true
      in: query
      name: format
      required: false
      schema:
        $ref: '#/components/schemas/csvEnum'
      style: form
    ruleNameInPathRequired:
      description: Rule name
      explode: false
      in: path
      name: rulename
      required: true
      schema:
        type: string
      style: simple
    ruleNameInQueryNotRequired:
      description: Filter for specific rule name
      explode: true
      in: query
      name: rulename
      required: false
      schema:
        type: string
      style: form
    healthScore:
      description: "Time Frame for calculating the health score of a rule. Allowed\
        \ values are hour, day, min"
      explode: true
      in: query
      name: healthScore
      required: false
      schema:
        $ref: '#/components/schemas/healthScoreTimeFrame'
      style: form
    includeStatistics:
      description: Should the results include the execution statistics for each rule?
        Default true
      explode: true
      in: query
      name: includeStatistics
      required: false
      schema:
        type: boolean
      style: form
    createdRuleUrl:
      description: "The url the rule was published to. Only rule with this url will\
        \ be returned. In the format of: \r\ntarget/client/rule_name"
      explode: true
      in: query
      name: createdRuleUrl
      required: false
      schema:
        type: string
      style: form
    parameterName:
      description: Get the report for a specific parameter
      explode: true
      in: query
      name: parameterName
      required: false
      schema:
        type: string
      style: form
    parameterValue:
      description: Get a list of rules which have a specific parameter value
      explode: true
      in: query
      name: parameterValue
      required: false
      schema:
        type: string
      style: form
    templateFilter:
      description: Filter to return only rules using specified template
      explode: true
      in: query
      name: templateFilter
      required: false
      schema:
        type: string
      style: form
    includePublic:
      deprecated: true
      description: "Flag to indicate whether rules from the public client should be\
        \ included in the results, please use \r\niClients=public instead"
      explode: true
      in: query
      name: includePublic
      required: false
      schema:
        type: boolean
      style: form
    dataGridName:
      description: Name of the Data Grid that will be updated
      explode: false
      in: path
      name: dataGridName
      required: true
      schema:
        type: string
      style: simple
    checkTemplateLatestVersion:
      description: Should a check to verify rule has the latest templates version
        be performed?
      explode: true
      in: query
      name: checkTemplateLatestVersion
      required: false
      schema:
        type: boolean
      style: form
    validate:
      description: Set to 'True' to only validate the JSON (and not save it)
      explode: true
      in: query
      name: validate
      required: false
      schema:
        type: boolean
      style: form
    tableInPathRequired:
      description: Table name
      explode: false
      in: path
      name: table
      required: true
      schema:
        type: string
      style: simple
    tableColumnInPath:
      description: Column name
      explode: false
      in: path
      name: column
      required: true
      schema:
        type: string
      style: simple
    tableKeyInQuery:
      description: "If you want a row of data to be returned, provide the partition\
        \ key"
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    tableKeyInQueryRequired:
      description: "If you want a row of data to be returned, provide the partition\
        \ key"
      explode: true
      in: query
      name: key
      required: true
      schema:
        type: string
      style: form
    tableKeysInQuery:
      description: "Values for clustering keys. If the table has a composite key,\
        \ provide the values in order."
      explode: true
      in: query
      name: keys
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    tableSample:
      description: return a sample of n rows from the table
      explode: true
      in: query
      name: sample
      required: false
      schema:
        type: integer
      style: form
    tablePivot:
      description: Would you like the data pivoted? (Only for CSV report)
      explode: true
      in: query
      name: pivot
      required: false
      schema:
        type: boolean
      style: form
    tableFieldValue:
      description: "If this is a fieldvalue type table, you can ask for a list of\
        \ keys or values.  If you specify \r\nfieldvalues, you must also provide a\
        \ key"
      explode: true
      in: query
      name: fieldvalue
      required: false
      schema:
        enum:
        - keyvalues
        - fieldvalues
        type: string
      style: form
    tableLimit:
      description: "If you are asking for a list of values from a fieldvalue table,\
        \ you can request to return only the \r\nmost recent, limited to this number.\
        \  If not provided, a system limit will be used."
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
    previewInQueryRequired:
      description: "By default API works in preview mode and returns a list of cache\
        \ columns and tables that would be \r\ndropped. Only when preview set to false\
        \ the columns are actually dropped"
      explode: true
      in: query
      name: preview
      required: true
      schema:
        type: boolean
      style: form
    allVersions:
      description: Do we want all versions of the file listed?
      explode: true
      in: query
      name: allversions
      required: false
      schema:
        type: boolean
      style: form
    allDetails:
      description: Do we want to retrieve details of Data Grids present in this template.
      explode: true
      in: query
      name: getAllDetails
      required: false
      schema:
        type: boolean
      style: form
    basicInfo:
      description: "Only retrieve the basic information about this template, like\
        \ name, client and url template."
      explode: true
      in: query
      name: basicInfo
      required: false
      schema:
        type: boolean
      style: form
    targetClient:
      description: Request template's Data Grids' details with parameter information
        for this client.
      explode: true
      in: query
      name: targetClient
      required: false
      schema:
        type: string
      style: form
    templateNameInPath:
      description: The name of the template
      explode: false
      in: path
      name: templatename
      required: true
      schema:
        type: string
      style: simple
    versionInPath:
      description: The version of the template
      explode: false
      in: path
      name: version
      required: true
      schema:
        type: integer
      style: simple
    startdate:
      description: "If you want to filter your request by date range, this is the\
        \ starting date for the time period, \r\nplease provide in ISO-8601 (YYYY-MM-DDThh:mm:ssZ)\
        \  All times are UTC."
      explode: true
      in: query
      name: startdate
      required: false
      schema:
        format: date-time
        type: string
      style: form
    enddate:
      description: "If you want to filter your request by date range, this is the\
        \ ending date for the time period, please \r\nprovide in ISO-8601 (YYYY-MM-DDThh:mm:ssZ)\
        \  All times are UTC."
      explode: true
      in: query
      name: enddate
      required: false
      schema:
        format: date-time
        type: string
      style: form
    csvInQuery:
      description: if true then returns csv file
      explode: true
      in: query
      name: csv
      required: false
      schema:
        type: boolean
      style: form
    itemLimitInQuery:
      description: The maximum number of items to return.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
    sequenceNumberInQuery:
      description: Sequence Number to identify rule invoke logs
      explode: true
      in: query
      name: sequenceNumber
      required: false
      schema:
        type: string
      style: form
    templateUrlInQuery:
      description: "Template url, if you want to filter your request by template url"
      explode: true
      in: query
      name: templateUrl
      required: false
      schema:
        type: string
      style: form
    logSourceInQuery:
      description: Pick the source of the logs. Currently only elastic search is supported
      explode: true
      in: query
      name: source
      required: false
      schema:
        $ref: '#/components/schemas/logSource'
      style: form
    searchPhraseInQuery:
      description: The phrase to search for in the logs
      explode: true
      in: query
      name: searchPhrase
      required: false
      schema:
        type: string
      style: form
    searchQueryInQuery:
      description: Lucene query string to apply
      explode: true
      in: query
      name: searchQuery
      required: false
      schema:
        type: string
      style: form
    tileNameInQuery:
      description: "The name of the tile, if you want to filter your request by tile\
        \ name"
      explode: true
      in: query
      name: tileName
      required: false
      schema:
        type: string
      style: form
    tileIdInQuery:
      description: "The id of the tile, if you want to filter your request by tile\
        \ id"
      explode: true
      in: query
      name: tileId
      required: false
      schema:
        type: string
      style: form
    logTypeOrTimeseries:
      description: What kind of logging do you want to see?
      explode: false
      in: path
      name: type
      required: true
      schema:
        $ref: '#/components/schemas/logTypeOrTimeseries'
      style: simple
    ruleGroupInPathRequired:
      description: The name of the rule group
      explode: false
      in: path
      name: rulegroupname
      required: true
      schema:
        type: string
      style: simple
    includePropertiesInQuery:
      description: Do we want all details of each rule group? (default is true).
      explode: true
      in: query
      name: includeproperties
      required: false
      schema:
        type: boolean
      style: form
    allVersionsInQuery:
      description: Do we want all versions of the file listed?
      explode: true
      in: query
      name: allversions
      required: false
      schema:
        type: boolean
      style: form
    ruleGroupVersionInPathRequired:
      description: The version of the rule group
      explode: false
      in: path
      name: version
      required: true
      schema:
        type: integer
      style: simple
    TargetNodeInQuery:
      description: "Which instance (identified by host name) do you want to query?\
        \ Leave blank to pick an instance \r\nrandomly"
      explode: true
      in: query
      name: targetnode
      required: false
      schema:
        type: string
      style: form
  requestBodies:
    ackMessageArray:
      content:
        application/json:
          schema:
            description: collection of messages to acknowledge
            items:
              $ref: '#/components/schemas/ackMessage'
            type: array
    AuthData:
      content:
        application/json:
          example: "{\"name\":\"name\"}"
          schema:
            type: string
      description: A block of JSON describing the resource to create
      required: true
    AuthSiteData:
      content:
        application/json:
          example: "{\"extendedInfo\":\"a site\",\"siteId\":\"abcde-12345\"}"
          schema:
            type: string
      description: A block of JSON describing the resource to create
      required: true
    ClusterPost:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cluster'
    ClusterSettingBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClusterSetting'
    Data:
      content:
        application/json:
          schema:
            type: string
      description: Specify the value for the optional parameters of KTR.
    DataGridRows:
      content:
        application/json:
          example:
            data:
            - - upsell
              - 2010-12-25T12:00:00Z
              - john.jpg
              - default.jpg
              - default.jpg
          schema:
            $ref: '#/components/schemas/DataGridRow'
      description: Data grid rows
    DataGridUpdate:
      content:
        application/json:
          example:
            detailsOfDataGrid:
              columnFormat:
              - ""
              - yyyy/MM/dd
              - ""
              - ""
              - ""
              columnHeader:
              - busgoal
              - adate
              - header
              - hero
              - skyscraper
              columnType:
              - String
              - Date
              - String
              - String
              - String
              data:
              - - upsell
                - 2010-12-25T12:00:00Z
                - default.jpg
                - default.jpg
                - default.jpg
          schema:
            items:
              $ref: '#/components/schemas/DataGridDetails'
            type: array
      description: "Specify the data for the updated data grid. Ensure wrapped in\
        \ {}"
    ExecuteCQL:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CacheCQL'
    ExecuteDDL:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CacheTableDefinition'
    LicenseData:
      content:
        application/json:
          example: "{\"blockOverage\":\"False\",\"conversationQuota\":100000,\"endDate\"\
            :\"\",\"startDate\":\"2021-01-01T12:00:00.000Z\"}"
          schema:
            type: string
      description: A block of JSON describing the license
      required: true
    Recordingdocument:
      content:
        application/json:
          example: "{\"name\":\"my recording\"}"
          schema:
            type: string
      description: JSON containing optional additional settings for this recording.
      required: false
    RuleGroupDocument:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RuleGroup'
      description: "A block of JSON containing the rule group information you want\
        \ to create.  Note there are many more \r\nproperties which you can set to\
        \ allow you to override parameters of the rules, etc. but the simplest is\
        \ provided as an \r\nexample."
      required: true
    QueueDefinition:
      content:
        application/json:
          example:
            fifo: true
            queueBackend: sqs
            schema:
              Schema1:
              - isSystem: true
                streamKey: Visitor
                indexLevel: 0
                storageHint: null
                dataType: text
                name: cxid
                width: 36
                required: false
              - isSystem: true
                streamKey: null
                indexLevel: 0
                storageHint: null
                dataType: integer
                name: is known
                width: 1
                required: false
              Schema2:
              - isSystem: true
                streamKey: null
                indexLevel: 0
                storageHint: null
                dataType: text
                name: existing cxid
                width: 36
                required: false
              - isSystem: true
                streamKey: null
                indexLevel: 0
                storageHint: null
                dataType: text
                name: new cxid
                width: 36
                required: false
          schema:
            $ref: '#/components/schemas/QueueDetails'
      description: A block of JSON that contains information about the contents of
        the messages in the queue
      required: true
  schemas:
    success:
      properties:
        cursor:
          $ref: '#/components/schemas/success_cursor'
      type: object
    status:
      properties:
        status:
          description: "OK if the request succeeded, otherwise ERROR"
          type: string
    ackMessage:
      properties:
        id:
          description: id of the message
          type: string
        receipt:
          description: receipt id of the message
          type: string
    destinationTarget:
      properties:
        destinationtarget:
          $ref: '#/components/schemas/targetEnum'
      type: object
    targetEnum:
      description: the target (dev/test/prod)
      enum:
      - dev
      - test
      - prod
      type: string
    logLevelEnum:
      description: the log level (debug/info/warn/error)
      enum:
      - NOTHING
      - ERROR
      - MINIMAL
      - BASIC
      - DETAILED
      - DEBUG
      - ROWLEVEL
      type: string
    logType:
      enum:
      - writetolog
      - system
      - writetologandsystem
      type: string
    logTypeOrTimeseries:
      enum:
      - writetolog
      - system
      - writetologandsystem
      - timeseriesmin
      - timeserieshour
      - timeseriesday
      - timeseriesmonth
      type: string
    logSource:
      enum:
      - elasticsearch
      type: string
    ruleStateEnum:
      description: The status of a rule
      enum:
      - Running
      - Finished
      - Stopped
      - Waiting
      - Initializing
      - Paused
      - Preparing executing
      type: string
    csvEnum:
      enum:
      - csv
      type: string
    healthScoreTimeFrame:
      description: Time frame for calculating the health score
      enum:
      - hour
      - day
      - min
      type: string
    timeseries:
      default: day
      enum:
      - min
      - hour
      - day
      type: string
    refList:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              type: string
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - data
        - data
        message: message
        status: status
    permissionList:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/permission'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - name: name
          description: description
        - name: name
          description: description
        message: message
        status: status
    permission:
      example:
        name: name
        description: description
      properties:
        name:
          description: Name of the permission
          type: string
        description:
          description: Human-readable description of what this permission allows you
            to do
          type: string
    licenseList:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/licenseData'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - hasAvailableQuota: true
          endDate: 2000-01-23T04:56:07.000+00:00
          signature: signature
          conversationQuotaUsed: 0
          conversationQuota: 6
          name: name
          blockOverage: true
          client: client
          quotaUsageHistory:
          - quotaused: 1.4658129805029452
            timestamp: 2000-01-23T04:56:07.000+00:00
          - quotaused: 1.4658129805029452
            timestamp: 2000-01-23T04:56:07.000+00:00
          isActive: true
          startDate: 2000-01-23T04:56:07.000+00:00
        - hasAvailableQuota: true
          endDate: 2000-01-23T04:56:07.000+00:00
          signature: signature
          conversationQuotaUsed: 0
          conversationQuota: 6
          name: name
          blockOverage: true
          client: client
          quotaUsageHistory:
          - quotaused: 1.4658129805029452
            timestamp: 2000-01-23T04:56:07.000+00:00
          - quotaused: 1.4658129805029452
            timestamp: 2000-01-23T04:56:07.000+00:00
          isActive: true
          startDate: 2000-01-23T04:56:07.000+00:00
        message: message
        status: status
    licenseData:
      example:
        hasAvailableQuota: true
        endDate: 2000-01-23T04:56:07.000+00:00
        signature: signature
        conversationQuotaUsed: 0
        conversationQuota: 6
        name: name
        blockOverage: true
        client: client
        quotaUsageHistory:
        - quotaused: 1.4658129805029452
          timestamp: 2000-01-23T04:56:07.000+00:00
        - quotaused: 1.4658129805029452
          timestamp: 2000-01-23T04:56:07.000+00:00
        isActive: true
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: Name of the license
          type: string
        client:
          description: Name of the license client
          type: string
        hasAvailableQuota:
          description: Has available quota remaining
          type: boolean
        startDate:
          description: Start date of the license
          format: date-time
          type: string
        endDate:
          description: End date of the license
          format: date-time
          type: string
        conversationQuotaUsed:
          description: Current conversation quota used
          type: integer
        conversationQuota:
          description: Conversation quota
          type: integer
        blockOverage:
          description: Does this license block overage once quota has been reached?
          type: boolean
        quotaUsageHistory:
          description: History of quota usage
          items:
            $ref: '#/components/schemas/quotaUsageHistory'
          type: array
        signature:
          description: License signature
          type: string
        isActive:
          type: boolean
      required:
      - blockOverage
      - client
      - conversationQuota
      - conversationQuotaUsed
      - isActive
      - name
      - startDate
    quotaUsageHistory:
      example:
        quotaused: 1.4658129805029452
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        quotaused:
          description: Quota used
          type: number
        timestamp:
          description: Timestamp of quota usage
          format: date-time
          type: string
      required:
      - quotaused
      - timestamp
    roleList:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/role'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - system: true
          clients:
          - clients
          - clients
          lastModifiedDate: lastModifiedDate
          permissions:
          - permissions
          - permissions
          name: name
          lastModifiedUser: lastModifiedUser
        - system: true
          clients:
          - clients
          - clients
          lastModifiedDate: lastModifiedDate
          permissions:
          - permissions
          - permissions
          name: name
          lastModifiedUser: lastModifiedUser
        message: message
        status: status
    role:
      allOf:
      - $ref: '#/components/schemas/lastModified'
      - properties:
          name:
            description: The unique name of this role
            type: string
          system:
            description: Is this a system role?
            type: boolean
          clients:
            items:
              type: string
            type: array
          permissions:
            description: The names of the permissions that a user will be granted
              if they have this role
            items:
              type: string
            type: array
      example:
        system: true
        clients:
        - clients
        - clients
        lastModifiedDate: lastModifiedDate
        permissions:
        - permissions
        - permissions
        name: name
        lastModifiedUser: lastModifiedUser
    siteList:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/site'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - lastModifiedDate: lastModifiedDate
          extendedInfo: extendedInfo
          siteId: siteId
          lastModifiedUser: lastModifiedUser
          users:
          - users
          - users
        - lastModifiedDate: lastModifiedDate
          extendedInfo: extendedInfo
          siteId: siteId
          lastModifiedUser: lastModifiedUser
          users:
          - users
          - users
        message: message
        status: status
    site:
      allOf:
      - $ref: '#/components/schemas/lastModified'
      - properties:
          siteId:
            description: A UUID to uniquely identify this site
            type: string
          extendedInfo:
            description: Additional site-specific information
            type: string
          users:
            items:
              type: string
            type: array
      example:
        lastModifiedDate: lastModifiedDate
        extendedInfo: extendedInfo
        siteId: siteId
        lastModifiedUser: lastModifiedUser
        users:
        - users
        - users
    userList:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/user'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - clients:
          - clients
          - clients
          system: true
          lastModifiedDate: lastModifiedDate
          permissions:
          - permissions
          - permissions
          staticTokens:
          - staticTokens
          - staticTokens
          roles:
          - roles
          - roles
          name: name
          lastModifiedUser: lastModifiedUser
        - clients:
          - clients
          - clients
          system: true
          lastModifiedDate: lastModifiedDate
          permissions:
          - permissions
          - permissions
          staticTokens:
          - staticTokens
          - staticTokens
          roles:
          - roles
          - roles
          name: name
          lastModifiedUser: lastModifiedUser
        message: message
        status: status
    user:
      allOf:
      - $ref: '#/components/schemas/lastModified'
      - properties:
          name:
            description: The unique name to identify this user
            type: string
          clients:
            items:
              type: string
            type: array
          permissions:
            items:
              type: string
            type: array
          roles:
            items:
              type: string
            type: array
          staticTokens:
            items:
              type: string
            type: array
          system:
            description: Is this a system user
            type: boolean
      example:
        clients:
        - clients
        - clients
        system: true
        lastModifiedDate: lastModifiedDate
        permissions:
        - permissions
        - permissions
        staticTokens:
        - staticTokens
        - staticTokens
        roles:
        - roles
        - roles
        name: name
        lastModifiedUser: lastModifiedUser
    ruleList:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/ruleData'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - journeys:
          - journeys
          - journeys
          datagrids:
          - ""
          - ""
          wtlLoggingActive: true
          autoloader: "{}"
          description: description
          type: type
          snoozed: true
          securityOption: securityOption
          hasRuledesigner: true
          tiles:
          - "{}"
          - "{}"
          newerTemplateVersion: 0
          apiVersion: apiVersion
          priorityWeighting:
            general: 6.027456183070403
          wtlLoggingAllowed: true
          logLevel: null
          requestedAt: requestedAt
          hasAutoloader: true
          client: client
          latestTemplateVersions: true
          state: null
          rulegroups:
          - rulegroups
          - rulegroups
          exampleData: exampleData
          isValid: true
          edges:
          - ""
          - ""
          urlPath: urlPath
          version: 4
          target: target
          templateURL: templateURL
          relativeTime: relativeTime
          helpLink: helpLink
          lastSeen: lastSeen
          templateName: templateName
          modifiedDate: modifiedDate
          name: name
          templateVersion: 1
          parameters:
          - requiresAdmin: true
            usingGlobal: true
            isConfidential: true
            picklistItems:
            - text: text
              value: value
            - text: text
              value: value
            defaultValue: defaultValue
            dataType: string
            description: description
            isVisible: true
            units: units
            parameterName: parameterName
            targets:
            - value: value
              target: null
            - value: value
              target: null
            url: url
            globalParam: true
            businessGoal: businessGoal
            isForcedValue: true
            isEditable: true
            name: name
            client: client
          - requiresAdmin: true
            usingGlobal: true
            isConfidential: true
            picklistItems:
            - text: text
              value: value
            - text: text
              value: value
            defaultValue: defaultValue
            dataType: string
            description: description
            isVisible: true
            units: units
            parameterName: parameterName
            targets:
            - value: value
              target: null
            - value: value
              target: null
            url: url
            globalParam: true
            businessGoal: businessGoal
            isForcedValue: true
            isEditable: true
            name: name
            client: client
          requestContentType: requestContentType
          stateModifiedDate: stateModifiedDate
          statistics:
            errorCountHealthScore: 2
            serviceCost: 1
            bulkLoad: 1
            cumulativeInvokeTime: 5
            newActiveConversation: 7
            invalidDataCountHealthScore: 2
            rosCounts:
            - stepName: stepName
              count: 1
              fields:
              - name: name
              - name: name
              returnType: returnType
            - stepName: stepName
              count: 1
              fields:
              - name: name
              - name: name
              returnType: returnType
            healthScore: 7
            invokeCount: 4
            invalidCount: 9
            invokeCountHealthScore: 3
            totalTimeouts: 6
            totalTimeoutsHealthScore: 7
            newConversation: 1
            errorCount: 5
        - journeys:
          - journeys
          - journeys
          datagrids:
          - ""
          - ""
          wtlLoggingActive: true
          autoloader: "{}"
          description: description
          type: type
          snoozed: true
          securityOption: securityOption
          hasRuledesigner: true
          tiles:
          - "{}"
          - "{}"
          newerTemplateVersion: 0
          apiVersion: apiVersion
          priorityWeighting:
            general: 6.027456183070403
          wtlLoggingAllowed: true
          logLevel: null
          requestedAt: requestedAt
          hasAutoloader: true
          client: client
          latestTemplateVersions: true
          state: null
          rulegroups:
          - rulegroups
          - rulegroups
          exampleData: exampleData
          isValid: true
          edges:
          - ""
          - ""
          urlPath: urlPath
          version: 4
          target: target
          templateURL: templateURL
          relativeTime: relativeTime
          helpLink: helpLink
          lastSeen: lastSeen
          templateName: templateName
          modifiedDate: modifiedDate
          name: name
          templateVersion: 1
          parameters:
          - requiresAdmin: true
            usingGlobal: true
            isConfidential: true
            picklistItems:
            - text: text
              value: value
            - text: text
              value: value
            defaultValue: defaultValue
            dataType: string
            description: description
            isVisible: true
            units: units
            parameterName: parameterName
            targets:
            - value: value
              target: null
            - value: value
              target: null
            url: url
            globalParam: true
            businessGoal: businessGoal
            isForcedValue: true
            isEditable: true
            name: name
            client: client
          - requiresAdmin: true
            usingGlobal: true
            isConfidential: true
            picklistItems:
            - text: text
              value: value
            - text: text
              value: value
            defaultValue: defaultValue
            dataType: string
            description: description
            isVisible: true
            units: units
            parameterName: parameterName
            targets:
            - value: value
              target: null
            - value: value
              target: null
            url: url
            globalParam: true
            businessGoal: businessGoal
            isForcedValue: true
            isEditable: true
            name: name
            client: client
          requestContentType: requestContentType
          stateModifiedDate: stateModifiedDate
          statistics:
            errorCountHealthScore: 2
            serviceCost: 1
            bulkLoad: 1
            cumulativeInvokeTime: 5
            newActiveConversation: 7
            invalidDataCountHealthScore: 2
            rosCounts:
            - stepName: stepName
              count: 1
              fields:
              - name: name
              - name: name
              returnType: returnType
            - stepName: stepName
              count: 1
              fields:
              - name: name
              - name: name
              returnType: returnType
            healthScore: 7
            invokeCount: 4
            invalidCount: 9
            invokeCountHealthScore: 3
            totalTimeouts: 6
            totalTimeoutsHealthScore: 7
            newConversation: 1
            errorCount: 5
        message: message
        status: status
    ruleData:
      example:
        journeys:
        - journeys
        - journeys
        datagrids:
        - ""
        - ""
        wtlLoggingActive: true
        autoloader: "{}"
        description: description
        type: type
        snoozed: true
        securityOption: securityOption
        hasRuledesigner: true
        tiles:
        - "{}"
        - "{}"
        newerTemplateVersion: 0
        apiVersion: apiVersion
        priorityWeighting:
          general: 6.027456183070403
        wtlLoggingAllowed: true
        logLevel: null
        requestedAt: requestedAt
        hasAutoloader: true
        client: client
        latestTemplateVersions: true
        state: null
        rulegroups:
        - rulegroups
        - rulegroups
        exampleData: exampleData
        isValid: true
        edges:
        - ""
        - ""
        urlPath: urlPath
        version: 4
        target: target
        templateURL: templateURL
        relativeTime: relativeTime
        helpLink: helpLink
        lastSeen: lastSeen
        templateName: templateName
        modifiedDate: modifiedDate
        name: name
        templateVersion: 1
        parameters:
        - requiresAdmin: true
          usingGlobal: true
          isConfidential: true
          picklistItems:
          - text: text
            value: value
          - text: text
            value: value
          defaultValue: defaultValue
          dataType: string
          description: description
          isVisible: true
          units: units
          parameterName: parameterName
          targets:
          - value: value
            target: null
          - value: value
            target: null
          url: url
          globalParam: true
          businessGoal: businessGoal
          isForcedValue: true
          isEditable: true
          name: name
          client: client
        - requiresAdmin: true
          usingGlobal: true
          isConfidential: true
          picklistItems:
          - text: text
            value: value
          - text: text
            value: value
          defaultValue: defaultValue
          dataType: string
          description: description
          isVisible: true
          units: units
          parameterName: parameterName
          targets:
          - value: value
            target: null
          - value: value
            target: null
          url: url
          globalParam: true
          businessGoal: businessGoal
          isForcedValue: true
          isEditable: true
          name: name
          client: client
        requestContentType: requestContentType
        stateModifiedDate: stateModifiedDate
        statistics:
          errorCountHealthScore: 2
          serviceCost: 1
          bulkLoad: 1
          cumulativeInvokeTime: 5
          newActiveConversation: 7
          invalidDataCountHealthScore: 2
          rosCounts:
          - stepName: stepName
            count: 1
            fields:
            - name: name
            - name: name
            returnType: returnType
          - stepName: stepName
            count: 1
            fields:
            - name: name
            - name: name
            returnType: returnType
          healthScore: 7
          invokeCount: 4
          invalidCount: 9
          invokeCountHealthScore: 3
          totalTimeouts: 6
          totalTimeoutsHealthScore: 7
          newConversation: 1
          errorCount: 5
      properties:
        apiVersion:
          type: string
        autoloader:
          type: object
        client:
          type: string
        datagrids:
          items: {}
          type: array
        description:
          description: A description of the rule
          type: string
        edges:
          items: {}
          type: array
        exampleData:
          type: string
        hasAutoloader:
          type: boolean
        hasRuledesigner:
          type: boolean
        helpLink:
          type: string
        isValid:
          type: boolean
        journeys:
          items:
            type: string
          type: array
        lastSeen:
          type: string
        latestTemplateVersions:
          type: boolean
        logLevel:
          $ref: '#/components/schemas/logLevelEnum'
        modifiedDate:
          type: string
        name:
          type: string
        newerTemplateVersion:
          type: integer
        parameters:
          items:
            $ref: '#/components/schemas/ruleParameter'
          type: array
        priorityWeighting:
          $ref: '#/components/schemas/priorityWeighting'
        relativeTime:
          type: string
        requestedAt:
          type: string
        rulegroups:
          items:
            type: string
          type: array
        securityOption:
          type: string
        state:
          $ref: '#/components/schemas/ruleStateEnum'
        stateModifiedDate:
          type: string
        statistics:
          $ref: '#/components/schemas/statistics'
        target:
          type: string
        templateName:
          type: string
        templateURL:
          type: string
        templateVersion:
          type: integer
        tiles:
          items:
            type: object
          type: array
        type:
          type: string
        urlPath:
          type: string
        version:
          type: integer
        wtlLoggingActive:
          type: boolean
        wtlLoggingAllowed:
          type: boolean
        requestContentType:
          type: string
        snoozed:
          type: boolean
      type: object
    outputField:
      example:
        name: name
        source: source
        type: type
      properties:
        name:
          type: string
        type:
          type: string
        source:
          type: string
      type: object
    inputConnector:
      example:
        name: name
        active: true
        fields:
        - name: name
          source: source
          type: type
        - name: name
          source: source
          type: type
      properties:
        name:
          type: string
        active:
          type: boolean
        fields:
          items:
            $ref: '#/components/schemas/outputField'
          type: array
      type: object
    outputConnector:
      example:
        connectedInputs:
        - connectedInputs
        - connectedInputs
        name: name
        active: true
        disabled: true
        fields:
        - name: name
          source: source
          type: type
        - name: name
          source: source
          type: type
        realtimeOutputSteps:
        - name: name
        - name: name
      properties:
        name:
          type: string
        active:
          type: boolean
        disabled:
          type: boolean
        fields:
          items:
            $ref: '#/components/schemas/outputField'
          type: array
        realtimeOutputSteps:
          items:
            $ref: '#/components/schemas/outputConnector_realtimeOutputSteps_inner'
          type: array
        connectedInputs:
          items:
            type: string
          type: array
      type: object
    metadata:
      properties:
        in:
          $ref: '#/components/schemas/inputConnector'
        out:
          $ref: '#/components/schemas/outputConnector'
        name:
          type: string
        active:
          type: boolean
      type: object
    ROSCounts:
      example:
        stepName: stepName
        count: 1
        fields:
        - name: name
        - name: name
        returnType: returnType
      properties:
        stepName:
          type: string
        count:
          type: integer
        fields:
          items:
            $ref: '#/components/schemas/ROSField'
          type: array
        returnType:
          type: string
      type: object
    ROSField:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    statistics:
      example:
        errorCountHealthScore: 2
        serviceCost: 1
        bulkLoad: 1
        cumulativeInvokeTime: 5
        newActiveConversation: 7
        invalidDataCountHealthScore: 2
        rosCounts:
        - stepName: stepName
          count: 1
          fields:
          - name: name
          - name: name
          returnType: returnType
        - stepName: stepName
          count: 1
          fields:
          - name: name
          - name: name
          returnType: returnType
        healthScore: 7
        invokeCount: 4
        invalidCount: 9
        invokeCountHealthScore: 3
        totalTimeouts: 6
        totalTimeoutsHealthScore: 7
        newConversation: 1
        errorCount: 5
      properties:
        bulkLoad:
          type: integer
        cumulativeInvokeTime:
          type: integer
        errorCount:
          type: integer
        errorCountHealthScore:
          type: integer
        healthScore:
          type: integer
        invalidCount:
          type: integer
        invokeCountHealthScore:
          type: integer
        invalidDataCountHealthScore:
          type: integer
        invokeCount:
          type: integer
        newActiveConversation:
          type: integer
        newConversation:
          type: integer
        rosCounts:
          items:
            $ref: '#/components/schemas/ROSCounts'
          type: array
        serviceCost:
          type: integer
        totalTimeouts:
          type: integer
        totalTimeoutsHealthScore:
          type: integer
      type: object
    parameterList:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/parameter'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - requiresAdmin: true
          isConfidential: true
          picklistItems:
          - text: text
            value: value
          - text: text
            value: value
          dataType: string
          description: description
          isVisible: true
          units: units
          targets:
          - value: value
            target: null
          - value: value
            target: null
          url: url
          globalParam: true
          businessGoal: businessGoal
          isForcedValue: true
          isEditable: true
          name: name
          client: client
        - requiresAdmin: true
          isConfidential: true
          picklistItems:
          - text: text
            value: value
          - text: text
            value: value
          dataType: string
          description: description
          isVisible: true
          units: units
          targets:
          - value: value
            target: null
          - value: value
            target: null
          url: url
          globalParam: true
          businessGoal: businessGoal
          isForcedValue: true
          isEditable: true
          name: name
          client: client
        message: message
        status: status
    ruleParameter:
      allOf:
      - $ref: '#/components/schemas/parameter'
      - properties:
          defaultValue:
            type: string
          parameterName:
            type: string
          usingGlobal:
            type: boolean
      example:
        requiresAdmin: true
        usingGlobal: true
        isConfidential: true
        picklistItems:
        - text: text
          value: value
        - text: text
          value: value
        defaultValue: defaultValue
        dataType: string
        description: description
        isVisible: true
        units: units
        parameterName: parameterName
        targets:
        - value: value
          target: null
        - value: value
          target: null
        url: url
        globalParam: true
        businessGoal: businessGoal
        isForcedValue: true
        isEditable: true
        name: name
        client: client
    ruleGroupParameter:
      additionalProperties: true
      example:
        usingGlobal: usingGlobal
        IsEditable: true
        Description: Description
        Position: 1
        ReferencedProperty: ReferencedProperty
        Targets:
        - value: value
          target: null
        - value: value
          target: null
        ReferencedRule: ReferencedRule
        PropertyType: PropertyType
        Units: Units
        Name: Name
        Templatename: Templatename
        globalParam: globalParam
        DefaultValue: ruleGroupParameter_DefaultValue
        DataType: DataType
        PickListItems:
        - text: text
          value: value
        - text: text
          value: value
        IsVisible: true
        IconAndColor:
          background: background
          svgIcon: svgIcon
          foreground: foreground
          matIcon: matIcon
        TemplateId: TemplateId
      properties:
        Name:
          type: string
        usingGlobal:
          type: string
        IsEditable:
          type: boolean
        Description:
          type: string
        Position:
          type: integer
        ReferencedProperty:
          type: string
        ReferencedRule:
          type: string
        PropertyType:
          type: string
        Units:
          type: string
        globalParam:
          type: string
        DefaultValue:
          $ref: '#/components/schemas/ruleGroupParameter_DefaultValue'
        IsVisible:
          type: boolean
        Templatename:
          type: string
        DataType:
          type: string
        Targets:
          items:
            $ref: '#/components/schemas/targetValue'
          type: array
        PickListItems:
          items:
            $ref: '#/components/schemas/pickListItem'
          type: array
        IconAndColor:
          $ref: '#/components/schemas/icon'
        TemplateId:
          type: string
      type: object
    parameter:
      example:
        requiresAdmin: true
        isConfidential: true
        picklistItems:
        - text: text
          value: value
        - text: text
          value: value
        dataType: string
        description: description
        isVisible: true
        units: units
        targets:
        - value: value
          target: null
        - value: value
          target: null
        url: url
        globalParam: true
        businessGoal: businessGoal
        isForcedValue: true
        isEditable: true
        name: name
        client: client
      properties:
        businessGoal:
          type: string
        client:
          description: Client name
          type: string
        dataType:
          description: The data type
          enum:
          - string
          - number
          - date
          - picklist
          - orderedlist
          type: string
        description:
          description: Description of the global parameter
          type: string
        globalParam:
          type: boolean
        isConfidential:
          description: "Value is masked, e.g. for passwords/keys characters (true/false)"
          type: boolean
        isEditable:
          description: Values can be edited by users without GLOBALPARAMETER_CAN_CONFIGURE
            permission characters (true/false)
          type: boolean
        isForcedValue:
          description: Rule parameter values will be overridden characters (true/false)
          type: boolean
        isVisible:
          description: Should display characters (true/false)
          type: boolean
        name:
          description: Global param name
          type: string
        picklistItems:
          description: Array of items to select from
          items:
            $ref: '#/components/schemas/pickListItem'
          type: array
        requiresAdmin:
          type: boolean
        targets:
          description: Each target/value
          items:
            $ref: '#/components/schemas/targetValue'
          type: array
        units:
          type: string
        url:
          type: string
      type: object
    pickListItem:
      example:
        text: text
        value: value
      properties:
        text:
          type: string
        value:
          type: string
      type: object
    targetValue:
      example:
        value: value
        target: null
      properties:
        target:
          $ref: '#/components/schemas/targetEnum'
        value:
          description: the parameter value
          type: string
      required:
      - target
      - value
    priorityWeighting:
      example:
        general: 6.027456183070403
      properties:
        general:
          type: number
      type: object
    ApiError:
      properties:
        debug:
          type: string
        exceptionType:
          type: string
        message:
          type: string
        status:
          type: string
      type: object
    ApiResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        message: message
        status: status
      required:
      - status
    RuleDesignerResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          changes:
            items:
              type: string
            type: array
          hasChanges:
            type: boolean
          ruleDesignerJSON:
            $ref: '#/components/schemas/ruleData'
          state:
            $ref: '#/components/schemas/ruleStateEnum'
          validationMessages:
            items:
              $ref: '#/components/schemas/ValidationMessage'
            type: array
          version:
            type: integer
          modifiedDate:
            type: string
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        validationMessages:
        - tileId: tileId
          message: message
        - tileId: tileId
          message: message
        debug: debug
        hasChanges: true
        changes:
        - changes
        - changes
        modifiedDate: modifiedDate
        state: null
        message: message
        ruleDesignerJSON:
          journeys:
          - journeys
          - journeys
          datagrids:
          - ""
          - ""
          wtlLoggingActive: true
          autoloader: "{}"
          description: description
          type: type
          snoozed: true
          securityOption: securityOption
          hasRuledesigner: true
          tiles:
          - "{}"
          - "{}"
          newerTemplateVersion: 0
          apiVersion: apiVersion
          priorityWeighting:
            general: 6.027456183070403
          wtlLoggingAllowed: true
          logLevel: null
          requestedAt: requestedAt
          hasAutoloader: true
          client: client
          latestTemplateVersions: true
          state: null
          rulegroups:
          - rulegroups
          - rulegroups
          exampleData: exampleData
          isValid: true
          edges:
          - ""
          - ""
          urlPath: urlPath
          version: 4
          target: target
          templateURL: templateURL
          relativeTime: relativeTime
          helpLink: helpLink
          lastSeen: lastSeen
          templateName: templateName
          modifiedDate: modifiedDate
          name: name
          templateVersion: 1
          parameters:
          - requiresAdmin: true
            usingGlobal: true
            isConfidential: true
            picklistItems:
            - text: text
              value: value
            - text: text
              value: value
            defaultValue: defaultValue
            dataType: string
            description: description
            isVisible: true
            units: units
            parameterName: parameterName
            targets:
            - value: value
              target: null
            - value: value
              target: null
            url: url
            globalParam: true
            businessGoal: businessGoal
            isForcedValue: true
            isEditable: true
            name: name
            client: client
          - requiresAdmin: true
            usingGlobal: true
            isConfidential: true
            picklistItems:
            - text: text
              value: value
            - text: text
              value: value
            defaultValue: defaultValue
            dataType: string
            description: description
            isVisible: true
            units: units
            parameterName: parameterName
            targets:
            - value: value
              target: null
            - value: value
              target: null
            url: url
            globalParam: true
            businessGoal: businessGoal
            isForcedValue: true
            isEditable: true
            name: name
            client: client
          requestContentType: requestContentType
          stateModifiedDate: stateModifiedDate
          statistics:
            errorCountHealthScore: 2
            serviceCost: 1
            bulkLoad: 1
            cumulativeInvokeTime: 5
            newActiveConversation: 7
            invalidDataCountHealthScore: 2
            rosCounts:
            - stepName: stepName
              count: 1
              fields:
              - name: name
              - name: name
              returnType: returnType
            - stepName: stepName
              count: 1
              fields:
              - name: name
              - name: name
              returnType: returnType
            healthScore: 7
            invokeCount: 4
            invalidCount: 9
            invokeCountHealthScore: 3
            totalTimeouts: 6
            totalTimeoutsHealthScore: 7
            newConversation: 1
            errorCount: 5
        version: 0
        status: status
      required:
      - status
    ValidationMessage:
      example:
        tileId: tileId
        message: message
      properties:
        message:
          type: string
        tileId:
          type: string
      type: object
    TestDataResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/TestDataItem'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - testData:
          - data:
            - data
            - data
            editable: true
            description: description
            id: id
          - data:
            - data
            - data
            editable: true
            description: description
            id: id
          stepType: stepType
        - testData:
          - data:
            - data
            - data
            editable: true
            description: description
            id: id
          - data:
            - data
            - data
            editable: true
            description: description
            id: id
          stepType: stepType
        message: message
        status: status
    TestDataItem:
      example:
        testData:
        - data:
          - data
          - data
          editable: true
          description: description
          id: id
        - data:
          - data
          - data
          editable: true
          description: description
          id: id
        stepType: stepType
      properties:
        testData:
          items:
            $ref: '#/components/schemas/TestData'
          type: array
        stepType:
          type: string
      type: object
    TestData:
      example:
        data:
        - data
        - data
        editable: true
        description: description
        id: id
      properties:
        data:
          items:
            type: string
          type: array
        description:
          type: string
        editable:
          type: boolean
        id:
          type: string
      required:
      - data
      type: object
    ApiJSONResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data: {}
    ApiJSONArrayResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items: {}
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - ""
        - ""
        message: message
        status: status
    ParameterApiResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          failedrules:
            items:
              type: string
            type: array
          url:
            description: The URL of the parameter
            type: string
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        failedrules:
        - failedrules
        - failedrules
        debug: debug
        message: message
        url: url
        status: status
    TemplateUpgradeResponse:
      additionalProperties: true
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        message: message
        status: status
      required:
      - status
    ClientResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            $ref: '#/components/schemas/ClientData'
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
          clients:
          - aliases:
            - destination: destination
              alias: alias
            - destination: destination
              alias: alias
            lastModifiedDate: lastModifiedDate
            name: name
            defaultCacheDuration: 0
          - aliases:
            - destination: destination
              alias: alias
            - destination: destination
              alias: alias
            lastModifiedDate: lastModifiedDate
            name: name
            defaultCacheDuration: 0
          provider: provider
          permissions:
          - permissions
          - permissions
          username: username
        message: message
        status: status
      required:
      - status
    lastModified:
      properties:
        lastModifiedDate:
          description: When was this object last modified? Timestamp in ISO-8601 format
          type: string
        lastModifiedUser:
          description: What is the name of the user who last modified this object?
          type: string
    client:
      properties:
        defaultCacheDuration:
          description: "When you add a new table to the cache, this is the default\
            \ (in seconds) for how long data will say in \r\nthat table if it has\
            \ not been written recently."
          type: integer
      type: object
    DataGridPost:
      properties:
        status:
          type: string
        url:
          type: string
      required:
      - status
    DataGridDetails:
      example:
        detailsOfDataGrid:
          columnFormat:
          - ""
          - yyyy/MM/dd
          - ""
          - ""
          - ""
          columnHeader:
          - busgoal
          - adate
          - header
          - hero
          - skyscraper
          columnType:
          - String
          - Date
          - String
          - String
          - String
          data:
          - - upsell
            - 2010-12-25T12:00:00Z
            - default.jpg
            - default.jpg
            - default.jpg
      properties:
        columnType:
          items:
            enum:
            - String
            type: string
          type: array
        data:
          items:
            items:
              type: string
            type: array
          type: array
        columnHeader:
          items:
            type: string
          type: array
        name:
          type: string
        columnFormat:
          items:
            type: string
          type: array
        parameters:
          items:
            $ref: '#/components/schemas/parameter'
          type: array
      required:
      - columnFormat
      - columnHeader
      - columnType
      - data
      - name
      type: object
    DataGridRow:
      example:
        data:
        - - data
          - data
        - - data
          - data
      properties:
        data:
          items:
            items:
              type: string
            type: array
          type: array
      type: object
    NameDescriptionPair:
      properties:
        description:
          description: The description of what this property does
          type: string
        name:
          description: The name of this property
          type: string
      required:
      - target
      - value
    ParameterCopyDetails:
      example:
        newClient: newClient
        newName: newName
        removeOriginal: false
      properties:
        newClient:
          description: (Optional) name of the client where the copy should be made
          type: string
        newName:
          description: global param name
          type: string
        removeOriginal:
          default: false
          description: remove the original parameter after creating the copy (essentially
            a move / rename)
          type: boolean
      required:
      - newName
    ResourceAndStatusResponse:
      allOf:
      - $ref: '#/components/schemas/ApiError'
      - properties:
          url:
            type: string
      example:
        exceptionType: exceptionType
        debug: debug
        message: message
        url: url
        status: status
      required:
      - status
    RuleAndStateResponse:
      example:
        modifiedDate: modifiedDate
        state: null
        version: version
        url: url
        status: status
      properties:
        status:
          type: string
        state:
          $ref: '#/components/schemas/ruleStateEnum'
        url:
          type: string
        version:
          type: string
        modifiedDate:
          type: string
    DataGridApiResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            $ref: '#/components/schemas/ruleGroupParameter_DefaultValue_oneOf'
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
          detailsOfDataGrid:
            detailsOfDataGrid:
              columnFormat:
              - ""
              - yyyy/MM/dd
              - ""
              - ""
              - ""
              columnHeader:
              - busgoal
              - adate
              - header
              - hero
              - skyscraper
              columnType:
              - String
              - Date
              - String
              - String
              - String
              data:
              - - upsell
                - 2010-12-25T12:00:00Z
                - default.jpg
                - default.jpg
                - default.jpg
        message: message
        status: status
    CacheApiResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            $ref: '#/components/schemas/CacheApiData'
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
          wasapplied: true
        message: message
        status: status
      required:
      - status
    CacheApiData:
      example:
        wasapplied: true
      properties:
        wasapplied:
          type: boolean
      type: object
    CacheExecuteResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            $ref: '#/components/schemas/CacheExecuteData'
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
          columns:
          - name: name
            isClusteringColumn: false
            type: null
            direction: null
            isPartitionKey: false
          - name: name
            isClusteringColumn: false
            type: null
            direction: null
            isPartitionKey: false
          rows:
          - - rows
            - rows
          - - rows
            - rows
          wasApplied: true
        message: message
        status: status
      required:
      - status
    CacheExecuteData:
      example:
        columns:
        - name: name
          isClusteringColumn: false
          type: null
          direction: null
          isPartitionKey: false
        - name: name
          isClusteringColumn: false
          type: null
          direction: null
          isPartitionKey: false
        rows:
        - - rows
          - rows
        - - rows
          - rows
        wasApplied: true
      properties:
        wasApplied:
          type: boolean
        columns:
          items:
            $ref: '#/components/schemas/CacheColumn'
          type: array
        rows:
          items:
            items:
              type: string
            type: array
          type: array
      type: object
    CacheDeleteData:
      example:
        columnsDropped:
        - name: name
          client: client
          target: null
          tableName: tableName
        - name: name
          client: client
          target: null
          tableName: tableName
        tablesDropped:
        - name: name
          client: client
          target: null
        - name: name
          client: client
          target: null
      properties:
        columnsDropped:
          items:
            $ref: '#/components/schemas/CacheColumnListing'
          type: array
        tablesDropped:
          items:
            $ref: '#/components/schemas/CacheTableListing'
          type: array
      type: object
    CacheTableListing:
      example:
        name: name
        client: client
        target: null
      properties:
        name:
          type: string
        client:
          type: string
        target:
          $ref: '#/components/schemas/targetEnum'
      type: object
    CacheColumnListing:
      example:
        name: name
        client: client
        target: null
        tableName: tableName
      properties:
        name:
          type: string
        client:
          type: string
        target:
          $ref: '#/components/schemas/targetEnum'
        tableName:
          type: string
      type: object
    CacheApiDeleteResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            $ref: '#/components/schemas/CacheDeleteData'
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
          columnsDropped:
          - name: name
            client: client
            target: null
            tableName: tableName
          - name: name
            client: client
            target: null
            tableName: tableName
          tablesDropped:
          - name: name
            client: client
            target: null
          - name: name
            client: client
            target: null
        message: message
        status: status
      required:
      - status
    CacheDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/CacheTable'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - tables:
          - size: 6
            keys:
            - keys
            - keys
            name: name
            defaultTTL: 0
            fields:
            - writetime: writetime
              name: name
              type: null
              value: value
              ttl: ttl
            - writetime: writetime
              name: name
              type: null
              value: value
              ttl: ttl
            type: null
            key: key
          - size: 6
            keys:
            - keys
            - keys
            name: name
            defaultTTL: 0
            fields:
            - writetime: writetime
              name: name
              type: null
              value: value
              ttl: ttl
            - writetime: writetime
              name: name
              type: null
              value: value
              ttl: ttl
            type: null
            key: key
          target: null
        - tables:
          - size: 6
            keys:
            - keys
            - keys
            name: name
            defaultTTL: 0
            fields:
            - writetime: writetime
              name: name
              type: null
              value: value
              ttl: ttl
            - writetime: writetime
              name: name
              type: null
              value: value
              ttl: ttl
            type: null
            key: key
          - size: 6
            keys:
            - keys
            - keys
            name: name
            defaultTTL: 0
            fields:
            - writetime: writetime
              name: name
              type: null
              value: value
              ttl: ttl
            - writetime: writetime
              name: name
              type: null
              value: value
              ttl: ttl
            type: null
            key: key
          target: null
        message: message
        status: status
    CacheTable:
      example:
        tables:
        - size: 6
          keys:
          - keys
          - keys
          name: name
          defaultTTL: 0
          fields:
          - writetime: writetime
            name: name
            type: null
            value: value
            ttl: ttl
          - writetime: writetime
            name: name
            type: null
            value: value
            ttl: ttl
          type: null
          key: key
        - size: 6
          keys:
          - keys
          - keys
          name: name
          defaultTTL: 0
          fields:
          - writetime: writetime
            name: name
            type: null
            value: value
            ttl: ttl
          - writetime: writetime
            name: name
            type: null
            value: value
            ttl: ttl
          type: null
          key: key
        target: null
      properties:
        tables:
          items:
            $ref: '#/components/schemas/CacheTableDetails'
          type: array
        target:
          $ref: '#/components/schemas/targetEnum'
      type: object
    CacheTableDetails:
      example:
        size: 6
        keys:
        - keys
        - keys
        name: name
        defaultTTL: 0
        fields:
        - writetime: writetime
          name: name
          type: null
          value: value
          ttl: ttl
        - writetime: writetime
          name: name
          type: null
          value: value
          ttl: ttl
        type: null
        key: key
      properties:
        fields:
          items:
            $ref: '#/components/schemas/CacheField'
          type: array
        key:
          type: string
        keys:
          items:
            type: string
          type: array
        name:
          type: string
        defaultTTL:
          type: integer
        size:
          type: integer
        type:
          $ref: '#/components/schemas/TableTypeEnum'
      type: object
    TableTypeEnum:
      description: The type of the Cache table
      enum:
      - normal
      - fieldvalue
      - futureevent
      type: string
    CacheField:
      example:
        writetime: writetime
        name: name
        type: null
        value: value
        ttl: ttl
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/CacheFieldType'
        value:
          type: string
        writetime:
          type: string
        ttl:
          type: string
      required:
      - name
      - type
      type: object
    CacheFieldType:
      description: Cassandra Data Types
      enum:
      - ascii
      - bigint
      - blob
      - boolean
      - counter
      - date
      - double
      - duration
      - float
      - inet
      - int
      - smallint
      - test
      - time
      - timestamp
      - timeuuid
      - tinyint
      - uuid
      - varchar
      - varint
      - long
      - text
      type: string
    CacheTableDefinition:
      example:
        name: name
        fields:
        - name: name
          isClusteringColumn: false
          type: null
          direction: null
          isPartitionKey: false
        - name: name
          isClusteringColumn: false
          type: null
          direction: null
          isPartitionKey: false
      properties:
        fields:
          description: The fields of the table. Will always extend any existing tables
          items:
            $ref: '#/components/schemas/CacheColumn'
          type: array
        name:
          description: The name of the table to alter.
          type: string
      type: object
    CacheColumn:
      example:
        name: name
        isClusteringColumn: false
        type: null
        direction: null
        isPartitionKey: false
      properties:
        direction:
          $ref: '#/components/schemas/CacheTableDirectionEnum'
        isClusteringColumn:
          default: false
          description: Is this field something that the data is physically clustered
            on?
          type: boolean
        isPartitionKey:
          default: false
          description: Is this field part of the partition key?
          type: boolean
        name:
          description: The name of the field
          type: string
        type:
          $ref: '#/components/schemas/CacheFieldType'
      type: object
    CacheTableDirectionEnum:
      description: The direction of the clustering column
      enum:
      - ASC
      - DESC
      type: string
    CacheCQL:
      example:
        retries: 0
        consistency: null
        cql: cql
      properties:
        consistency:
          $ref: '#/components/schemas/CacheConsistencyLevel'
        cql:
          description: "The insert, select or delete CQL command"
          type: string
        retries:
          description: "Number of retries, before giving up"
          type: integer
    CacheConsistencyLevel:
      description: The consistency level of a request.
      enum:
      - ANY
      - ONE
      - TWO
      - THREE
      - QUORUM
      - ALL
      - LOCAL_ONE
      - LOCAL_QUORUM
      - EACH_QUORUM
      - SERIAL
      - LOCAL_SERIA
      type: string
    templateList:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/templateData'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - inputconnectors:
          - name: name
            active: true
            fields:
            - name: name
              source: source
              type: type
            - name: name
              source: source
              type: type
          - name: name
            active: true
            fields:
            - name: name
              source: source
              type: type
            - name: name
              source: source
              type: type
          datagrids:
          - datagrids
          - datagrids
          cxidprovider: true
          templatelastmodifieddate: templatelastmodifieddate
          serviceCost: 0.8008281904610115
          icon:
            background: background
            svgIcon: svgIcon
            foreground: foreground
            matIcon: matIcon
          outputconnectors:
          - connectedInputs:
            - connectedInputs
            - connectedInputs
            name: name
            active: true
            disabled: true
            fields:
            - name: name
              source: source
              type: type
            - name: name
              source: source
              type: type
            realtimeOutputSteps:
            - name: name
            - name: name
          - connectedInputs:
            - connectedInputs
            - connectedInputs
            name: name
            active: true
            disabled: true
            fields:
            - name: name
              source: source
              type: type
            - name: name
              source: source
              type: type
            realtimeOutputSteps:
            - name: name
            - name: name
          isstarttile: true
          version: version
          url: url
          templatelastmodifieduser: templatelastmodifieduser
          templatedescription: templatedescription
          datagridsdetails:
          - detailsOfDataGrid:
              columnFormat:
              - ""
              - yyyy/MM/dd
              - ""
              - ""
              - ""
              columnHeader:
              - busgoal
              - adate
              - header
              - hero
              - skyscraper
              columnType:
              - String
              - Date
              - String
              - String
              - String
              data:
              - - upsell
                - 2010-12-25T12:00:00Z
                - default.jpg
                - default.jpg
                - default.jpg
          - detailsOfDataGrid:
              columnFormat:
              - ""
              - yyyy/MM/dd
              - ""
              - ""
              - ""
              columnHeader:
              - busgoal
              - adate
              - header
              - hero
              - skyscraper
              columnType:
              - String
              - Date
              - String
              - String
              - String
              data:
              - - upsell
                - 2010-12-25T12:00:00Z
                - default.jpg
                - default.jpg
                - default.jpg
          ktrname: ktrname
          realtimeRuleSteps:
          - stepName: stepName
            client: client
            ruleName: ruleName
            ruleUrl: ruleUrl
            target: target
          - stepName: stepName
            client: client
            ruleName: ruleName
            ruleUrl: ruleUrl
            target: target
          helpLink: helpLink
          realtimeInputSteps:
          - headers:
            - dataType: null
              name: name
            - dataType: null
              name: name
            repeatTestData: true
            defaultResponseContentType: defaultResponseContentType
            defaultValue: defaultValue
            priority: priority
            timeoutHttpCode: timeoutHttpCode
            overflowProtection: true
            defaultHttpCode: defaultHttpCode
            stepName: stepName
            useTestData: true
            timeoutValue: timeoutValue
            timeoutMilliseconds: timeoutMilliseconds
            requestContentType: requestContentType
          - headers:
            - dataType: null
              name: name
            - dataType: null
              name: name
            repeatTestData: true
            defaultResponseContentType: defaultResponseContentType
            defaultValue: defaultValue
            priority: priority
            timeoutHttpCode: timeoutHttpCode
            overflowProtection: true
            defaultHttpCode: defaultHttpCode
            stepName: stepName
            useTestData: true
            timeoutValue: timeoutValue
            timeoutMilliseconds: timeoutMilliseconds
            requestContentType: requestContentType
          switchcases:
          - caseTargets:
            - caseValue: caseValue
              caseTargetStepName: caseTargetStepName
            - caseValue: caseValue
              caseTargetStepName: caseTargetStepName
            stepName: stepName
            active: true
            defaultCaseTarget:
              caseValue: caseValue
              caseTargetStepName: caseTargetStepName
            isContains: true
          - caseTargets:
            - caseValue: caseValue
              caseTargetStepName: caseTargetStepName
            - caseValue: caseValue
              caseTargetStepName: caseTargetStepName
            stepName: stepName
            active: true
            defaultCaseTarget:
              caseValue: caseValue
              caseTargetStepName: caseTargetStepName
            isContains: true
          controlEnabled: true
          client: client
          templatename: templatename
          mabsteps:
          - seed: 6
            fieldKey: fieldKey
            staticTable: staticTable
            reportingFields: true
            variants:
            - staticVariant: staticVariant
              startDate: startDate
            - staticVariant: staticVariant
              startDate: startDate
            parameterTable: parameterTable
            staticExperimentationFrequency: 1
            parameterMabMode: parameterMabMode
            parameterStatisticalSignificance: parameterStatisticalSignificance
            field: field
            stepName: stepName
            parameterKey: parameterKey
            staticKey: staticKey
            staticMabMode: staticMabMode
            parameterExperimentationFrequency: parameterExperimentationFrequency
            staticStatisticalSignificance: staticStatisticalSignificance
          - seed: 6
            fieldKey: fieldKey
            staticTable: staticTable
            reportingFields: true
            variants:
            - staticVariant: staticVariant
              startDate: startDate
            - staticVariant: staticVariant
              startDate: startDate
            parameterTable: parameterTable
            staticExperimentationFrequency: 1
            parameterMabMode: parameterMabMode
            parameterStatisticalSignificance: parameterStatisticalSignificance
            field: field
            stepName: stepName
            parameterKey: parameterKey
            staticKey: staticKey
            staticMabMode: staticMabMode
            parameterExperimentationFrequency: parameterExperimentationFrequency
            staticStatisticalSignificance: staticStatisticalSignificance
          jsonDecoders:
          - expandSizeOneArrays: true
            fieldToDecode: fieldToDecode
            stepName: stepName
            delimiter: delimiter
            flattenMultipleRows: true
            fields:
            - outputName: outputName
              name: name
              type: null
              required: Allowed
            - outputName: outputName
              name: name
              type: null
              required: Allowed
            parseAsNameValue: true
          - expandSizeOneArrays: true
            fieldToDecode: fieldToDecode
            stepName: stepName
            delimiter: delimiter
            flattenMultipleRows: true
            fields:
            - outputName: outputName
              name: name
              type: null
              required: Allowed
            - outputName: outputName
              name: name
              type: null
              required: Allowed
            parseAsNameValue: true
          parameters:
          - requiresAdmin: true
            usingGlobal: true
            isConfidential: true
            picklistItems:
            - text: text
              value: value
            - text: text
              value: value
            defaultValue: defaultValue
            dataType: string
            description: description
            isVisible: true
            units: units
            parameterName: parameterName
            targets:
            - value: value
              target: null
            - value: value
              target: null
            url: url
            globalParam: true
            businessGoal: businessGoal
            isForcedValue: true
            isEditable: true
            name: name
            client: client
          - requiresAdmin: true
            usingGlobal: true
            isConfidential: true
            picklistItems:
            - text: text
              value: value
            - text: text
              value: value
            defaultValue: defaultValue
            dataType: string
            description: description
            isVisible: true
            units: units
            parameterName: parameterName
            targets:
            - value: value
              target: null
            - value: value
              target: null
            url: url
            globalParam: true
            businessGoal: businessGoal
            isForcedValue: true
            isEditable: true
            name: name
            client: client
        - inputconnectors:
          - name: name
            active: true
            fields:
            - name: name
              source: source
              type: type
            - name: name
              source: source
              type: type
          - name: name
            active: true
            fields:
            - name: name
              source: source
              type: type
            - name: name
              source: source
              type: type
          datagrids:
          - datagrids
          - datagrids
          cxidprovider: true
          templatelastmodifieddate: templatelastmodifieddate
          serviceCost: 0.8008281904610115
          icon:
            background: background
            svgIcon: svgIcon
            foreground: foreground
            matIcon: matIcon
          outputconnectors:
          - connectedInputs:
            - connectedInputs
            - connectedInputs
            name: name
            active: true
            disabled: true
            fields:
            - name: name
              source: source
              type: type
            - name: name
              source: source
              type: type
            realtimeOutputSteps:
            - name: name
            - name: name
          - connectedInputs:
            - connectedInputs
            - connectedInputs
            name: name
            active: true
            disabled: true
            fields:
            - name: name
              source: source
              type: type
            - name: name
              source: source
              type: type
            realtimeOutputSteps:
            - name: name
            - name: name
          isstarttile: true
          version: version
          url: url
          templatelastmodifieduser: templatelastmodifieduser
          templatedescription: templatedescription
          datagridsdetails:
          - detailsOfDataGrid:
              columnFormat:
              - ""
              - yyyy/MM/dd
              - ""
              - ""
              - ""
              columnHeader:
              - busgoal
              - adate
              - header
              - hero
              - skyscraper
              columnType:
              - String
              - Date
              - String
              - String
              - String
              data:
              - - upsell
                - 2010-12-25T12:00:00Z
                - default.jpg
                - default.jpg
                - default.jpg
          - detailsOfDataGrid:
              columnFormat:
              - ""
              - yyyy/MM/dd
              - ""
              - ""
              - ""
              columnHeader:
              - busgoal
              - adate
              - header
              - hero
              - skyscraper
              columnType:
              - String
              - Date
              - String
              - String
              - String
              data:
              - - upsell
                - 2010-12-25T12:00:00Z
                - default.jpg
                - default.jpg
                - default.jpg
          ktrname: ktrname
          realtimeRuleSteps:
          - stepName: stepName
            client: client
            ruleName: ruleName
            ruleUrl: ruleUrl
            target: target
          - stepName: stepName
            client: client
            ruleName: ruleName
            ruleUrl: ruleUrl
            target: target
          helpLink: helpLink
          realtimeInputSteps:
          - headers:
            - dataType: null
              name: name
            - dataType: null
              name: name
            repeatTestData: true
            defaultResponseContentType: defaultResponseContentType
            defaultValue: defaultValue
            priority: priority
            timeoutHttpCode: timeoutHttpCode
            overflowProtection: true
            defaultHttpCode: defaultHttpCode
            stepName: stepName
            useTestData: true
            timeoutValue: timeoutValue
            timeoutMilliseconds: timeoutMilliseconds
            requestContentType: requestContentType
          - headers:
            - dataType: null
              name: name
            - dataType: null
              name: name
            repeatTestData: true
            defaultResponseContentType: defaultResponseContentType
            defaultValue: defaultValue
            priority: priority
            timeoutHttpCode: timeoutHttpCode
            overflowProtection: true
            defaultHttpCode: defaultHttpCode
            stepName: stepName
            useTestData: true
            timeoutValue: timeoutValue
            timeoutMilliseconds: timeoutMilliseconds
            requestContentType: requestContentType
          switchcases:
          - caseTargets:
            - caseValue: caseValue
              caseTargetStepName: caseTargetStepName
            - caseValue: caseValue
              caseTargetStepName: caseTargetStepName
            stepName: stepName
            active: true
            defaultCaseTarget:
              caseValue: caseValue
              caseTargetStepName: caseTargetStepName
            isContains: true
          - caseTargets:
            - caseValue: caseValue
              caseTargetStepName: caseTargetStepName
            - caseValue: caseValue
              caseTargetStepName: caseTargetStepName
            stepName: stepName
            active: true
            defaultCaseTarget:
              caseValue: caseValue
              caseTargetStepName: caseTargetStepName
            isContains: true
          controlEnabled: true
          client: client
          templatename: templatename
          mabsteps:
          - seed: 6
            fieldKey: fieldKey
            staticTable: staticTable
            reportingFields: true
            variants:
            - staticVariant: staticVariant
              startDate: startDate
            - staticVariant: staticVariant
              startDate: startDate
            parameterTable: parameterTable
            staticExperimentationFrequency: 1
            parameterMabMode: parameterMabMode
            parameterStatisticalSignificance: parameterStatisticalSignificance
            field: field
            stepName: stepName
            parameterKey: parameterKey
            staticKey: staticKey
            staticMabMode: staticMabMode
            parameterExperimentationFrequency: parameterExperimentationFrequency
            staticStatisticalSignificance: staticStatisticalSignificance
          - seed: 6
            fieldKey: fieldKey
            staticTable: staticTable
            reportingFields: true
            variants:
            - staticVariant: staticVariant
              startDate: startDate
            - staticVariant: staticVariant
              startDate: startDate
            parameterTable: parameterTable
            staticExperimentationFrequency: 1
            parameterMabMode: parameterMabMode
            parameterStatisticalSignificance: parameterStatisticalSignificance
            field: field
            stepName: stepName
            parameterKey: parameterKey
            staticKey: staticKey
            staticMabMode: staticMabMode
            parameterExperimentationFrequency: parameterExperimentationFrequency
            staticStatisticalSignificance: staticStatisticalSignificance
          jsonDecoders:
          - expandSizeOneArrays: true
            fieldToDecode: fieldToDecode
            stepName: stepName
            delimiter: delimiter
            flattenMultipleRows: true
            fields:
            - outputName: outputName
              name: name
              type: null
              required: Allowed
            - outputName: outputName
              name: name
              type: null
              required: Allowed
            parseAsNameValue: true
          - expandSizeOneArrays: true
            fieldToDecode: fieldToDecode
            stepName: stepName
            delimiter: delimiter
            flattenMultipleRows: true
            fields:
            - outputName: outputName
              name: name
              type: null
              required: Allowed
            - outputName: outputName
              name: name
              type: null
              required: Allowed
            parseAsNameValue: true
          parameters:
          - requiresAdmin: true
            usingGlobal: true
            isConfidential: true
            picklistItems:
            - text: text
              value: value
            - text: text
              value: value
            defaultValue: defaultValue
            dataType: string
            description: description
            isVisible: true
            units: units
            parameterName: parameterName
            targets:
            - value: value
              target: null
            - value: value
              target: null
            url: url
            globalParam: true
            businessGoal: businessGoal
            isForcedValue: true
            isEditable: true
            name: name
            client: client
          - requiresAdmin: true
            usingGlobal: true
            isConfidential: true
            picklistItems:
            - text: text
              value: value
            - text: text
              value: value
            defaultValue: defaultValue
            dataType: string
            description: description
            isVisible: true
            units: units
            parameterName: parameterName
            targets:
            - value: value
              target: null
            - value: value
              target: null
            url: url
            globalParam: true
            businessGoal: businessGoal
            isForcedValue: true
            isEditable: true
            name: name
            client: client
        message: message
        status: status
    templateData:
      example:
        inputconnectors:
        - name: name
          active: true
          fields:
          - name: name
            source: source
            type: type
          - name: name
            source: source
            type: type
        - name: name
          active: true
          fields:
          - name: name
            source: source
            type: type
          - name: name
            source: source
            type: type
        datagrids:
        - datagrids
        - datagrids
        cxidprovider: true
        templatelastmodifieddate: templatelastmodifieddate
        serviceCost: 0.8008281904610115
        icon:
          background: background
          svgIcon: svgIcon
          foreground: foreground
          matIcon: matIcon
        outputconnectors:
        - connectedInputs:
          - connectedInputs
          - connectedInputs
          name: name
          active: true
          disabled: true
          fields:
          - name: name
            source: source
            type: type
          - name: name
            source: source
            type: type
          realtimeOutputSteps:
          - name: name
          - name: name
        - connectedInputs:
          - connectedInputs
          - connectedInputs
          name: name
          active: true
          disabled: true
          fields:
          - name: name
            source: source
            type: type
          - name: name
            source: source
            type: type
          realtimeOutputSteps:
          - name: name
          - name: name
        isstarttile: true
        version: version
        url: url
        templatelastmodifieduser: templatelastmodifieduser
        templatedescription: templatedescription
        datagridsdetails:
        - detailsOfDataGrid:
            columnFormat:
            - ""
            - yyyy/MM/dd
            - ""
            - ""
            - ""
            columnHeader:
            - busgoal
            - adate
            - header
            - hero
            - skyscraper
            columnType:
            - String
            - Date
            - String
            - String
            - String
            data:
            - - upsell
              - 2010-12-25T12:00:00Z
              - default.jpg
              - default.jpg
              - default.jpg
        - detailsOfDataGrid:
            columnFormat:
            - ""
            - yyyy/MM/dd
            - ""
            - ""
            - ""
            columnHeader:
            - busgoal
            - adate
            - header
            - hero
            - skyscraper
            columnType:
            - String
            - Date
            - String
            - String
            - String
            data:
            - - upsell
              - 2010-12-25T12:00:00Z
              - default.jpg
              - default.jpg
              - default.jpg
        ktrname: ktrname
        realtimeRuleSteps:
        - stepName: stepName
          client: client
          ruleName: ruleName
          ruleUrl: ruleUrl
          target: target
        - stepName: stepName
          client: client
          ruleName: ruleName
          ruleUrl: ruleUrl
          target: target
        helpLink: helpLink
        realtimeInputSteps:
        - headers:
          - dataType: null
            name: name
          - dataType: null
            name: name
          repeatTestData: true
          defaultResponseContentType: defaultResponseContentType
          defaultValue: defaultValue
          priority: priority
          timeoutHttpCode: timeoutHttpCode
          overflowProtection: true
          defaultHttpCode: defaultHttpCode
          stepName: stepName
          useTestData: true
          timeoutValue: timeoutValue
          timeoutMilliseconds: timeoutMilliseconds
          requestContentType: requestContentType
        - headers:
          - dataType: null
            name: name
          - dataType: null
            name: name
          repeatTestData: true
          defaultResponseContentType: defaultResponseContentType
          defaultValue: defaultValue
          priority: priority
          timeoutHttpCode: timeoutHttpCode
          overflowProtection: true
          defaultHttpCode: defaultHttpCode
          stepName: stepName
          useTestData: true
          timeoutValue: timeoutValue
          timeoutMilliseconds: timeoutMilliseconds
          requestContentType: requestContentType
        switchcases:
        - caseTargets:
          - caseValue: caseValue
            caseTargetStepName: caseTargetStepName
          - caseValue: caseValue
            caseTargetStepName: caseTargetStepName
          stepName: stepName
          active: true
          defaultCaseTarget:
            caseValue: caseValue
            caseTargetStepName: caseTargetStepName
          isContains: true
        - caseTargets:
          - caseValue: caseValue
            caseTargetStepName: caseTargetStepName
          - caseValue: caseValue
            caseTargetStepName: caseTargetStepName
          stepName: stepName
          active: true
          defaultCaseTarget:
            caseValue: caseValue
            caseTargetStepName: caseTargetStepName
          isContains: true
        controlEnabled: true
        client: client
        templatename: templatename
        mabsteps:
        - seed: 6
          fieldKey: fieldKey
          staticTable: staticTable
          reportingFields: true
          variants:
          - staticVariant: staticVariant
            startDate: startDate
          - staticVariant: staticVariant
            startDate: startDate
          parameterTable: parameterTable
          staticExperimentationFrequency: 1
          parameterMabMode: parameterMabMode
          parameterStatisticalSignificance: parameterStatisticalSignificance
          field: field
          stepName: stepName
          parameterKey: parameterKey
          staticKey: staticKey
          staticMabMode: staticMabMode
          parameterExperimentationFrequency: parameterExperimentationFrequency
          staticStatisticalSignificance: staticStatisticalSignificance
        - seed: 6
          fieldKey: fieldKey
          staticTable: staticTable
          reportingFields: true
          variants:
          - staticVariant: staticVariant
            startDate: startDate
          - staticVariant: staticVariant
            startDate: startDate
          parameterTable: parameterTable
          staticExperimentationFrequency: 1
          parameterMabMode: parameterMabMode
          parameterStatisticalSignificance: parameterStatisticalSignificance
          field: field
          stepName: stepName
          parameterKey: parameterKey
          staticKey: staticKey
          staticMabMode: staticMabMode
          parameterExperimentationFrequency: parameterExperimentationFrequency
          staticStatisticalSignificance: staticStatisticalSignificance
        jsonDecoders:
        - expandSizeOneArrays: true
          fieldToDecode: fieldToDecode
          stepName: stepName
          delimiter: delimiter
          flattenMultipleRows: true
          fields:
          - outputName: outputName
            name: name
            type: null
            required: Allowed
          - outputName: outputName
            name: name
            type: null
            required: Allowed
          parseAsNameValue: true
        - expandSizeOneArrays: true
          fieldToDecode: fieldToDecode
          stepName: stepName
          delimiter: delimiter
          flattenMultipleRows: true
          fields:
          - outputName: outputName
            name: name
            type: null
            required: Allowed
          - outputName: outputName
            name: name
            type: null
            required: Allowed
          parseAsNameValue: true
        parameters:
        - requiresAdmin: true
          usingGlobal: true
          isConfidential: true
          picklistItems:
          - text: text
            value: value
          - text: text
            value: value
          defaultValue: defaultValue
          dataType: string
          description: description
          isVisible: true
          units: units
          parameterName: parameterName
          targets:
          - value: value
            target: null
          - value: value
            target: null
          url: url
          globalParam: true
          businessGoal: businessGoal
          isForcedValue: true
          isEditable: true
          name: name
          client: client
        - requiresAdmin: true
          usingGlobal: true
          isConfidential: true
          picklistItems:
          - text: text
            value: value
          - text: text
            value: value
          defaultValue: defaultValue
          dataType: string
          description: description
          isVisible: true
          units: units
          parameterName: parameterName
          targets:
          - value: value
            target: null
          - value: value
            target: null
          url: url
          globalParam: true
          businessGoal: businessGoal
          isForcedValue: true
          isEditable: true
          name: name
          client: client
      properties:
        inputconnectors:
          items:
            $ref: '#/components/schemas/inputConnector'
          type: array
        datagrids:
          items:
            type: string
          type: array
        datagridsdetails:
          items:
            $ref: '#/components/schemas/DataGridDetails'
          type: array
        cxidprovider:
          type: boolean
        templatelastmodifieddate:
          type: string
        serviceCost:
          type: number
        icon:
          $ref: '#/components/schemas/icon'
        outputconnectors:
          items:
            $ref: '#/components/schemas/outputConnector'
          type: array
        isstarttile:
          type: boolean
        version:
          type: string
        url:
          type: string
        templatelastmodifieduser:
          type: string
        ktrname:
          type: string
        realtimeRuleSteps:
          items:
            $ref: '#/components/schemas/ruleCallDetails'
          type: array
        helpLink:
          type: string
        realtimeInputSteps:
          items:
            $ref: '#/components/schemas/RealtimeInputStepDetails'
          type: array
        switchcases:
          items:
            $ref: '#/components/schemas/switchCaseDetails'
          type: array
        controlEnabled:
          type: boolean
        client:
          type: string
        templatename:
          type: string
        mabsteps:
          items:
            $ref: '#/components/schemas/MABStepDetails'
          type: array
        jsonDecoders:
          items:
            $ref: '#/components/schemas/jsonDecoderDetails'
          type: array
        parameters:
          items:
            $ref: '#/components/schemas/ruleParameter'
          type: array
        templatedescription:
          type: string
      type: object
    icon:
      example:
        background: background
        svgIcon: svgIcon
        foreground: foreground
        matIcon: matIcon
      properties:
        background:
          type: string
        svgIcon:
          type: string
        foreground:
          type: string
        matIcon:
          type: string
      required:
      - background
      - foreground
      type: object
    ruleCallDetails:
      example:
        stepName: stepName
        client: client
        ruleName: ruleName
        ruleUrl: ruleUrl
        target: target
      properties:
        stepName:
          type: string
        client:
          type: string
        ruleName:
          type: string
        ruleUrl:
          type: string
        target:
          type: string
      type: object
    RealtimeInputStepDetails:
      example:
        headers:
        - dataType: null
          name: name
        - dataType: null
          name: name
        repeatTestData: true
        defaultResponseContentType: defaultResponseContentType
        defaultValue: defaultValue
        priority: priority
        timeoutHttpCode: timeoutHttpCode
        overflowProtection: true
        defaultHttpCode: defaultHttpCode
        stepName: stepName
        useTestData: true
        timeoutValue: timeoutValue
        timeoutMilliseconds: timeoutMilliseconds
        requestContentType: requestContentType
      properties:
        headers:
          items:
            $ref: '#/components/schemas/RealtimeInputStepHeader'
          type: array
        repeatTestData:
          type: boolean
        timeoutHttpCode:
          type: string
        defaultResponseContentType:
          type: string
        overflowProtection:
          type: boolean
        defaultHttpCode:
          type: string
        stepName:
          type: string
        defaultValue:
          type: string
        useTestData:
          type: boolean
        timeoutValue:
          type: string
        timeoutMilliseconds:
          type: string
        priority:
          type: string
        requestContentType:
          type: string
      type: object
    RealtimeInputStepHeader:
      example:
        dataType: null
        name: name
      properties:
        name:
          type: string
        dataType:
          $ref: '#/components/schemas/KettleFieldType'
      type: object
    switchCaseDetails:
      example:
        caseTargets:
        - caseValue: caseValue
          caseTargetStepName: caseTargetStepName
        - caseValue: caseValue
          caseTargetStepName: caseTargetStepName
        stepName: stepName
        active: true
        defaultCaseTarget:
          caseValue: caseValue
          caseTargetStepName: caseTargetStepName
        isContains: true
      properties:
        caseTargets:
          items:
            $ref: '#/components/schemas/caseTargetDetails'
          type: array
        stepName:
          type: string
        active:
          type: boolean
        defaultCaseTarget:
          $ref: '#/components/schemas/caseTargetDetails'
        isContains:
          type: boolean
      type: object
    caseTargetDetails:
      example:
        caseValue: caseValue
        caseTargetStepName: caseTargetStepName
      properties:
        caseValue:
          type: string
        caseTargetStepName:
          type: string
      type: object
    jsonDecoderDetails:
      example:
        expandSizeOneArrays: true
        fieldToDecode: fieldToDecode
        stepName: stepName
        delimiter: delimiter
        flattenMultipleRows: true
        fields:
        - outputName: outputName
          name: name
          type: null
          required: Allowed
        - outputName: outputName
          name: name
          type: null
          required: Allowed
        parseAsNameValue: true
      properties:
        expandSizeOneArrays:
          type: boolean
        fieldToDecode:
          type: string
        stepName:
          type: string
        delimiter:
          type: string
        flattenMultipleRows:
          type: boolean
        fields:
          items:
            $ref: '#/components/schemas/jsonDecoderField'
          type: array
        parseAsNameValue:
          type: boolean
      type: object
    jsonDecoderField:
      example:
        outputName: outputName
        name: name
        type: null
        required: Allowed
      properties:
        outputName:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/KettleFieldType'
        required:
          enum:
          - Allowed
          type: string
      type: object
    KettleFieldType:
      description: Kettle Data Types
      enum:
      - BigNumber
      - Binary
      - blob
      - Boolean
      - counter
      - Date
      - Integer
      - Internet Address
      - Number
      - String
      - Timestamp
      type: string
    MABStepDetails:
      example:
        seed: 6
        fieldKey: fieldKey
        staticTable: staticTable
        reportingFields: true
        variants:
        - staticVariant: staticVariant
          startDate: startDate
        - staticVariant: staticVariant
          startDate: startDate
        parameterTable: parameterTable
        staticExperimentationFrequency: 1
        parameterMabMode: parameterMabMode
        parameterStatisticalSignificance: parameterStatisticalSignificance
        field: field
        stepName: stepName
        parameterKey: parameterKey
        staticKey: staticKey
        staticMabMode: staticMabMode
        parameterExperimentationFrequency: parameterExperimentationFrequency
        staticStatisticalSignificance: staticStatisticalSignificance
      properties:
        field:
          type: string
        fieldKey:
          type: string
        parameterKey:
          type: string
        parameterExperimentationFrequency:
          type: string
        parameterMabMode:
          type: string
        parameterStatisticalSignificance:
          type: string
        parameterTable:
          type: string
        reportingFields:
          type: boolean
        seed:
          type: integer
        staticMabMode:
          type: string
        staticExperimentationFrequency:
          type: integer
        staticKey:
          type: string
        staticStatisticalSignificance:
          type: string
        staticTable:
          type: string
        stepName:
          type: string
        variants:
          items:
            $ref: '#/components/schemas/MABVariant'
          type: array
      type: object
    MABVariant:
      additionalProperties: true
      example:
        staticVariant: staticVariant
        startDate: startDate
      properties:
        staticVariant:
          type: string
        startDate:
          type: string
      type: object
    TemplatePublishSettings:
      additionalProperties:
        type: string
      example:
        detailsOfDataGrid:
          detailsOfDataGrid:
            columnFormat:
            - ""
            - yyyy/MM/dd
            - ""
            - ""
            - ""
            columnHeader:
            - busgoal
            - adate
            - header
            - hero
            - skyscraper
            columnType:
            - String
            - Date
            - String
            - String
            - String
            data:
            - - upsell
              - 2010-12-25T12:00:00Z
              - default.jpg
              - default.jpg
              - default.jpg
        rulename: rulename
        rulegroups:
        - rulegroups
        - rulegroups
      properties:
        detailsOfDataGrid:
          $ref: '#/components/schemas/DataGridDetails'
        rulename:
          type: string
        rulegroups:
          items:
            type: string
          type: array
      type: object
    ClientData:
      example:
        clients:
        - aliases:
          - destination: destination
            alias: alias
          - destination: destination
            alias: alias
          lastModifiedDate: lastModifiedDate
          name: name
          defaultCacheDuration: 0
        - aliases:
          - destination: destination
            alias: alias
          - destination: destination
            alias: alias
          lastModifiedDate: lastModifiedDate
          name: name
          defaultCacheDuration: 0
        provider: provider
        permissions:
        - permissions
        - permissions
        username: username
      properties:
        clients:
          items:
            $ref: '#/components/schemas/ClientDetails'
          type: array
        provider:
          type: string
        permissions:
          items:
            type: string
          type: array
        username:
          type: string
      type: object
    ClientDetails:
      example:
        aliases:
        - destination: destination
          alias: alias
        - destination: destination
          alias: alias
        lastModifiedDate: lastModifiedDate
        name: name
        defaultCacheDuration: 0
      properties:
        aliases:
          items:
            $ref: '#/components/schemas/AliasDetails'
          type: array
        lastModifiedDate:
          type: string
        name:
          type: string
        defaultCacheDuration:
          type: integer
      type: object
    AliasDetails:
      example:
        destination: destination
        alias: alias
      properties:
        destination:
          type: string
        alias:
          type: string
      type: object
    CacheChangesResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          changes:
            type: integer
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        changes: 0
        message: message
        status: status
      required:
      - status
    LogsApiResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/LogsData'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - msg: msg
          nodeName: nodeName
          agent:
            type: type
            version: version
          log:
            file:
              path: path
            offset: 0
          tileId: tileId
          restartSequence: restartSequence
          rule: rule
          log_type: log_type
          node_desc: node_desc
          ecs:
            version: version
          host:
            os: "{}"
            containerized: true
            name: name
          client: client
          event:
            original: original
          seq: seq
          info: info
          timestamp: timestamp
          rule_log_entry: rule_log_entry
          level: level
          version: version
          tags:
          - tags
          - tags
          target: target
          templateUrl: templateUrl
          tileName: tileName
          input:
            type: type
          node: node
          loglevel: null
          step: step
          fields:
            env: env
            version: version
        - msg: msg
          nodeName: nodeName
          agent:
            type: type
            version: version
          log:
            file:
              path: path
            offset: 0
          tileId: tileId
          restartSequence: restartSequence
          rule: rule
          log_type: log_type
          node_desc: node_desc
          ecs:
            version: version
          host:
            os: "{}"
            containerized: true
            name: name
          client: client
          event:
            original: original
          seq: seq
          info: info
          timestamp: timestamp
          rule_log_entry: rule_log_entry
          level: level
          version: version
          tags:
          - tags
          - tags
          target: target
          templateUrl: templateUrl
          tileName: tileName
          input:
            type: type
          node: node
          loglevel: null
          step: step
          fields:
            env: env
            version: version
        message: message
        status: status
      required:
      - status
    LogsData:
      additionalProperties: true
      example:
        msg: msg
        nodeName: nodeName
        agent:
          type: type
          version: version
        log:
          file:
            path: path
          offset: 0
        tileId: tileId
        restartSequence: restartSequence
        rule: rule
        log_type: log_type
        node_desc: node_desc
        ecs:
          version: version
        host:
          os: "{}"
          containerized: true
          name: name
        client: client
        event:
          original: original
        seq: seq
        info: info
        timestamp: timestamp
        rule_log_entry: rule_log_entry
        level: level
        version: version
        tags:
        - tags
        - tags
        target: target
        templateUrl: templateUrl
        tileName: tileName
        input:
          type: type
        node: node
        loglevel: null
        step: step
        fields:
          env: env
          version: version
      properties:
        agent:
          $ref: '#/components/schemas/LogsData_agent'
        client:
          type: string
        ecs:
          $ref: '#/components/schemas/LogsData_ecs'
        event:
          $ref: '#/components/schemas/LogsData_event'
        fields:
          $ref: '#/components/schemas/LogsData_fields'
        host:
          $ref: '#/components/schemas/LogsData_host'
        info:
          type: string
        input:
          $ref: '#/components/schemas/LogsData_input'
        level:
          type: string
        log:
          $ref: '#/components/schemas/LogsData_log'
        log_type:
          type: string
        loglevel:
          $ref: '#/components/schemas/logLevelEnum'
        msg:
          type: string
        node:
          type: string
        nodeName:
          type: string
        node_desc:
          type: string
        restartSequence:
          type: string
        rule:
          type: string
        rule_log_entry:
          type: string
        seq:
          type: string
        step:
          type: string
        tags:
          items:
            type: string
          type: array
        target:
          type: string
        templateUrl:
          type: string
        tileId:
          type: string
        tileName:
          type: string
        timestamp:
          type: string
        version:
          type: string
      type: object
    AuditLogReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/AuditLogReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - isrule: true
          auditlog:
          - modifiedon: modifiedon
            modifiedby: modifiedby
          - modifiedon: modifiedon
            modifiedby: modifiedby
          name: name
          client: client
          url: url
          target: target
        - isrule: true
          auditlog:
          - modifiedon: modifiedon
            modifiedby: modifiedby
          - modifiedon: modifiedon
            modifiedby: modifiedby
          name: name
          client: client
          url: url
          target: target
        message: message
        status: status
    AuditLogReport:
      example:
        isrule: true
        auditlog:
        - modifiedon: modifiedon
          modifiedby: modifiedby
        - modifiedon: modifiedon
          modifiedby: modifiedby
        name: name
        client: client
        url: url
        target: target
      properties:
        target:
          type: string
        client:
          type: string
        name:
          type: string
        url:
          type: string
        auditlog:
          items:
            $ref: '#/components/schemas/AuditLogEntry'
          type: array
        isrule:
          type: boolean
      type: object
    AuditLogEntry:
      example:
        modifiedon: modifiedon
        modifiedby: modifiedby
      properties:
        modifiedon:
          description: "The date and time when the modification was made, in a custom\
            \ format."
          type: string
        modifiedby:
          description: Identifier of the user who made the modification.
          type: string
      type: object
    CacheDataReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/CacheDataReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - column: column
          rulename: rulename
          table: table
          url: url
          direction: null
        - column: column
          rulename: rulename
          table: table
          url: url
          direction: null
        message: message
        status: status
    CacheDataReport:
      example:
        column: column
        rulename: rulename
        table: table
        url: url
        direction: null
      properties:
        column:
          type: string
        rulename:
          type: string
        table:
          type: string
        url:
          type: string
        direction:
          $ref: '#/components/schemas/CacheDirectionEnum'
      type: object
    CacheDirectionEnum:
      description: The direction of the clustering column
      enum:
      - READ
      - WRITE
      - NONE
      type: string
    CacheUnusedColumnsReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/CacheUnusedColumnsReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - unusedColumns:
          - firstReportedNotSeen: firstReportedNotSeen
            columnName: columnName
          - firstReportedNotSeen: firstReportedNotSeen
            columnName: columnName
          client: client
          target: null
          tableName: tableName
        - unusedColumns:
          - firstReportedNotSeen: firstReportedNotSeen
            columnName: columnName
          - firstReportedNotSeen: firstReportedNotSeen
            columnName: columnName
          client: client
          target: null
          tableName: tableName
        message: message
        status: status
    CacheUnusedColumnsReport:
      example:
        unusedColumns:
        - firstReportedNotSeen: firstReportedNotSeen
          columnName: columnName
        - firstReportedNotSeen: firstReportedNotSeen
          columnName: columnName
        client: client
        target: null
        tableName: tableName
      properties:
        client:
          type: string
        target:
          $ref: '#/components/schemas/targetEnum'
        tableName:
          type: string
        unusedColumns:
          items:
            $ref: '#/components/schemas/CacheUnusedColumn'
          type: array
      type: object
    CacheUnusedColumn:
      example:
        firstReportedNotSeen: firstReportedNotSeen
        columnName: columnName
      properties:
        firstReportedNotSeen:
          type: string
        columnName:
          type: string
      type: object
    ClientAccessReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              type: string
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - data
        - data
        message: message
        status: status
    ConsistencyReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/ConsistencyReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - missingRemotely:
          - missingRemotely
          - missingRemotely
          differentLocally:
          - differentLocally
          - differentLocally
          missingLocally:
          - missingLocally
          - missingLocally
          localCount: 0
          reportedExceptions:
          - reportedExceptions
          - reportedExceptions
          remoteCount: 6
          objectType: null
          isConsistent: true
        - missingRemotely:
          - missingRemotely
          - missingRemotely
          differentLocally:
          - differentLocally
          - differentLocally
          missingLocally:
          - missingLocally
          - missingLocally
          localCount: 0
          reportedExceptions:
          - reportedExceptions
          - reportedExceptions
          remoteCount: 6
          objectType: null
          isConsistent: true
        message: message
        status: status
    ConsistencyReport:
      example:
        missingRemotely:
        - missingRemotely
        - missingRemotely
        differentLocally:
        - differentLocally
        - differentLocally
        missingLocally:
        - missingLocally
        - missingLocally
        localCount: 0
        reportedExceptions:
        - reportedExceptions
        - reportedExceptions
        remoteCount: 6
        objectType: null
        isConsistent: true
      properties:
        objectType:
          $ref: '#/components/schemas/RemoteObjectEnum'
        isConsistent:
          type: boolean
        localCount:
          type: integer
        remoteCount:
          type: integer
        missingRemotely:
          items:
            type: string
          type: array
        missingLocally:
          items:
            type: string
          type: array
        differentLocally:
          items:
            type: string
          type: array
        reportedExceptions:
          items:
            type: string
          type: array
      type: object
    RemoteObjectEnum:
      description: Type of remote object
      enum:
      - client
      - rule
      - template
      - journey
      - queue
      - license
      - recording
      - test data
      - role
      - user
      - site
      type: string
    ConversationUsageReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/ConversationUsageReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - activeConversations: 6
          conversations: 0
          bulkLoads: 1
          timestamp: timestamp
        - activeConversations: 6
          conversations: 0
          bulkLoads: 1
          timestamp: timestamp
        message: message
        status: status
    ConversationUsageReport:
      example:
        activeConversations: 6
        conversations: 0
        bulkLoads: 1
        timestamp: timestamp
      properties:
        timestamp:
          type: string
        conversations:
          type: integer
        activeConversations:
          type: integer
        bulkLoads:
          type: integer
      type: object
    FieldUsageReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/FieldUsageReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - fieldName: fieldName
          rename:
          - rename
          - rename
          usage:
          - other: other
            action: action
            step: step
            type: type
          - other: other
            action: action
            step: step
            type: type
          key: key
        - fieldName: fieldName
          rename:
          - rename
          - rename
          usage:
          - other: other
            action: action
            step: step
            type: type
          - other: other
            action: action
            step: step
            type: type
          key: key
        message: message
        status: status
    FieldUsageReport:
      example:
        fieldName: fieldName
        rename:
        - rename
        - rename
        usage:
        - other: other
          action: action
          step: step
          type: type
        - other: other
          action: action
          step: step
          type: type
        key: key
      properties:
        key:
          type: string
        fieldName:
          type: string
        rename:
          items:
            type: string
          type: array
        usage:
          items:
            $ref: '#/components/schemas/FieldUsage'
          type: array
      type: object
    FieldUsage:
      example:
        other: other
        action: action
        step: step
        type: type
      properties:
        step:
          type: string
        type:
          type: string
        action:
          type: string
        other:
          type: string
      type: object
    FlowReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/FlowReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - targetPosition: targetPosition
          markerEnd: markerEnd
          width: 5
          sourcePosition: sourcePosition
          id: id
          label: label
          position:
            x: 0
            "y": 6
          source: source
          type: type
          class: class
          height: 1
          target: target
        - targetPosition: targetPosition
          markerEnd: markerEnd
          width: 5
          sourcePosition: sourcePosition
          id: id
          label: label
          position:
            x: 0
            "y": 6
          source: source
          type: type
          class: class
          height: 1
          target: target
        message: message
        status: status
    FlowReport:
      example:
        targetPosition: targetPosition
        markerEnd: markerEnd
        width: 5
        sourcePosition: sourcePosition
        id: id
        label: label
        position:
          x: 0
          "y": 6
        source: source
        type: type
        class: class
        height: 1
        target: target
      properties:
        id:
          type: string
        label:
          type: string
        position:
          $ref: '#/components/schemas/Position'
        height:
          type: integer
        width:
          type: integer
        sourcePosition:
          type: string
        targetPosition:
          type: string
        markerEnd:
          type: string
        source:
          type: string
        type:
          type: string
        class:
          type: string
        target:
          type: string
      type: object
    Position:
      example:
        x: 0
        "y": 6
      properties:
        x:
          type: integer
        "y":
          type: integer
      type: object
    GlobalParameterReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/GlobalParameterReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - globalParam: true
          ParamValue: ParamValue
          Client: Client
          Rules:
          - Rules
          - Rules
          ParamName: ParamName
        - globalParam: true
          ParamValue: ParamValue
          Client: Client
          Rules:
          - Rules
          - Rules
          ParamName: ParamName
        message: message
        status: status
    GlobalParameterReport:
      example:
        globalParam: true
        ParamValue: ParamValue
        Client: Client
        Rules:
        - Rules
        - Rules
        ParamName: ParamName
      properties:
        Client:
          type: string
        ParamName:
          type: string
        ParamValue:
          type: string
        Rules:
          items:
            type: string
          type: array
        globalParam:
          type: boolean
      type: object
    RuleParamDetails:
      properties:
        RuleName:
          type: string
        Target:
          $ref: '#/components/schemas/targetEnum'
        Client:
          type: string
        AllParameters:
          items:
            $ref: '#/components/schemas/parameter'
          type: array
      type: object
    InternalRuleCallReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/InternalRuleCallReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - name: name
          client: client
          state: null
          url: url
          target: null
        - name: name
          client: client
          state: null
          url: url
          target: null
        message: message
        status: status
    InternalRuleCallReport:
      example:
        name: name
        client: client
        state: null
        url: url
        target: null
      properties:
        name:
          type: string
        url:
          type: string
        target:
          $ref: '#/components/schemas/targetEnum'
        client:
          type: string
        state:
          $ref: '#/components/schemas/ruleStateEnum'
      type: object
    Logged404sReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              type: string
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - data
        - data
        message: message
        status: status
    ResourceExistsReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            $ref: '#/components/schemas/ResourceExistsReport'
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
          found:
          - found
          - found
          notfound:
          - notfound
          - notfound
        message: message
        status: status
    ResourceExistsReport:
      example:
        found:
        - found
        - found
        notfound:
        - notfound
        - notfound
      properties:
        found:
          items:
            type: string
          type: array
        notfound:
          items:
            type: string
          type: array
      type: object
    RuleComplexityReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/RuleComplexityReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - minStepCount: 2
          numberOfRules: 0
          minActiveCount: 7
          averageHopCount: 2.3021358869347655
          maxActiveCount: 9.301444243932576
          minHopCount: 5
          processFutureEventSteps: 1
          averageActiveCount: 3
          cacheReadWriteRatio: 1.2315135367772556
          maxStepCount: 4
          maxHopCount: 5
          averageStepCount: 7.386281948385884
          createFutureEventSteps: 6
        - minStepCount: 2
          numberOfRules: 0
          minActiveCount: 7
          averageHopCount: 2.3021358869347655
          maxActiveCount: 9.301444243932576
          minHopCount: 5
          processFutureEventSteps: 1
          averageActiveCount: 3
          cacheReadWriteRatio: 1.2315135367772556
          maxStepCount: 4
          maxHopCount: 5
          averageStepCount: 7.386281948385884
          createFutureEventSteps: 6
        message: message
        status: status
    RuleComplexityReport:
      example:
        minStepCount: 2
        numberOfRules: 0
        minActiveCount: 7
        averageHopCount: 2.3021358869347655
        maxActiveCount: 9.301444243932576
        minHopCount: 5
        processFutureEventSteps: 1
        averageActiveCount: 3
        cacheReadWriteRatio: 1.2315135367772556
        maxStepCount: 4
        maxHopCount: 5
        averageStepCount: 7.386281948385884
        createFutureEventSteps: 6
      properties:
        numberOfRules:
          type: integer
        createFutureEventSteps:
          type: integer
        processFutureEventSteps:
          type: integer
        maxHopCount:
          type: integer
        minHopCount:
          type: integer
        averageHopCount:
          type: number
        minActiveCount:
          type: integer
        maxActiveCount:
          type: number
        averageActiveCount:
          type: integer
        minStepCount:
          type: integer
        maxStepCount:
          type: integer
        averageStepCount:
          type: number
        cacheReadWriteRatio:
          type: number
      type: object
    SnoozeReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/SnoozeReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - reason:
          - reason
          - reason
          name: name
          daysBeforeSnooze: 0.8008281904610115
          client: client
          url: url
          target: null
        - reason:
          - reason
          - reason
          name: name
          daysBeforeSnooze: 0.8008281904610115
          client: client
          url: url
          target: null
        message: message
        status: status
    SnoozeReport:
      example:
        reason:
        - reason
        - reason
        name: name
        daysBeforeSnooze: 0.8008281904610115
        client: client
        url: url
        target: null
      properties:
        name:
          type: string
        target:
          $ref: '#/components/schemas/targetEnum'
        client:
          type: string
        url:
          type: string
        daysBeforeSnooze:
          type: number
        reason:
          items:
            type: string
          type: array
      type: object
    StepTypeStatisticsReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/StepTypeStatisticsReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - data:
            max: max
            p90: p90
            p70: p70
            count: 0
            p80: p80
            p50: p50
            p60: p60
            p30: p30
            p40: p40
            p10: p10
            p20: p20
            p99: p99
            min: min
          type: type
        - data:
            max: max
            p90: p90
            p70: p70
            count: 0
            p80: p80
            p50: p50
            p60: p60
            p30: p30
            p40: p40
            p10: p10
            p20: p20
            p99: p99
            min: min
          type: type
        message: message
        status: status
    StepTypeStatisticsReport:
      example:
        data:
          max: max
          p90: p90
          p70: p70
          count: 0
          p80: p80
          p50: p50
          p60: p60
          p30: p30
          p40: p40
          p10: p10
          p20: p20
          p99: p99
          min: min
        type: type
      properties:
        type:
          type: string
        data:
          $ref: '#/components/schemas/PercentileStatistics'
      type: object
    PercentileStatistics:
      example:
        max: max
        p90: p90
        p70: p70
        count: 0
        p80: p80
        p50: p50
        p60: p60
        p30: p30
        p40: p40
        p10: p10
        p20: p20
        p99: p99
        min: min
      properties:
        p10:
          type: string
        p20:
          type: string
        p30:
          type: string
        p40:
          type: string
        p50:
          type: string
        p60:
          type: string
        p70:
          type: string
        p80:
          type: string
        p90:
          type: string
        p99:
          type: string
        count:
          type: integer
        max:
          type: string
        min:
          type: string
      type: object
    StepTypeUsageReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/StepTypeUsageReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - stepType: stepType
          count: 0
        - stepType: stepType
          count: 0
        message: message
        status: status
    StepTypeUsageReport:
      example:
        stepType: stepType
        count: 0
      properties:
        stepType:
          type: string
        count:
          type: integer
      type: object
    StepUsageReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/StepUsageReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - name: name
          client: client
          state: null
          url: url
          target: null
        - name: name
          client: client
          state: null
          url: url
          target: null
        message: message
        status: status
    StepUsageReport:
      example:
        name: name
        client: client
        state: null
        url: url
        target: null
      properties:
        url:
          type: string
        name:
          type: string
        target:
          $ref: '#/components/schemas/targetEnum'
        client:
          type: string
        state:
          $ref: '#/components/schemas/ruleStateEnum'
      type: object
    TemplateColumnReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/TemplateColumnReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - column: column
          matchedtemplates:
          - matchedtemplates
          - matchedtemplates
          table: table
        - column: column
          matchedtemplates:
          - matchedtemplates
          - matchedtemplates
          table: table
        message: message
        status: status
    TemplateColumnReport:
      example:
        column: column
        matchedtemplates:
        - matchedtemplates
        - matchedtemplates
        table: table
      properties:
        table:
          type: string
        column:
          type: string
        matchedtemplates:
          items:
            type: string
          type: array
      type: object
    TemplateInputReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/TemplateInputReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - inputFields:
          - inputFields
          - inputFields
          templateUrl: templateUrl
        - inputFields:
          - inputFields
          - inputFields
          templateUrl: templateUrl
        message: message
        status: status
    TemplateInputReport:
      example:
        inputFields:
        - inputFields
        - inputFields
        templateUrl: templateUrl
      properties:
        templateUrl:
          type: string
        inputFields:
          items:
            type: string
          type: array
      type: object
    TemplateUsageReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/TemplateUsageReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - matchedTemplates:
          - matchedTemplates
          - matchedTemplates
          name: name
          client: client
          state: null
          url: url
          target: null
        - matchedTemplates:
          - matchedTemplates
          - matchedTemplates
          name: name
          client: client
          state: null
          url: url
          target: null
        message: message
        status: status
    TemplateUsageReport:
      example:
        matchedTemplates:
        - matchedTemplates
        - matchedTemplates
        name: name
        client: client
        state: null
        url: url
        target: null
      properties:
        url:
          type: string
        name:
          type: string
        target:
          $ref: '#/components/schemas/targetEnum'
        client:
          type: string
        state:
          $ref: '#/components/schemas/ruleStateEnum'
        matchedTemplates:
          items:
            type: string
          type: array
      type: object
    TemplateValidityReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/TemplateValidityReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - reason: reason
          name: name
          client: client
          version: version
          url: url
        - reason: reason
          name: name
          client: client
          version: version
          url: url
        message: message
        status: status
    TemplateValidityReport:
      example:
        reason: reason
        name: name
        client: client
        version: version
        url: url
      properties:
        url:
          type: string
        name:
          type: string
        client:
          type: string
        version:
          type: string
        reason:
          type: string
      type: object
    TokenUseReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/TokenUseReport'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - LoginName: LoginName
          TokenName: TokenName
          Token: Token
          LastUsed: LastUsed
          IsStaticToken: true
        - LoginName: LoginName
          TokenName: TokenName
          Token: Token
          LastUsed: LastUsed
          IsStaticToken: true
        message: message
        status: status
    TokenUseReport:
      example:
        LoginName: LoginName
        TokenName: TokenName
        Token: Token
        LastUsed: LastUsed
        IsStaticToken: true
      properties:
        LoginName:
          type: string
        TokenName:
          type: string
        IsStaticToken:
          type: boolean
        LastUsed:
          type: string
        Token:
          type: string
      type: object
    WorkerThreadUsageReportResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              type: string
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - data
        - data
        message: message
        status: status
    TestDataListingResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/TestDataListing'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - lastModifiedDate: lastModifiedDate
          client: client
          ruleName: ruleName
          target: null
        - lastModifiedDate: lastModifiedDate
          client: client
          ruleName: ruleName
          target: null
        message: message
        status: status
    TestDataListing:
      example:
        lastModifiedDate: lastModifiedDate
        client: client
        ruleName: ruleName
        target: null
      properties:
        lastModifiedDate:
          type: string
        client:
          type: string
        ruleName:
          type: string
        target:
          $ref: '#/components/schemas/targetEnum'
      type: object
    RuleGroupListingResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/RuleGroupListing'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - description: description
          version: version
          url: url
          target: null
          invokeName: invokeName
          folder: folder
          enableInvoke: true
          name: name
          modifiedDate: modifiedDate
          client: client
          modifiedBy: modifiedBy
          opportunitygrid:
          - opportunity: 0
            story: 6
          - opportunity: 0
            story: 6
          referencedRules:
          - referencedRules
          - referencedRules
          parameters:
          - usingGlobal: usingGlobal
            IsEditable: true
            Description: Description
            Position: 1
            ReferencedProperty: ReferencedProperty
            Targets:
            - value: value
              target: null
            - value: value
              target: null
            ReferencedRule: ReferencedRule
            PropertyType: PropertyType
            Units: Units
            Name: Name
            Templatename: Templatename
            globalParam: globalParam
            DefaultValue: ruleGroupParameter_DefaultValue
            DataType: DataType
            PickListItems:
            - text: text
              value: value
            - text: text
              value: value
            IsVisible: true
            IconAndColor:
              background: background
              svgIcon: svgIcon
              foreground: foreground
              matIcon: matIcon
            TemplateId: TemplateId
          - usingGlobal: usingGlobal
            IsEditable: true
            Description: Description
            Position: 1
            ReferencedProperty: ReferencedProperty
            Targets:
            - value: value
              target: null
            - value: value
              target: null
            ReferencedRule: ReferencedRule
            PropertyType: PropertyType
            Units: Units
            Name: Name
            Templatename: Templatename
            globalParam: globalParam
            DefaultValue: ruleGroupParameter_DefaultValue
            DataType: DataType
            PickListItems:
            - text: text
              value: value
            - text: text
              value: value
            IsVisible: true
            IconAndColor:
              background: background
              svgIcon: svgIcon
              foreground: foreground
              matIcon: matIcon
            TemplateId: TemplateId
          statistics:
            relativeTime: relativeTime
            lastSeen: lastSeen
            cost: cost
            totalTime: totalTime
            newActiveConversation: newActiveConversation
            bulkLoad: bulkLoad
            invalidCount: invalidCount
            matchedCount: matchedCount
            newConversation: newConversation
            totalCount: totalCount
            timeoutCount: timeoutCount
            errorCount: errorCount
        - description: description
          version: version
          url: url
          target: null
          invokeName: invokeName
          folder: folder
          enableInvoke: true
          name: name
          modifiedDate: modifiedDate
          client: client
          modifiedBy: modifiedBy
          opportunitygrid:
          - opportunity: 0
            story: 6
          - opportunity: 0
            story: 6
          referencedRules:
          - referencedRules
          - referencedRules
          parameters:
          - usingGlobal: usingGlobal
            IsEditable: true
            Description: Description
            Position: 1
            ReferencedProperty: ReferencedProperty
            Targets:
            - value: value
              target: null
            - value: value
              target: null
            ReferencedRule: ReferencedRule
            PropertyType: PropertyType
            Units: Units
            Name: Name
            Templatename: Templatename
            globalParam: globalParam
            DefaultValue: ruleGroupParameter_DefaultValue
            DataType: DataType
            PickListItems:
            - text: text
              value: value
            - text: text
              value: value
            IsVisible: true
            IconAndColor:
              background: background
              svgIcon: svgIcon
              foreground: foreground
              matIcon: matIcon
            TemplateId: TemplateId
          - usingGlobal: usingGlobal
            IsEditable: true
            Description: Description
            Position: 1
            ReferencedProperty: ReferencedProperty
            Targets:
            - value: value
              target: null
            - value: value
              target: null
            ReferencedRule: ReferencedRule
            PropertyType: PropertyType
            Units: Units
            Name: Name
            Templatename: Templatename
            globalParam: globalParam
            DefaultValue: ruleGroupParameter_DefaultValue
            DataType: DataType
            PickListItems:
            - text: text
              value: value
            - text: text
              value: value
            IsVisible: true
            IconAndColor:
              background: background
              svgIcon: svgIcon
              foreground: foreground
              matIcon: matIcon
            TemplateId: TemplateId
          statistics:
            relativeTime: relativeTime
            lastSeen: lastSeen
            cost: cost
            totalTime: totalTime
            newActiveConversation: newActiveConversation
            bulkLoad: bulkLoad
            invalidCount: invalidCount
            matchedCount: matchedCount
            newConversation: newConversation
            totalCount: totalCount
            timeoutCount: timeoutCount
            errorCount: errorCount
        message: message
        status: status
    RuleGroupListing:
      example:
        description: description
        version: version
        url: url
        target: null
        invokeName: invokeName
        folder: folder
        enableInvoke: true
        name: name
        modifiedDate: modifiedDate
        client: client
        modifiedBy: modifiedBy
        opportunitygrid:
        - opportunity: 0
          story: 6
        - opportunity: 0
          story: 6
        referencedRules:
        - referencedRules
        - referencedRules
        parameters:
        - usingGlobal: usingGlobal
          IsEditable: true
          Description: Description
          Position: 1
          ReferencedProperty: ReferencedProperty
          Targets:
          - value: value
            target: null
          - value: value
            target: null
          ReferencedRule: ReferencedRule
          PropertyType: PropertyType
          Units: Units
          Name: Name
          Templatename: Templatename
          globalParam: globalParam
          DefaultValue: ruleGroupParameter_DefaultValue
          DataType: DataType
          PickListItems:
          - text: text
            value: value
          - text: text
            value: value
          IsVisible: true
          IconAndColor:
            background: background
            svgIcon: svgIcon
            foreground: foreground
            matIcon: matIcon
          TemplateId: TemplateId
        - usingGlobal: usingGlobal
          IsEditable: true
          Description: Description
          Position: 1
          ReferencedProperty: ReferencedProperty
          Targets:
          - value: value
            target: null
          - value: value
            target: null
          ReferencedRule: ReferencedRule
          PropertyType: PropertyType
          Units: Units
          Name: Name
          Templatename: Templatename
          globalParam: globalParam
          DefaultValue: ruleGroupParameter_DefaultValue
          DataType: DataType
          PickListItems:
          - text: text
            value: value
          - text: text
            value: value
          IsVisible: true
          IconAndColor:
            background: background
            svgIcon: svgIcon
            foreground: foreground
            matIcon: matIcon
          TemplateId: TemplateId
        statistics:
          relativeTime: relativeTime
          lastSeen: lastSeen
          cost: cost
          totalTime: totalTime
          newActiveConversation: newActiveConversation
          bulkLoad: bulkLoad
          invalidCount: invalidCount
          matchedCount: matchedCount
          newConversation: newConversation
          totalCount: totalCount
          timeoutCount: timeoutCount
          errorCount: errorCount
      properties:
        description:
          type: string
        version:
          type: string
        url:
          type: string
        target:
          $ref: '#/components/schemas/targetEnum'
        invokeName:
          type: string
        folder:
          type: string
        enableInvoke:
          type: boolean
        name:
          type: string
        modifiedDate:
          type: string
        client:
          type: string
        modifiedBy:
          type: string
        opportunitygrid:
          items:
            $ref: '#/components/schemas/opportunitygrid'
          type: array
        referencedRules:
          items:
            type: string
          type: array
        parameters:
          items:
            $ref: '#/components/schemas/ruleGroupParameter'
          type: array
        statistics:
          $ref: '#/components/schemas/RuleGroupStatistics'
      type: object
    RuleGroupStatistics:
      example:
        relativeTime: relativeTime
        lastSeen: lastSeen
        cost: cost
        totalTime: totalTime
        newActiveConversation: newActiveConversation
        bulkLoad: bulkLoad
        invalidCount: invalidCount
        matchedCount: matchedCount
        newConversation: newConversation
        totalCount: totalCount
        timeoutCount: timeoutCount
        errorCount: errorCount
      properties:
        relativeTime:
          type: string
        lastSeen:
          type: string
        cost:
          type: string
        totalTime:
          type: string
        newActiveConversation:
          type: string
        bulkLoad:
          type: string
        invalidCount:
          type: string
        matchedCount:
          type: string
        newConversation:
          type: string
        totalCount:
          type: string
        timeoutCount:
          type: string
        errorCount:
          type: string
      type: object
    RuleGroup:
      example:
        enableInvoke: true
        name: name
        description: description
        referencedRules:
        - "[\"target/client/rule1\",\"target/client/rule2\"]"
        - "[\"target/client/rule1\",\"target/client/rule2\"]"
      properties:
        description:
          description: A description of the rule group
          type: string
        enableInvoke:
          description: "If you want to allow this rule group to be invoked, set this\
            \ to true"
          type: boolean
        name:
          description: The name of the rule group
          type: string
        referencedRules:
          description: "If you want the rule group to reference rules, provide the\
            \ list here"
          items:
            example: "[\"target/client/rule1\",\"target/client/rule2\"]"
            type: string
          type: array
      type: object
    opportunitygrid:
      additionalProperties: true
      example:
        opportunity: 0
        story: 6
      properties:
        opportunity:
          type: integer
        story:
          type: integer
      type: object
    RuleGroupCreation:
      allOf:
      - $ref: '#/components/schemas/RuleGroup'
      - properties:
          rename:
            type: string
          invokeName:
            type: string
          parameters:
            items:
              $ref: '#/components/schemas/ruleGroupParameter'
            type: array
    ClusterResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/ClusterDetails'
            type: array
          routeTable:
            $ref: '#/components/schemas/ClusterResponse_allOf_routeTable'
          information:
            type: string
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - nodeName: nodeName
          public_ip: public_ip
          restartCount: 0
          firstDownTime: firstDownTime
          nodeDescription: nodeDescription
          reportedBy: reportedBy
          version: version
          consistency: consistency
          bootstrapVersion: 6
          serverSettings:
          - name: name
            attributes:
            - name: name
              value: value
              isWriteable: true
            - name: name
              value: value
              isWriteable: true
          - name: name
            attributes:
            - name: name
              value: value
              isWriteable: true
            - name: name
              value: value
              isWriteable: true
          lastSeen: 2000-01-23T04:56:07.000+00:00
          host: host
          state: state
        - nodeName: nodeName
          public_ip: public_ip
          restartCount: 0
          firstDownTime: firstDownTime
          nodeDescription: nodeDescription
          reportedBy: reportedBy
          version: version
          consistency: consistency
          bootstrapVersion: 6
          serverSettings:
          - name: name
            attributes:
            - name: name
              value: value
              isWriteable: true
            - name: name
              value: value
              isWriteable: true
          - name: name
            attributes:
            - name: name
              value: value
              isWriteable: true
            - name: name
              value: value
              isWriteable: true
          lastSeen: 2000-01-23T04:56:07.000+00:00
          host: host
          state: state
        routeTable:
          routeEntries:
          - pattern: pattern
            action: action
            targetNodes:
            - targetNodes
            - targetNodes
          - pattern: pattern
            action: action
            targetNodes:
            - targetNodes
            - targetNodes
        information: information
        message: message
        status: status
    Cluster:
      example:
        nodeName: nodeName
        public_ip: public_ip
        lastSeen: 2000-01-23T04:56:07.000+00:00
        restartCount: 0
        host: host
        state: state
        firstDownTime: firstDownTime
        nodeDescription: nodeDescription
        reportedBy: reportedBy
        version: version
        consistency: consistency
        bootstrapVersion: 6
      properties:
        nodeName:
          type: string
        public_ip:
          description: The public ip of the new instance
          format: ipv4
          type: string
        lastSeen:
          format: date-time
          type: string
        restartCount:
          type: integer
        host:
          description: The internal ip address of the new instance
          format: ipv4
          type: string
        state:
          type: string
        firstDownTime:
          type: string
        nodeDescription:
          type: string
        reportedBy:
          format: ipv4
          type: string
        version:
          description: The version number of the instance
          type: string
        consistency:
          type: string
        bootstrapVersion:
          format: int32
          type: integer
      type: object
    ClusterDetails:
      allOf:
      - $ref: '#/components/schemas/Cluster'
      - properties:
          serverSettings:
            items:
              $ref: '#/components/schemas/ServerSettings'
            type: array
      example:
        nodeName: nodeName
        public_ip: public_ip
        restartCount: 0
        firstDownTime: firstDownTime
        nodeDescription: nodeDescription
        reportedBy: reportedBy
        version: version
        consistency: consistency
        bootstrapVersion: 6
        serverSettings:
        - name: name
          attributes:
          - name: name
            value: value
            isWriteable: true
          - name: name
            value: value
            isWriteable: true
        - name: name
          attributes:
          - name: name
            value: value
            isWriteable: true
          - name: name
            value: value
            isWriteable: true
        lastSeen: 2000-01-23T04:56:07.000+00:00
        host: host
        state: state
    RouteEntry:
      example:
        pattern: pattern
        action: action
        targetNodes:
        - targetNodes
        - targetNodes
      properties:
        action:
          type: string
        pattern:
          type: string
        targetNodes:
          items:
            type: string
          type: array
      type: object
    ServerSettings:
      example:
        name: name
        attributes:
        - name: name
          value: value
          isWriteable: true
        - name: name
          value: value
          isWriteable: true
      properties:
        name:
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/ServerSettingsAttribute'
          type: array
      type: object
    ServerSettingsAttribute:
      example:
        name: name
        value: value
        isWriteable: true
      properties:
        name:
          type: string
        value:
          type: string
        isWriteable:
          type: boolean
      type: object
    ClusterStreamResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/ClusterStreamData'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - currentTxBytes: 5
          description: description
          planId: planId
          totalTxBytes: 5
          txPercentage: 2
          totalRxBytes: 0
          currentRxBytes: 6
          rxPercentage: 1
        - currentTxBytes: 5
          description: description
          planId: planId
          totalTxBytes: 5
          txPercentage: 2
          totalRxBytes: 0
          currentRxBytes: 6
          rxPercentage: 1
        message: message
        status: status
    ClusterStreamData:
      example:
        currentTxBytes: 5
        description: description
        planId: planId
        totalTxBytes: 5
        txPercentage: 2
        totalRxBytes: 0
        currentRxBytes: 6
        rxPercentage: 1
      properties:
        description:
          type: string
        planId:
          type: string
        totalRxBytes:
          type: integer
        currentRxBytes:
          type: integer
        rxPercentage:
          type: integer
        totalTxBytes:
          type: integer
        currentTxBytes:
          type: integer
        txPercentage:
          type: integer
      type: object
    ClusterThroughputResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            type: integer
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data: 0
        message: message
        status: status
    ClusterSetting:
      example:
        attributeValue: attributeValue
        attributeName: attributeName
        collectionName: collectionName
      properties:
        attributeName:
          description: The name of the setting to modify
          type: string
        attributeValue:
          description: The value to set
          type: string
        collectionName:
          description: The name of the setting collection to modify
          type: string
      type: object
    QueueResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/QueueListing'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          fifo: true
          name: name
          client: client
          lock: lock
          numMessages: 0
          queueBackend: null
          url: url
          statusMessage: statusMessage
          target: target
          status: status
        - createdAt: 2000-01-23T04:56:07.000+00:00
          fifo: true
          name: name
          client: client
          lock: lock
          numMessages: 0
          queueBackend: null
          url: url
          statusMessage: statusMessage
          target: target
          status: status
        message: message
        status: status
    QueueMessageResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/QueueMessage'
            type: array
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        data:
        - sentTimestamp: sentTimestamp
          bundleId: 0
          receipt: receipt
          id: id
          nonjsonmessage: nonjsonmessage
          message: "{}"
        - sentTimestamp: sentTimestamp
          bundleId: 0
          receipt: receipt
          id: id
          nonjsonmessage: nonjsonmessage
          message: "{}"
        message: message
        status: status
    QueueMessage:
      example:
        sentTimestamp: sentTimestamp
        bundleId: 0
        receipt: receipt
        id: id
        nonjsonmessage: nonjsonmessage
        message: "{}"
      properties:
        id:
          type: string
        sentTimestamp:
          type: string
        bundleId:
          type: integer
        receipt:
          type: string
        message:
          type: object
        nonjsonmessage:
          type: string
      type: object
    QueuePostMessageResponse:
      allOf:
      - $ref: '#/components/schemas/success'
      - $ref: '#/components/schemas/ApiError'
      - properties:
          messageid:
            type: string
      example:
        cursor:
          total: 0
          clients:
          - clients
          - clients
          from: 6
          to: 1
        exceptionType: exceptionType
        debug: debug
        messageid: messageid
        message: message
        status: status
    QueueListing:
      additionalProperties: true
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        fifo: true
        name: name
        client: client
        lock: lock
        numMessages: 0
        queueBackend: null
        url: url
        statusMessage: statusMessage
        target: target
        status: status
      properties:
        fifo:
          type: boolean
        queueBackend:
          $ref: '#/components/schemas/QueueBackendEnum'
        name:
          type: string
        client:
          type: string
        target:
          type: string
        url:
          type: string
        lock:
          type: string
        status:
          type: string
        statusMessage:
          type: string
        numMessages:
          type: integer
        createdAt:
          format: date-time
          type: string
      type: object
    QueueDetails:
      example:
        schema:
          key:
          - isSystem: true
            streamKey: streamKey
            indexLevel: 0
            storageHint: storageHint
            issankey: true
            dataType: dataType
            precision: 1
            name: name
            width: 6
            keyName: keyName
            required: true
          - isSystem: true
            streamKey: streamKey
            indexLevel: 0
            storageHint: storageHint
            issankey: true
            dataType: dataType
            precision: 1
            name: name
            width: 6
            keyName: keyName
            required: true
        fifo: true
        queueBackend: null
      properties:
        fifo:
          type: boolean
        queueBackend:
          $ref: '#/components/schemas/QueueBackendEnum'
        schema:
          additionalProperties:
            items:
              $ref: '#/components/schemas/QueueField'
            type: array
          type: object
      type: object
    QueueField:
      example:
        isSystem: true
        streamKey: streamKey
        indexLevel: 0
        storageHint: storageHint
        issankey: true
        dataType: dataType
        precision: 1
        name: name
        width: 6
        keyName: keyName
        required: true
      properties:
        isSystem:
          type: boolean
        streamKey:
          nullable: true
          type: string
        indexLevel:
          type: integer
        storageHint:
          nullable: true
          type: string
        dataType:
          type: string
        name:
          type: string
        width:
          type: integer
        required:
          type: boolean
        issankey:
          type: boolean
        precision:
          type: integer
        keyName:
          type: string
      type: object
    QueueBackendEnum:
      enum:
      - sqs
      - rabbit
      type: string
    RuleGroupDestinationTarget:
      example:
        destinationtarget: null
      properties:
        destinationtarget:
          $ref: '#/components/schemas/targetEnum'
      type: object
    _file__client___target___filename__post_request:
      properties:
        file:
          format: binary
          type: string
      type: object
    _template__client___templatename__post_request:
      properties:
        file:
          format: binary
          type: string
        settings:
          type: string
      type: object
    success_cursor:
      example:
        total: 0
        clients:
        - clients
        - clients
        from: 6
        to: 1
      properties:
        total:
          description: How many values match the request?
          type: integer
        from:
          description: What is the 0-based index of the first item returned in the
            data
          type: integer
        to:
          description: What is the 0-based index of the last item returned in the
            data
          type: integer
        clients:
          description: The clients that are included in this result
          items:
            type: string
          type: array
    outputConnector_realtimeOutputSteps_inner:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    ruleGroupParameter_DefaultValue_oneOf:
      example:
        detailsOfDataGrid:
          detailsOfDataGrid:
            columnFormat:
            - ""
            - yyyy/MM/dd
            - ""
            - ""
            - ""
            columnHeader:
            - busgoal
            - adate
            - header
            - hero
            - skyscraper
            columnType:
            - String
            - Date
            - String
            - String
            - String
            data:
            - - upsell
              - 2010-12-25T12:00:00Z
              - default.jpg
              - default.jpg
              - default.jpg
      properties:
        detailsOfDataGrid:
          $ref: '#/components/schemas/DataGridDetails'
      type: object
    ruleGroupParameter_DefaultValue:
      oneOf:
      - type: string
      - $ref: '#/components/schemas/ruleGroupParameter_DefaultValue_oneOf'
    LogsData_agent:
      additionalProperties: true
      example:
        type: type
        version: version
      properties:
        type:
          type: string
        version:
          type: string
      type: object
    LogsData_ecs:
      additionalProperties: true
      example:
        version: version
      properties:
        version:
          type: string
      type: object
    LogsData_event:
      additionalProperties: true
      example:
        original: original
      properties:
        original:
          type: string
      type: object
    LogsData_fields:
      additionalProperties: true
      example:
        env: env
        version: version
      properties:
        env:
          type: string
        version:
          type: string
      type: object
    LogsData_host:
      additionalProperties: true
      example:
        os: "{}"
        containerized: true
        name: name
      properties:
        containerized:
          type: boolean
        name:
          type: string
        os:
          type: object
      type: object
    LogsData_input:
      additionalProperties: true
      example:
        type: type
      properties:
        type:
          type: string
      type: object
    LogsData_log_file:
      additionalProperties: true
      example:
        path: path
      properties:
        path:
          type: string
      type: object
    LogsData_log:
      additionalProperties: true
      example:
        file:
          path: path
        offset: 0
      properties:
        file:
          $ref: '#/components/schemas/LogsData_log_file'
        offset:
          type: integer
      type: object
    ClusterResponse_allOf_routeTable:
      example:
        routeEntries:
        - pattern: pattern
          action: action
          targetNodes:
          - targetNodes
          - targetNodes
        - pattern: pattern
          action: action
          targetNodes:
          - targetNodes
          - targetNodes
      properties:
        routeEntries:
          items:
            $ref: '#/components/schemas/RouteEntry'
          type: array
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: api_key
      type: apiKey

