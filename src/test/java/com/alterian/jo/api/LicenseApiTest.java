/*
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.jo.api;

import com.alterian.jo.ApiException;
import com.alterian.jo.model.LicenseData;
import com.alterian.jo.model.LicenseList;
import com.alterian.jo.model.ModelApiResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LicenseApi
 */
@Disabled
public class LicenseApiTest {

    private final LicenseApi api = new LicenseApi();

    /**
     * Get the currently active license for a client
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licenseClientActiveGetTest() throws ApiException {
        String client = null;
        LicenseList response = api.licenseClientActiveGet(client);
        // TODO: test validations
    }

    /**
     * Get all licenses for the specified client
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licenseClientGetTest() throws ApiException {
        String client = null;
        LicenseList response = api.licenseClientGet(client);
        // TODO: test validations
    }

    /**
     * Delete specified license
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licenseClientLicenseDeleteTest() throws ApiException {
        String client = null;
        String license = null;
        ModelApiResponse response = api.licenseClientLicenseDelete(client, license);
        // TODO: test validations
    }

    /**
     * Get a specific license
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licenseClientLicenseGetTest() throws ApiException {
        String client = null;
        String license = null;
        LicenseList response = api.licenseClientLicenseGet(client, license);
        // TODO: test validations
    }

    /**
     * Create a new license
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licenseClientLicensePostTest() throws ApiException {
        String client = null;
        LicenseData licenseData = null;
        String license = null;
        ModelApiResponse response = api.licenseClientLicensePost(client, licenseData, license);
        // TODO: test validations
    }

    /**
     * Create or update a license
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licenseClientLicensePutTest() throws ApiException {
        String client = null;
        String body = null;
        String license = null;
        ModelApiResponse response = api.licenseClientLicensePut(client, body, license);
        // TODO: test validations
    }

    /**
     * Get all licenses for all clients that your login can access
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licenseGetTest() throws ApiException {
        LicenseList response = api.licenseGet();
        // TODO: test validations
    }

}
