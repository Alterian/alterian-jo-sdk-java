/*
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.29.139
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.jo.model;

import com.alterian.jo.model.LogLevelEnum;
import com.alterian.jo.model.PriorityWeighting;
import com.alterian.jo.model.RuleParameter;
import com.alterian.jo.model.RuleStateEnum;
import com.alterian.jo.model.Statistics;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for RuleData
 */
public class RuleDataTest {
    private final RuleData model = new RuleData();

    /**
     * Model tests for RuleData
     */
    @Test
    public void testRuleData() {
        // TODO: test RuleData
    }

    /**
     * Test the property 'apiVersion'
     */
    @Test
    public void apiVersionTest() {
        // TODO: test apiVersion
    }

    /**
     * Test the property 'autoloader'
     */
    @Test
    public void autoloaderTest() {
        // TODO: test autoloader
    }

    /**
     * Test the property 'client'
     */
    @Test
    public void clientTest() {
        // TODO: test client
    }

    /**
     * Test the property 'datagrids'
     */
    @Test
    public void datagridsTest() {
        // TODO: test datagrids
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'edges'
     */
    @Test
    public void edgesTest() {
        // TODO: test edges
    }

    /**
     * Test the property 'exampleData'
     */
    @Test
    public void exampleDataTest() {
        // TODO: test exampleData
    }

    /**
     * Test the property 'hasAutoloader'
     */
    @Test
    public void hasAutoloaderTest() {
        // TODO: test hasAutoloader
    }

    /**
     * Test the property 'hasRuledesigner'
     */
    @Test
    public void hasRuledesignerTest() {
        // TODO: test hasRuledesigner
    }

    /**
     * Test the property 'helpLink'
     */
    @Test
    public void helpLinkTest() {
        // TODO: test helpLink
    }

    /**
     * Test the property 'isValid'
     */
    @Test
    public void isValidTest() {
        // TODO: test isValid
    }

    /**
     * Test the property 'journeys'
     */
    @Test
    public void journeysTest() {
        // TODO: test journeys
    }

    /**
     * Test the property 'lastSeen'
     */
    @Test
    public void lastSeenTest() {
        // TODO: test lastSeen
    }

    /**
     * Test the property 'latestTemplateVersions'
     */
    @Test
    public void latestTemplateVersionsTest() {
        // TODO: test latestTemplateVersions
    }

    /**
     * Test the property 'logLevel'
     */
    @Test
    public void logLevelTest() {
        // TODO: test logLevel
    }

    /**
     * Test the property 'modifiedDate'
     */
    @Test
    public void modifiedDateTest() {
        // TODO: test modifiedDate
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'newerTemplateVersion'
     */
    @Test
    public void newerTemplateVersionTest() {
        // TODO: test newerTemplateVersion
    }

    /**
     * Test the property 'parameters'
     */
    @Test
    public void parametersTest() {
        // TODO: test parameters
    }

    /**
     * Test the property 'priorityWeighting'
     */
    @Test
    public void priorityWeightingTest() {
        // TODO: test priorityWeighting
    }

    /**
     * Test the property 'relativeTime'
     */
    @Test
    public void relativeTimeTest() {
        // TODO: test relativeTime
    }

    /**
     * Test the property 'requestedAt'
     */
    @Test
    public void requestedAtTest() {
        // TODO: test requestedAt
    }

    /**
     * Test the property 'rulegroups'
     */
    @Test
    public void rulegroupsTest() {
        // TODO: test rulegroups
    }

    /**
     * Test the property 'securityOption'
     */
    @Test
    public void securityOptionTest() {
        // TODO: test securityOption
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'stateModifiedDate'
     */
    @Test
    public void stateModifiedDateTest() {
        // TODO: test stateModifiedDate
    }

    /**
     * Test the property 'statistics'
     */
    @Test
    public void statisticsTest() {
        // TODO: test statistics
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'templateName'
     */
    @Test
    public void templateNameTest() {
        // TODO: test templateName
    }

    /**
     * Test the property 'templateURL'
     */
    @Test
    public void templateURLTest() {
        // TODO: test templateURL
    }

    /**
     * Test the property 'templateVersion'
     */
    @Test
    public void templateVersionTest() {
        // TODO: test templateVersion
    }

    /**
     * Test the property 'tiles'
     */
    @Test
    public void tilesTest() {
        // TODO: test tiles
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'urlPath'
     */
    @Test
    public void urlPathTest() {
        // TODO: test urlPath
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'wtlLoggingActive'
     */
    @Test
    public void wtlLoggingActiveTest() {
        // TODO: test wtlLoggingActive
    }

    /**
     * Test the property 'wtlLoggingAllowed'
     */
    @Test
    public void wtlLoggingAllowedTest() {
        // TODO: test wtlLoggingAllowed
    }

    /**
     * Test the property 'requestContentType'
     */
    @Test
    public void requestContentTypeTest() {
        // TODO: test requestContentType
    }

    /**
     * Test the property 'snoozed'
     */
    @Test
    public void snoozedTest() {
        // TODO: test snoozed
    }

}
