/*
 * Journey Orchestration API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.30.49
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alterian.jo.model;

import java.util.Objects;
import com.alterian.jo.model.Opportunitygrid;
import com.alterian.jo.model.RuleGroupParameter;
import com.alterian.jo.model.RuleGroupStatistics;
import com.alterian.jo.model.TargetEnum;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.alterian.jo.JSON;

/**
 * RuleGroupListing
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class RuleGroupListing {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_TARGET = "target";
  @SerializedName(SERIALIZED_NAME_TARGET)
  private TargetEnum target;

  public static final String SERIALIZED_NAME_INVOKE_NAME = "invokeName";
  @SerializedName(SERIALIZED_NAME_INVOKE_NAME)
  private String invokeName;

  public static final String SERIALIZED_NAME_FOLDER = "folder";
  @SerializedName(SERIALIZED_NAME_FOLDER)
  private String folder;

  public static final String SERIALIZED_NAME_ENABLE_INVOKE = "enableInvoke";
  @SerializedName(SERIALIZED_NAME_ENABLE_INVOKE)
  private Boolean enableInvoke;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private String modifiedDate;

  public static final String SERIALIZED_NAME_CLIENT = "client";
  @SerializedName(SERIALIZED_NAME_CLIENT)
  private String client;

  public static final String SERIALIZED_NAME_MODIFIED_BY = "modifiedBy";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY)
  private String modifiedBy;

  public static final String SERIALIZED_NAME_OPPORTUNITYGRID = "opportunitygrid";
  @SerializedName(SERIALIZED_NAME_OPPORTUNITYGRID)
  private List<Opportunitygrid> opportunitygrid;

  public static final String SERIALIZED_NAME_REFERENCED_RULES = "referencedRules";
  @SerializedName(SERIALIZED_NAME_REFERENCED_RULES)
  private List<String> referencedRules;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<RuleGroupParameter> parameters;

  public static final String SERIALIZED_NAME_STATISTICS = "statistics";
  @SerializedName(SERIALIZED_NAME_STATISTICS)
  private RuleGroupStatistics statistics;

  public RuleGroupListing() {
  }

  public RuleGroupListing description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public RuleGroupListing version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  public RuleGroupListing url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public RuleGroupListing target(TargetEnum target) {
    this.target = target;
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @javax.annotation.Nullable
  public TargetEnum getTarget() {
    return target;
  }

  public void setTarget(TargetEnum target) {
    this.target = target;
  }


  public RuleGroupListing invokeName(String invokeName) {
    this.invokeName = invokeName;
    return this;
  }

   /**
   * Get invokeName
   * @return invokeName
  **/
  @javax.annotation.Nullable
  public String getInvokeName() {
    return invokeName;
  }

  public void setInvokeName(String invokeName) {
    this.invokeName = invokeName;
  }


  public RuleGroupListing folder(String folder) {
    this.folder = folder;
    return this;
  }

   /**
   * Get folder
   * @return folder
  **/
  @javax.annotation.Nullable
  public String getFolder() {
    return folder;
  }

  public void setFolder(String folder) {
    this.folder = folder;
  }


  public RuleGroupListing enableInvoke(Boolean enableInvoke) {
    this.enableInvoke = enableInvoke;
    return this;
  }

   /**
   * Get enableInvoke
   * @return enableInvoke
  **/
  @javax.annotation.Nullable
  public Boolean getEnableInvoke() {
    return enableInvoke;
  }

  public void setEnableInvoke(Boolean enableInvoke) {
    this.enableInvoke = enableInvoke;
  }


  public RuleGroupListing name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public RuleGroupListing modifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  public String getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(String modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public RuleGroupListing client(String client) {
    this.client = client;
    return this;
  }

   /**
   * Get client
   * @return client
  **/
  @javax.annotation.Nullable
  public String getClient() {
    return client;
  }

  public void setClient(String client) {
    this.client = client;
  }


  public RuleGroupListing modifiedBy(String modifiedBy) {
    this.modifiedBy = modifiedBy;
    return this;
  }

   /**
   * Get modifiedBy
   * @return modifiedBy
  **/
  @javax.annotation.Nullable
  public String getModifiedBy() {
    return modifiedBy;
  }

  public void setModifiedBy(String modifiedBy) {
    this.modifiedBy = modifiedBy;
  }


  public RuleGroupListing opportunitygrid(List<Opportunitygrid> opportunitygrid) {
    this.opportunitygrid = opportunitygrid;
    return this;
  }

  public RuleGroupListing addOpportunitygridItem(Opportunitygrid opportunitygridItem) {
    if (this.opportunitygrid == null) {
      this.opportunitygrid = new ArrayList<>();
    }
    this.opportunitygrid.add(opportunitygridItem);
    return this;
  }

   /**
   * Get opportunitygrid
   * @return opportunitygrid
  **/
  @javax.annotation.Nullable
  public List<Opportunitygrid> getOpportunitygrid() {
    return opportunitygrid;
  }

  public void setOpportunitygrid(List<Opportunitygrid> opportunitygrid) {
    this.opportunitygrid = opportunitygrid;
  }


  public RuleGroupListing referencedRules(List<String> referencedRules) {
    this.referencedRules = referencedRules;
    return this;
  }

  public RuleGroupListing addReferencedRulesItem(String referencedRulesItem) {
    if (this.referencedRules == null) {
      this.referencedRules = new ArrayList<>();
    }
    this.referencedRules.add(referencedRulesItem);
    return this;
  }

   /**
   * Get referencedRules
   * @return referencedRules
  **/
  @javax.annotation.Nullable
  public List<String> getReferencedRules() {
    return referencedRules;
  }

  public void setReferencedRules(List<String> referencedRules) {
    this.referencedRules = referencedRules;
  }


  public RuleGroupListing parameters(List<RuleGroupParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public RuleGroupListing addParametersItem(RuleGroupParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @javax.annotation.Nullable
  public List<RuleGroupParameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<RuleGroupParameter> parameters) {
    this.parameters = parameters;
  }


  public RuleGroupListing statistics(RuleGroupStatistics statistics) {
    this.statistics = statistics;
    return this;
  }

   /**
   * Get statistics
   * @return statistics
  **/
  @javax.annotation.Nullable
  public RuleGroupStatistics getStatistics() {
    return statistics;
  }

  public void setStatistics(RuleGroupStatistics statistics) {
    this.statistics = statistics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RuleGroupListing ruleGroupListing = (RuleGroupListing) o;
    return Objects.equals(this.description, ruleGroupListing.description) &&
        Objects.equals(this.version, ruleGroupListing.version) &&
        Objects.equals(this.url, ruleGroupListing.url) &&
        Objects.equals(this.target, ruleGroupListing.target) &&
        Objects.equals(this.invokeName, ruleGroupListing.invokeName) &&
        Objects.equals(this.folder, ruleGroupListing.folder) &&
        Objects.equals(this.enableInvoke, ruleGroupListing.enableInvoke) &&
        Objects.equals(this.name, ruleGroupListing.name) &&
        Objects.equals(this.modifiedDate, ruleGroupListing.modifiedDate) &&
        Objects.equals(this.client, ruleGroupListing.client) &&
        Objects.equals(this.modifiedBy, ruleGroupListing.modifiedBy) &&
        Objects.equals(this.opportunitygrid, ruleGroupListing.opportunitygrid) &&
        Objects.equals(this.referencedRules, ruleGroupListing.referencedRules) &&
        Objects.equals(this.parameters, ruleGroupListing.parameters) &&
        Objects.equals(this.statistics, ruleGroupListing.statistics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, version, url, target, invokeName, folder, enableInvoke, name, modifiedDate, client, modifiedBy, opportunitygrid, referencedRules, parameters, statistics);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuleGroupListing {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    invokeName: ").append(toIndentedString(invokeName)).append("\n");
    sb.append("    folder: ").append(toIndentedString(folder)).append("\n");
    sb.append("    enableInvoke: ").append(toIndentedString(enableInvoke)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    modifiedBy: ").append(toIndentedString(modifiedBy)).append("\n");
    sb.append("    opportunitygrid: ").append(toIndentedString(opportunitygrid)).append("\n");
    sb.append("    referencedRules: ").append(toIndentedString(referencedRules)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    statistics: ").append(toIndentedString(statistics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("version");
    openapiFields.add("url");
    openapiFields.add("target");
    openapiFields.add("invokeName");
    openapiFields.add("folder");
    openapiFields.add("enableInvoke");
    openapiFields.add("name");
    openapiFields.add("modifiedDate");
    openapiFields.add("client");
    openapiFields.add("modifiedBy");
    openapiFields.add("opportunitygrid");
    openapiFields.add("referencedRules");
    openapiFields.add("parameters");
    openapiFields.add("statistics");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to RuleGroupListing
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RuleGroupListing.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RuleGroupListing is not found in the empty JSON string", RuleGroupListing.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RuleGroupListing.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RuleGroupListing` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      // validate the optional field `target`
      if (jsonObj.get("target") != null && !jsonObj.get("target").isJsonNull()) {
        TargetEnum.validateJsonElement(jsonObj.get("target"));
      }
      if ((jsonObj.get("invokeName") != null && !jsonObj.get("invokeName").isJsonNull()) && !jsonObj.get("invokeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invokeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invokeName").toString()));
      }
      if ((jsonObj.get("folder") != null && !jsonObj.get("folder").isJsonNull()) && !jsonObj.get("folder").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `folder` to be a primitive type in the JSON string but got `%s`", jsonObj.get("folder").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("modifiedDate") != null && !jsonObj.get("modifiedDate").isJsonNull()) && !jsonObj.get("modifiedDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedDate").toString()));
      }
      if ((jsonObj.get("client") != null && !jsonObj.get("client").isJsonNull()) && !jsonObj.get("client").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `client` to be a primitive type in the JSON string but got `%s`", jsonObj.get("client").toString()));
      }
      if ((jsonObj.get("modifiedBy") != null && !jsonObj.get("modifiedBy").isJsonNull()) && !jsonObj.get("modifiedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedBy").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("opportunitygrid") != null && !jsonObj.get("opportunitygrid").isJsonNull() && !jsonObj.get("opportunitygrid").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `opportunitygrid` to be an array in the JSON string but got `%s`", jsonObj.get("opportunitygrid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("referencedRules") != null && !jsonObj.get("referencedRules").isJsonNull() && !jsonObj.get("referencedRules").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `referencedRules` to be an array in the JSON string but got `%s`", jsonObj.get("referencedRules").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("parameters") != null && !jsonObj.get("parameters").isJsonNull() && !jsonObj.get("parameters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `parameters` to be an array in the JSON string but got `%s`", jsonObj.get("parameters").toString()));
      }
      // validate the optional field `statistics`
      if (jsonObj.get("statistics") != null && !jsonObj.get("statistics").isJsonNull()) {
        RuleGroupStatistics.validateJsonElement(jsonObj.get("statistics"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RuleGroupListing.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RuleGroupListing' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RuleGroupListing> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RuleGroupListing.class));

       return (TypeAdapter<T>) new TypeAdapter<RuleGroupListing>() {
           @Override
           public void write(JsonWriter out, RuleGroupListing value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RuleGroupListing read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RuleGroupListing given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RuleGroupListing
  * @throws IOException if the JSON string is invalid with respect to RuleGroupListing
  */
  public static RuleGroupListing fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RuleGroupListing.class);
  }

 /**
  * Convert an instance of RuleGroupListing to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

